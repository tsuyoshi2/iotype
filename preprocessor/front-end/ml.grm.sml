functor MLLrValsFun (structure Token: TOKEN
                              structure Ast: AST) = 
struct
structure ParserData=
struct
structure Header = 
struct
(*#line 1.2 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(* Heavily modified from SML/NJ sources by sweeks@sweeks.com *)

(* ml.grm
 *
 * Copyright 1989,1992 by AT&T Bell Laboratories
 *)

fun reg (left, right) = Region.make {left = left, right = right}
fun error (reg, msg) = Control.error (reg, Layout.str msg, Layout.empty)

open Ast
structure Field = Record.Field
structure Srecord = SortedRecord

structure Type =
   struct
      open Type

      val tuple = Record o Srecord.tuple
      val arrow = Arrow 
      val unit = tuple (Vector.fromList nil)
   end

structure DatBind =
   struct
      open DatBind

      fun make (dbs, withtypes, left, right) =
         makeRegion' (T {datatypes = dbs, withtypes = withtypes},
                      left, right)
   end

structure Pat =
   struct
      open Pat

      fun tuple ps = Tuple ps

      val unit = tuple (Vector.fromList nil)

      val bogus = unit

      fun makeAs (p1: t, p2: t): node =
         let
            fun err () =
               error (Pat.region p1, "must have variable to left in as pattern")
            fun fixopVar (p : t) =
               case node p of
                  FlatApp ps =>
                     if 1 = Vector.length ps
                        then (case node (Vector.sub (ps, 0)) of
                                 Var {fixop,name} =>
                                    (case Longvid.split name of
                                        ([], vid) =>
                                           SOME (fixop, Vid.toVar vid)
                                      | _ =>
                                           let
                                              val () = err ()
                                           in
                                              SOME (Fixop.None, Var.bogus)
                                           end)
                               | _ => NONE)
                     else NONE
                | _ => NONE
         in
            case fixopVar p1 of
               SOME (fixop, var) =>
                  Layered {fixop = fixop, var = var,
                           constraint = NONE,
                           pat = p2}
             | NONE =>
                  case node p1 of
                     Pat.Constraint (p, t) =>
                        (case fixopVar p of
                            SOME (fixop, var) =>
                               Layered {fixop = fixop, var = var,
                                        constraint = SOME t,
                                        pat = p2}
                          | _ => (err (); bogus))
                   | _ => (err (); bogus)
         end
   end

structure Exp =
   struct
      open Exp

      fun tuple es = Record (Record.tuple es)

      val unit = tuple (Vector.fromList nil)
   end

structure Dec =
   struct
      open Dec

      fun sequence (d1: t, d2: t): t =
         makeRegion (case (node d1, node d2) of
                        (SeqDec d1, SeqDec d2) => SeqDec (Vector.concat [d1, d2])
                      | (SeqDec d1, _) =>
                           SeqDec (Vector.concat [d1, Vector.fromList [d2]])
                      | (_, SeqDec d2) =>
                           SeqDec (Vector.concat [Vector.fromList [d1], d2])
                      | _ => SeqDec (Vector.fromList [d1, d2]),
                     Region.append (region d1, region d2))
   end

structure Spec =
   struct
      open Spec

      (* Some of this mess is so that a sharing equation captures as
       * many specs as possible in its scope.
       *)
      fun seq (s: t, s': t): t =
         let
            fun reg s'' = makeRegion (s'', Region.append (region s, region s'))
         in
            case (node s, node s') of
               (Empty, _) => s'
             | (_, Empty) => s
             | (_, Seq (s1, s2)) => reg (Seq (seq (s, s1), s2))
             | (_, Sharing {spec, equations}) =>
                  reg (Sharing {spec = seq (s, spec), equations = equations})
             | _ => reg (Seq (s, s'))
         end

(*      val seq = Trace.trace2 ("Spec.seq", layout, layout, layout) seq *)
   end

fun consTopdec (d, dss) =
   case dss of
      [] => [[d]]
    | ds :: dss => (d :: ds) :: dss

type rule = Pat.t * Exp.t
type clause = {pats : Pat.t vector,
               resultType : Type.t option,
               body : Exp.t}
type clauses = clause vector
type eb = Con.t * EbRhs.t
type db = {tyvars: Tyvar.t vector,
           tycon: Tycon.t,
           cons: (Con.t * Type.t option) vector}

type strdesc = Strid.t * Sigexp.t

type wherespec = {tyvars: Tyvar.t vector,
                  longtycon: Longtycon.t,
                  ty: Type.t}

type typdesc =  {tyvars: Tyvar.t vector,
                 tycon: Tycon.t}

type valdesc = Var.t * Type.t

type exndesc = Con.t * Type.t option

type strbind = {name: Strid.t,
                def: Strexp.t,
                constraint: SigConst.t}

type sigbind = Sigid.t * Sigexp.t

type funbind = {name : Fctid.t,
                arg : FctArg.t,
                result : SigConst.t,
                body : Strexp.t}

type vb = {pat: Pat.t,
           exp: Exp.t}

type rvb = {pat: Pat.t,
            match: Match.t}

fun ensureNonqualified (ss: Symbol.t list, r: Region.t): Symbol.t * Region.t =
   case ss of
      [s] => (s, r)
    | _ => (error (r, "expected nonqualified id")
            ; (Symbol.bogus, r))

fun cons1 (x, (l, r, y)) = (x :: l, r, y)

fun augment (id, sigexp, (wherespecs, right, binds)) =
   (id, Sigexp.wheree (sigexp, Vector.fromList wherespecs,
                       Region.extendRight (Sigexp.region sigexp, right)))
   :: binds

fun 'a augment1 ((strexp: Strexp.t,
                  makesigconst: Sigexp.t -> SigConst.t,
                  sigexp: Sigexp.t),
                 (wherespecs: wherespec list,
                  right: SourcePos.t,
                  z: 'a)): Strexp.t * 'a =
   (Strexp.makeRegion
    (Strexp.Constrained
     (strexp, makesigconst (Sigexp.wheree
                            (sigexp, Vector.fromList wherespecs,
                             Region.extendRight (Sigexp.region sigexp, right)))),
     Region.extendRight (Strexp.region strexp, right)),
    z)

type 'a whereAnd = wherespec list * SourcePos.t * 'a list

  
(*#line 213.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
end
structure LrTable = Token.LrTable
structure Token = Token
local open LrTable in 
val table=let val actionRows =
"\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\006\000\093\000\007\000\051\000\013\000\049\000\
\\042\000\092\000\043\000\091\000\046\000\090\000\050\000\089\000\
\\055\000\088\000\068\000\087\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\006\000\093\000\007\000\051\000\013\000\049\000\
\\042\000\092\000\043\000\091\000\046\000\090\000\050\000\089\000\
\\068\000\087\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\015\000\048\000\
\\024\000\046\000\029\000\044\000\033\000\041\000\034\000\040\000\
\\042\000\035\000\043\000\034\000\044\000\033\000\046\000\031\000\
\\050\000\029\000\052\000\027\000\054\000\127\000\067\000\021\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\015\000\048\000\
\\024\000\046\000\029\000\044\000\033\000\041\000\034\000\040\000\
\\042\000\035\000\043\000\034\000\044\000\033\000\046\000\031\000\
\\050\000\029\000\052\000\027\000\056\000\114\000\067\000\021\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\015\000\048\000\
\\024\000\046\000\029\000\044\000\033\000\041\000\034\000\040\000\
\\042\000\035\000\043\000\034\000\044\000\033\000\046\000\031\000\
\\050\000\029\000\052\000\027\000\067\000\021\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\042\000\092\000\
\\043\000\091\000\046\000\158\000\050\000\089\000\055\000\088\000\
\\068\000\087\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\042\000\092\000\
\\043\000\091\000\046\000\158\000\050\000\089\000\055\000\195\000\
\\068\000\087\000\000\000\
\\001\000\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\042\000\092\000\
\\043\000\091\000\046\000\158\000\050\000\089\000\068\000\087\000\000\000\
\\001\000\002\000\133\000\003\000\054\000\013\000\067\000\000\000\
\\001\000\002\000\133\000\003\000\054\000\013\000\067\000\020\000\208\000\000\000\
\\001\000\002\000\133\000\003\000\054\000\013\000\067\000\020\000\208\000\
\\053\000\207\000\000\000\
\\001\000\002\000\133\000\003\000\054\000\013\000\067\000\053\000\132\000\000\000\
\\001\000\002\000\133\000\003\000\054\000\013\000\067\000\053\000\007\001\000\000\
\\001\000\003\000\042\003\008\000\041\003\009\000\041\003\010\000\041\003\
\\011\000\041\003\012\000\041\003\013\000\042\003\014\000\041\003\
\\016\000\041\003\017\000\041\003\018\000\041\003\019\000\041\003\
\\021\000\041\003\022\000\041\003\023\000\041\003\024\000\041\003\
\\025\000\041\003\026\000\041\003\027\000\041\003\028\000\041\003\
\\030\000\041\003\031\000\041\003\032\000\041\003\035\000\041\003\
\\036\000\041\003\037\000\041\003\038\000\041\003\039\000\041\003\
\\040\000\041\003\041\000\041\003\045\000\041\003\047\000\041\003\
\\048\000\041\003\049\000\041\003\051\000\041\003\053\000\041\003\
\\054\000\041\003\056\000\041\003\057\000\041\003\058\000\041\003\
\\060\000\041\003\062\000\041\003\063\000\041\003\064\000\041\003\
\\065\000\041\003\066\000\041\003\069\000\041\003\070\000\041\003\000\000\
\\001\000\003\000\054\000\000\000\
\\001\000\003\000\054\000\006\000\093\000\042\000\185\000\046\000\184\000\000\000\
\\001\000\003\000\054\000\013\000\049\000\000\000\
\\001\000\003\000\054\000\013\000\049\000\024\000\046\000\000\000\
\\001\000\003\000\054\000\013\000\049\000\044\000\108\001\061\000\107\001\000\000\
\\001\000\003\000\054\000\013\000\049\000\050\000\075\001\000\000\
\\001\000\003\000\054\000\013\000\049\000\064\000\139\001\000\000\
\\001\000\003\000\054\000\013\000\067\000\000\000\
\\001\000\003\000\054\000\013\000\067\000\019\000\159\001\050\000\164\000\000\000\
\\001\000\003\000\054\000\013\000\067\000\024\000\066\000\000\000\
\\001\000\003\000\054\000\013\000\067\000\050\000\164\000\000\000\
\\001\000\003\000\054\000\013\000\067\000\059\000\030\001\000\000\
\\001\000\003\000\054\000\013\000\067\000\064\000\185\001\000\000\
\\001\000\003\000\054\000\013\000\000\001\000\000\
\\001\000\006\000\093\000\000\000\
\\001\000\008\000\058\002\009\000\173\001\016\000\061\002\017\000\061\002\
\\019\000\058\002\022\000\058\002\023\000\058\002\026\000\058\002\
\\030\000\058\002\031\000\058\002\035\000\058\002\037\000\058\002\
\\038\000\058\002\039\000\058\002\041\000\058\002\045\000\058\002\
\\047\000\058\002\051\000\058\002\056\000\058\002\057\000\058\002\
\\060\000\058\002\062\000\058\002\064\000\058\002\065\000\058\002\
\\066\000\177\001\000\000\
\\001\000\008\000\058\002\009\000\246\001\016\000\076\002\017\000\076\002\
\\019\000\058\002\022\000\058\002\023\000\058\002\026\000\058\002\
\\030\000\058\002\031\000\058\002\035\000\058\002\037\000\058\002\
\\038\000\058\002\039\000\058\002\041\000\058\002\045\000\058\002\
\\047\000\058\002\051\000\058\002\056\000\058\002\057\000\058\002\
\\060\000\058\002\062\000\058\002\064\000\058\002\065\000\058\002\
\\066\000\177\001\000\000\
\\001\000\008\000\058\002\009\000\246\001\016\000\079\002\017\000\079\002\
\\019\000\058\002\022\000\058\002\023\000\058\002\026\000\058\002\
\\030\000\058\002\031\000\058\002\035\000\058\002\037\000\058\002\
\\038\000\058\002\039\000\058\002\041\000\058\002\045\000\058\002\
\\047\000\058\002\051\000\058\002\056\000\058\002\057\000\058\002\
\\060\000\058\002\062\000\058\002\064\000\058\002\065\000\058\002\
\\066\000\177\001\000\000\
\\001\000\008\000\066\002\009\000\066\002\016\000\063\002\017\000\063\002\
\\019\000\066\002\022\000\066\002\023\000\066\002\026\000\066\002\
\\030\000\066\002\031\000\066\002\035\000\066\002\037\000\066\002\
\\038\000\066\002\039\000\066\002\041\000\066\002\045\000\066\002\
\\047\000\066\002\051\000\066\002\056\000\066\002\057\000\066\002\
\\060\000\066\002\062\000\066\002\064\000\066\002\065\000\066\002\000\000\
\\001\000\008\000\141\002\009\000\012\002\016\000\061\002\017\000\061\002\
\\019\000\141\002\023\000\141\002\026\000\141\002\030\000\141\002\
\\031\000\141\002\037\000\141\002\038\000\141\002\039\000\141\002\
\\041\000\141\002\045\000\141\002\047\000\141\002\051\000\141\002\
\\057\000\141\002\060\000\141\002\062\000\141\002\064\000\141\002\
\\065\000\141\002\066\000\015\002\000\000\
\\001\000\008\000\141\002\009\000\027\002\016\000\076\002\017\000\076\002\
\\019\000\141\002\023\000\141\002\026\000\141\002\030\000\141\002\
\\031\000\141\002\037\000\141\002\038\000\141\002\039\000\141\002\
\\041\000\141\002\045\000\141\002\047\000\141\002\051\000\141\002\
\\057\000\141\002\060\000\141\002\062\000\141\002\064\000\141\002\
\\065\000\141\002\066\000\015\002\000\000\
\\001\000\008\000\141\002\009\000\027\002\016\000\079\002\017\000\079\002\
\\019\000\141\002\023\000\141\002\026\000\141\002\030\000\141\002\
\\031\000\141\002\037\000\141\002\038\000\141\002\039\000\141\002\
\\041\000\141\002\045\000\141\002\047\000\141\002\051\000\141\002\
\\057\000\141\002\060\000\141\002\062\000\141\002\064\000\141\002\
\\065\000\141\002\066\000\015\002\000\000\
\\001\000\010\000\072\000\016\000\071\000\018\000\220\000\032\000\070\000\
\\048\000\069\000\056\000\219\000\057\000\218\000\000\000\
\\001\000\010\000\072\000\016\000\071\000\021\000\123\001\032\000\070\000\
\\048\000\069\000\000\000\
\\001\000\010\000\072\000\016\000\071\000\022\000\118\001\032\000\070\000\
\\048\000\069\000\057\000\218\000\000\000\
\\001\000\010\000\072\000\016\000\071\000\027\000\187\000\032\000\070\000\
\\048\000\069\000\000\000\
\\001\000\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\
\\049\000\253\000\000\000\
\\001\000\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\
\\057\000\068\000\000\000\
\\001\000\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\
\\063\000\237\000\000\000\
\\001\000\011\000\001\001\018\000\086\001\056\000\085\001\000\000\
\\001\000\012\000\074\003\016\000\074\003\018\000\074\003\024\000\081\003\
\\053\000\074\003\000\000\
\\001\000\012\000\191\000\016\000\190\000\024\000\189\000\000\000\
\\001\000\012\000\191\000\016\000\190\000\024\000\012\001\000\000\
\\001\000\012\000\191\000\016\000\190\000\028\000\245\000\000\000\
\\001\000\016\000\089\001\000\000\
\\001\000\016\000\124\001\000\000\
\\001\000\016\000\179\001\017\000\178\001\000\000\
\\001\000\016\000\179\001\017\000\178\001\022\000\006\002\000\000\
\\001\000\016\000\179\001\017\000\178\001\056\000\247\001\000\000\
\\001\000\016\000\195\001\000\000\
\\001\000\016\000\199\001\000\000\
\\001\000\022\000\116\001\000\000\
\\001\000\022\000\117\001\000\000\
\\001\000\022\000\160\001\000\000\
\\001\000\022\000\186\001\000\000\
\\001\000\022\000\189\001\000\000\
\\001\000\022\000\221\001\000\000\
\\001\000\023\000\000\000\000\000\
\\001\000\024\000\214\000\000\000\
\\001\000\024\000\230\000\000\000\
\\001\000\024\000\023\001\000\000\
\\001\000\024\000\024\001\000\000\
\\001\000\024\000\025\001\000\000\
\\001\000\024\000\044\001\000\000\
\\001\000\024\000\068\001\000\000\
\\001\000\024\000\077\001\000\000\
\\001\000\024\000\200\001\000\000\
\\001\000\024\000\232\001\000\000\
\\001\000\024\000\239\001\000\000\
\\001\000\024\000\009\002\000\000\
\\001\000\029\000\092\001\000\000\
\\001\000\035\000\221\000\000\000\
\\001\000\035\000\224\000\000\000\
\\001\000\035\000\040\001\000\000\
\\001\000\035\000\222\001\000\000\
\\001\000\046\000\238\000\000\000\
\\001\000\053\000\231\000\000\000\
\\001\000\053\000\021\001\000\000\
\\001\000\053\000\087\001\000\000\
\\001\000\054\000\228\000\000\000\
\\001\000\054\000\019\001\000\000\
\\001\000\056\000\216\000\000\000\
\\001\000\056\000\217\000\000\000\
\\001\000\056\000\014\001\000\000\
\\001\000\056\000\016\001\000\000\
\\001\000\056\000\084\001\000\000\
\\001\000\056\000\126\001\000\000\
\\001\000\056\000\248\001\000\000\
\\001\000\064\000\185\001\000\000\
\\001\000\069\000\254\000\000\000\
\\033\002\000\000\
\\034\002\000\000\
\\035\002\000\000\
\\036\002\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\008\000\050\000\013\000\049\000\
\\015\000\048\000\019\000\047\000\024\000\046\000\026\000\045\000\
\\029\000\044\000\030\000\043\000\031\000\042\000\033\000\041\000\
\\034\000\040\000\037\000\039\000\038\000\038\000\039\000\037\000\
\\041\000\036\000\042\000\035\000\043\000\034\000\044\000\033\000\
\\045\000\032\000\046\000\031\000\047\000\030\000\050\000\029\000\
\\051\000\028\000\052\000\027\000\057\000\026\000\060\000\025\000\
\\062\000\024\000\064\000\023\000\065\000\022\000\067\000\021\000\000\000\
\\036\002\008\000\050\000\019\000\047\000\026\000\045\000\030\000\043\000\
\\031\000\042\000\037\000\039\000\038\000\038\000\039\000\037\000\
\\041\000\036\000\045\000\032\000\047\000\030\000\051\000\028\000\
\\057\000\026\000\060\000\025\000\062\000\024\000\064\000\023\000\
\\065\000\022\000\000\000\
\\037\002\000\000\
\\038\002\000\000\
\\039\002\000\000\
\\040\002\000\000\
\\041\002\000\000\
\\042\002\000\000\
\\043\002\000\000\
\\044\002\003\000\054\000\008\000\050\000\013\000\049\000\019\000\047\000\
\\026\000\045\000\030\000\043\000\037\000\039\000\038\000\038\000\
\\039\000\037\000\041\000\036\000\044\000\108\001\045\000\032\000\
\\047\000\030\000\051\000\028\000\057\000\118\000\061\000\107\001\
\\062\000\024\000\064\000\023\000\065\000\022\000\000\000\
\\044\002\008\000\050\000\019\000\047\000\026\000\045\000\030\000\043\000\
\\037\000\039\000\038\000\038\000\039\000\037\000\041\000\036\000\
\\045\000\032\000\047\000\030\000\051\000\028\000\057\000\118\000\
\\062\000\024\000\064\000\023\000\065\000\022\000\000\000\
\\045\002\000\000\
\\046\002\000\000\
\\047\002\000\000\
\\048\002\000\000\
\\049\002\000\000\
\\050\002\000\000\
\\051\002\000\000\
\\052\002\000\000\
\\053\002\000\000\
\\054\002\000\000\
\\055\002\000\000\
\\056\002\000\000\
\\057\002\000\000\
\\058\002\009\000\173\001\000\000\
\\059\002\000\000\
\\060\002\000\000\
\\061\002\066\000\111\001\000\000\
\\062\002\000\000\
\\063\002\000\000\
\\064\002\000\000\
\\065\002\000\000\
\\067\002\046\000\181\001\000\000\
\\068\002\000\000\
\\069\002\000\000\
\\070\002\000\000\
\\071\002\000\000\
\\072\002\000\000\
\\073\002\066\000\111\001\000\000\
\\074\002\000\000\
\\075\002\000\000\
\\076\002\009\000\225\001\066\000\111\001\000\000\
\\077\002\000\000\
\\078\002\000\000\
\\079\002\009\000\225\001\066\000\111\001\000\000\
\\080\002\000\000\
\\081\002\000\000\
\\082\002\000\000\
\\083\002\000\000\
\\084\002\000\000\
\\084\002\003\000\054\000\013\000\067\000\000\000\
\\085\002\000\000\
\\086\002\009\000\115\001\066\000\114\001\000\000\
\\086\002\009\000\229\001\066\000\114\001\000\000\
\\087\002\000\000\
\\088\002\000\000\
\\089\002\000\000\
\\090\002\000\000\
\\091\002\011\000\001\001\000\000\
\\092\002\016\000\213\000\017\000\212\000\000\000\
\\093\002\000\000\
\\094\002\000\000\
\\095\002\003\000\054\000\013\000\067\000\019\000\065\001\025\000\064\001\
\\026\000\063\001\036\000\062\001\039\000\061\001\040\000\060\001\
\\041\000\059\001\057\000\058\001\058\000\057\001\062\000\056\001\
\\064\000\055\001\065\000\054\001\000\000\
\\095\002\019\000\065\001\025\000\064\001\026\000\063\001\036\000\062\001\
\\039\000\061\001\040\000\060\001\041\000\059\001\057\000\058\001\
\\058\000\057\001\062\000\056\001\064\000\055\001\065\000\054\001\000\000\
\\096\002\000\000\
\\097\002\000\000\
\\098\002\000\000\
\\099\002\000\000\
\\100\002\000\000\
\\101\002\000\000\
\\102\002\000\000\
\\103\002\000\000\
\\104\002\000\000\
\\105\002\000\000\
\\106\002\000\000\
\\107\002\000\000\
\\108\002\000\000\
\\109\002\000\000\
\\110\002\000\000\
\\111\002\000\000\
\\112\002\000\000\
\\113\002\000\000\
\\114\002\000\000\
\\115\002\024\000\200\001\000\000\
\\116\002\000\000\
\\117\002\024\000\239\001\000\000\
\\118\002\000\000\
\\119\002\000\000\
\\120\002\009\000\002\002\066\000\001\002\000\000\
\\120\002\009\000\024\002\066\000\001\002\000\000\
\\121\002\000\000\
\\122\002\000\000\
\\123\002\000\000\
\\124\002\000\000\
\\125\002\009\000\198\001\000\000\
\\126\002\000\000\
\\127\002\000\000\
\\127\002\024\000\024\001\000\000\
\\128\002\009\000\196\001\000\000\
\\129\002\000\000\
\\130\002\011\000\001\001\000\000\
\\131\002\009\000\206\001\000\000\
\\132\002\000\000\
\\133\002\000\000\
\\134\002\049\000\208\001\000\000\
\\135\002\011\000\001\001\000\000\
\\136\002\000\000\
\\137\002\000\000\
\\138\002\000\000\
\\139\002\000\000\
\\140\002\000\000\
\\141\002\009\000\012\002\000\000\
\\142\002\000\000\
\\143\002\000\000\
\\144\002\000\000\
\\145\002\000\000\
\\146\002\000\000\
\\147\002\008\000\050\000\019\000\047\000\026\000\045\000\030\000\043\000\
\\037\000\039\000\038\000\038\000\039\000\037\000\041\000\036\000\
\\045\000\124\000\047\000\030\000\051\000\028\000\057\000\123\000\
\\064\000\023\000\065\000\022\000\000\000\
\\148\002\000\000\
\\149\002\000\000\
\\150\002\000\000\
\\151\002\000\000\
\\152\002\000\000\
\\153\002\000\000\
\\154\002\000\000\
\\155\002\000\000\
\\156\002\000\000\
\\157\002\000\000\
\\158\002\000\000\
\\159\002\000\000\
\\160\002\000\000\
\\161\002\000\000\
\\162\002\000\000\
\\163\002\000\000\
\\164\002\000\000\
\\165\002\000\000\
\\166\002\000\000\
\\167\002\000\000\
\\168\002\009\000\091\001\010\000\072\000\016\000\071\000\032\000\070\000\
\\048\000\069\000\000\000\
\\169\002\000\000\
\\170\002\000\000\
\\171\002\000\000\
\\172\002\009\000\211\001\000\000\
\\173\002\000\000\
\\174\002\016\000\243\000\000\000\
\\175\002\011\000\001\001\000\000\
\\176\002\009\000\240\000\000\000\
\\177\002\000\000\
\\178\002\000\000\
\\179\002\014\000\241\000\000\000\
\\180\002\000\000\
\\181\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\000\000\
\\182\002\000\000\
\\183\002\000\000\
\\184\002\009\000\171\001\011\000\001\001\000\000\
\\185\002\000\000\
\\186\002\000\000\
\\187\002\006\000\093\000\046\000\098\000\000\000\
\\188\002\000\000\
\\189\002\000\000\
\\190\002\018\000\015\001\000\000\
\\191\002\000\000\
\\192\002\014\000\191\001\000\000\
\\193\002\000\000\
\\194\002\049\000\190\001\000\000\
\\195\002\011\000\001\001\000\000\
\\196\002\000\000\
\\197\002\000\000\
\\198\002\009\000\250\000\000\000\
\\199\002\000\000\
\\200\002\000\000\
\\201\002\000\000\
\\202\002\024\000\249\000\049\000\248\000\000\000\
\\203\002\011\000\001\001\000\000\
\\204\002\000\000\
\\205\002\000\000\
\\206\002\002\000\141\000\000\000\
\\207\002\000\000\
\\208\002\002\000\141\000\000\000\
\\209\002\000\000\
\\210\002\000\000\
\\211\002\000\000\
\\212\002\000\000\
\\213\002\000\000\
\\214\002\000\000\
\\215\002\000\000\
\\216\002\000\000\
\\217\002\000\000\
\\218\002\000\000\
\\219\002\000\000\
\\220\002\000\000\
\\221\002\000\000\
\\222\002\009\000\236\000\000\000\
\\223\002\000\000\
\\224\002\000\000\
\\225\002\070\000\235\000\000\000\
\\226\002\000\000\
\\227\002\000\000\
\\228\002\014\000\244\000\000\000\
\\229\002\000\000\
\\230\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\000\000\
\\231\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\000\000\
\\232\002\000\000\
\\233\002\018\000\232\000\000\000\
\\234\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\
\\057\000\218\000\000\000\
\\235\002\000\000\
\\236\002\000\000\
\\237\002\000\000\
\\238\002\010\000\072\000\016\000\071\000\000\000\
\\239\002\016\000\071\000\000\000\
\\240\002\011\000\001\001\000\000\
\\241\002\000\000\
\\242\002\000\000\
\\243\002\000\000\
\\244\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\000\000\
\\245\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\000\000\
\\246\002\010\000\072\000\016\000\071\000\032\000\070\000\048\000\069\000\000\000\
\\247\002\000\000\
\\248\002\000\000\
\\249\002\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\024\000\046\000\
\\033\000\041\000\042\000\035\000\043\000\034\000\044\000\033\000\
\\046\000\031\000\050\000\029\000\000\000\
\\250\002\000\000\
\\251\002\000\000\
\\252\002\000\000\
\\253\002\000\000\
\\254\002\000\000\
\\255\002\000\000\
\\000\003\000\000\
\\001\003\000\000\
\\002\003\000\000\
\\003\003\000\000\
\\004\003\000\000\
\\005\003\000\000\
\\006\003\000\000\
\\007\003\000\000\
\\008\003\000\000\
\\009\003\010\000\072\000\016\000\071\000\018\000\220\000\032\000\070\000\
\\048\000\069\000\000\000\
\\010\003\010\000\072\000\016\000\071\000\018\000\229\000\032\000\070\000\
\\048\000\069\000\000\000\
\\011\003\000\000\
\\012\003\000\000\
\\013\003\012\000\191\000\016\000\190\000\000\000\
\\014\003\011\000\001\001\000\000\
\\015\003\000\000\
\\016\003\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\042\000\092\000\
\\043\000\091\000\046\000\158\000\050\000\089\000\068\000\087\000\000\000\
\\017\003\000\000\
\\018\003\000\000\
\\019\003\000\000\
\\020\003\000\000\
\\021\003\000\000\
\\022\003\000\000\
\\023\003\000\000\
\\024\003\000\000\
\\025\003\000\000\
\\026\003\000\000\
\\027\003\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\006\000\093\000\007\000\051\000\013\000\049\000\
\\042\000\092\000\043\000\091\000\046\000\158\000\050\000\089\000\
\\068\000\087\000\000\000\
\\027\003\001\000\056\000\002\000\055\000\003\000\054\000\004\000\053\000\
\\005\000\052\000\007\000\051\000\013\000\049\000\042\000\092\000\
\\043\000\091\000\046\000\158\000\050\000\089\000\068\000\087\000\000\000\
\\028\003\000\000\
\\029\003\012\000\191\000\016\000\190\000\018\000\018\001\000\000\
\\030\003\000\000\
\\031\003\000\000\
\\032\003\018\000\022\001\000\000\
\\033\003\000\000\
\\034\003\012\000\191\000\016\000\190\000\000\000\
\\035\003\000\000\
\\036\003\012\000\096\001\000\000\
\\037\003\012\000\191\000\016\000\190\000\000\000\
\\038\003\000\000\
\\039\003\000\000\
\\040\003\011\000\001\001\000\000\
\\042\003\000\000\
\\043\003\000\000\
\\044\003\000\000\
\\045\003\000\000\
\\046\003\000\000\
\\047\003\000\000\
\\048\003\000\000\
\\049\003\000\000\
\\050\003\011\000\001\001\000\000\
\\051\003\000\000\
\\052\003\018\000\088\001\000\000\
\\053\003\000\000\
\\054\003\003\000\054\000\013\000\000\001\000\000\
\\055\003\011\000\001\001\018\000\086\001\000\000\
\\056\003\000\000\
\\057\003\000\000\
\\058\003\000\000\
\\059\003\000\000\
\\060\003\000\000\
\\061\003\000\000\
\\062\003\000\000\
\\063\003\000\000\
\\064\003\000\000\
\\065\003\000\000\
\\066\003\000\000\
\\067\003\000\000\
\\068\003\000\000\
\\069\003\000\000\
\\070\003\000\000\
\\071\003\000\000\
\\072\003\000\000\
\\073\003\000\000\
\\075\003\003\000\054\000\013\000\067\000\024\000\066\000\000\000\
\\076\003\000\000\
\\077\003\000\000\
\\078\003\000\000\
\\079\003\000\000\
\\080\003\000\000\
\\081\003\000\000\
\\082\003\000\000\
\\083\003\000\000\
\\084\003\000\000\
\\085\003\003\000\054\000\013\000\067\000\000\000\
\\086\003\000\000\
\\087\003\000\000\
\\088\003\000\000\
\\089\003\000\000\
\\090\003\000\000\
\\091\003\000\000\
\\092\003\000\000\
\\093\003\003\000\054\000\013\000\049\000\000\000\
\\094\003\000\000\
\"
val actionRowNumbers =
"\097\000\096\000\101\000\098\000\
\\110\000\102\000\060\001\135\001\
\\155\001\138\001\023\000\094\000\
\\047\001\041\000\113\000\124\001\
\\063\001\052\001\060\001\004\000\
\\000\000\254\000\021\000\021\000\
\\097\000\004\000\016\000\017\000\
\\021\001\003\000\107\000\214\000\
\\002\000\011\000\254\000\254\000\
\\019\001\017\001\004\000\008\000\
\\021\000\001\000\007\000\024\000\
\\139\001\254\000\004\000\136\001\
\\254\000\126\001\128\001\127\001\
\\137\001\125\001\129\001\099\000\
\\059\001\061\001\231\000\141\001\
\\130\001\131\001\140\001\133\001\
\\134\001\132\001\097\000\004\000\
\\007\000\015\000\004\000\058\001\
\\039\000\220\000\232\000\005\000\
\\255\000\079\001\045\000\086\001\
\\156\001\088\001\082\001\085\001\
\\083\001\089\001\006\000\017\000\
\\094\001\095\001\010\000\146\001\
\\253\000\014\000\249\000\224\000\
\\028\000\156\000\111\000\149\001\
\\062\000\103\000\150\001\100\000\
\\057\001\230\000\159\001\158\001\
\\062\001\085\000\086\000\036\000\
\\067\001\105\000\075\000\107\000\
\\107\000\076\000\218\000\217\000\
\\214\000\214\000\214\000\083\000\
\\077\001\072\001\147\001\063\000\
\\080\000\044\001\066\001\148\001\
\\225\000\014\000\032\001\036\001\
\\033\001\227\000\020\001\022\001\
\\018\001\042\000\064\001\153\001\
\\104\000\079\000\007\000\222\000\
\\243\000\245\000\246\000\241\000\
\\038\001\039\001\047\000\053\001\
\\095\001\013\001\144\001\229\000\
\\009\001\007\001\021\000\014\000\
\\025\001\023\001\226\000\026\001\
\\040\000\093\000\142\001\095\000\
\\049\001\048\001\110\001\106\001\
\\013\000\027\000\051\001\107\001\
\\116\001\154\001\015\000\012\000\
\\050\001\004\000\221\000\004\000\
\\015\000\007\000\084\001\234\000\
\\046\000\006\000\087\001\087\000\
\\001\001\088\000\097\001\084\000\
\\241\000\081\000\100\001\044\000\
\\064\000\092\001\101\001\065\000\
\\145\001\066\000\025\000\025\000\
\\025\000\160\001\069\001\070\001\
\\004\000\068\001\004\000\107\000\
\\109\000\108\000\004\000\215\000\
\\216\000\077\000\071\001\004\000\
\\004\000\065\001\008\000\067\000\
\\030\001\254\000\254\000\004\000\
\\159\000\223\000\007\000\007\000\
\\068\000\015\000\007\000\004\000\
\\012\001\011\001\015\000\019\000\
\\024\000\008\001\069\000\007\000\
\\214\000\115\001\015\000\015\000\
\\089\000\043\000\082\000\119\001\
\\048\000\112\001\055\001\235\000\
\\081\001\080\001\074\000\237\000\
\\000\001\028\000\090\001\096\001\
\\007\000\091\001\104\001\093\001\
\\009\000\007\000\015\000\018\000\
\\146\000\145\000\135\000\158\000\
\\160\000\157\000\149\000\046\001\
\\045\001\075\001\076\001\055\000\
\\056\000\038\000\214\000\078\001\
\\042\001\043\001\024\000\037\001\
\\034\001\037\000\049\000\213\000\
\\163\000\160\000\177\000\090\000\
\\023\000\254\000\021\000\020\000\
\\160\000\254\000\254\000\254\000\
\\025\000\021\000\254\000\254\000\
\\244\000\247\000\004\000\242\000\
\\040\001\041\001\014\001\157\001\
\\015\001\016\000\010\001\022\000\
\\054\001\057\000\109\001\121\001\
\\120\001\108\001\014\000\114\001\
\\015\000\111\001\008\000\015\000\
\\233\000\005\000\007\000\002\001\
\\097\001\103\001\007\000\099\001\
\\102\001\251\000\123\000\032\000\
\\121\000\029\000\050\000\114\000\
\\129\000\107\000\107\000\137\000\
\\136\000\092\000\058\000\144\000\
\\092\000\021\000\112\000\074\001\
\\073\001\059\000\005\001\035\001\
\\003\001\004\000\025\000\162\000\
\\156\000\053\000\164\000\195\000\
\\143\001\014\000\165\000\191\000\
\\166\000\054\000\174\000\179\000\
\\070\000\014\000\161\000\167\000\
\\168\000\014\000\170\000\031\001\
\\172\000\147\000\175\000\173\000\
\\198\000\201\000\169\000\027\001\
\\024\001\171\000\028\001\248\000\
\\016\001\014\000\228\000\113\001\
\\123\001\122\001\118\001\117\001\
\\236\000\239\000\098\001\105\001\
\\250\000\254\000\116\000\021\000\
\\125\000\117\000\115\000\092\000\
\\025\000\025\000\131\000\106\000\
\\060\000\078\000\138\000\254\000\
\\148\000\150\000\151\000\219\000\
\\015\000\024\000\056\001\212\000\
\\071\000\015\000\023\000\194\000\
\\254\000\025\000\016\000\178\000\
\\072\000\193\000\176\000\151\001\
\\021\000\200\000\015\000\029\001\
\\238\000\006\000\252\000\122\000\
\\030\000\128\000\127\000\126\000\
\\124\000\052\000\091\000\130\000\
\\018\000\139\000\140\000\092\000\
\\014\000\152\000\153\000\026\000\
\\006\001\004\001\018\000\197\000\
\\196\000\192\000\185\000\181\000\
\\180\000\014\000\152\001\199\000\
\\202\000\240\000\118\000\119\000\
\\026\000\133\000\134\000\051\000\
\\141\000\073\000\150\000\208\000\
\\033\000\203\000\184\000\092\000\
\\021\000\183\000\182\000\031\000\
\\132\000\143\000\142\000\015\000\
\\154\000\205\000\021\000\206\000\
\\204\000\092\000\186\000\187\000\
\\120\000\155\000\209\000\034\000\
\\188\000\189\000\026\000\207\000\
\\210\000\026\000\186\000\035\000\
\\190\000\211\000\061\000"
val gotoT =
"\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\031\000\014\000\043\000\013\000\047\000\012\000\048\000\011\000\
\\052\000\010\000\063\000\009\000\064\000\008\000\065\000\007\000\
\\071\000\006\000\083\000\030\002\111\000\005\000\112\000\004\000\
\\126\000\003\000\127\000\002\000\128\000\001\000\000\000\
\\000\000\
\\000\000\
\\031\000\014\000\052\000\010\000\111\000\005\000\112\000\004\000\
\\126\000\003\000\127\000\002\000\128\000\055\000\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\057\000\008\000\056\000\015\000\016\000\
\\016\000\015\000\063\000\009\000\064\000\008\000\065\000\007\000\
\\071\000\006\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\059\000\063\000\060\000\062\000\061\000\061\000\065\000\060\000\
\\153\000\059\000\155\000\058\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\057\000\008\000\071\000\015\000\016\000\
\\016\000\015\000\063\000\009\000\064\000\008\000\065\000\007\000\
\\071\000\006\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\072\000\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\078\000\081\000\077\000\143\000\076\000\146\000\075\000\
\\147\000\074\000\149\000\073\000\000\000\
\\138\000\095\000\139\000\094\000\143\000\076\000\145\000\093\000\
\\146\000\092\000\000\000\
\\059\000\099\000\061\000\061\000\065\000\060\000\106\000\098\000\
\\123\000\097\000\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\093\000\101\000\
\\101\000\100\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\031\000\014\000\043\000\013\000\047\000\012\000\048\000\103\000\
\\052\000\010\000\063\000\009\000\064\000\008\000\065\000\007\000\
\\071\000\006\000\111\000\005\000\112\000\004\000\126\000\003\000\
\\127\000\002\000\128\000\001\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\104\000\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\063\000\107\000\065\000\007\000\066\000\106\000\068\000\105\000\000\000\
\\063\000\009\000\064\000\008\000\065\000\007\000\071\000\108\000\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\111\000\044\000\110\000\046\000\109\000\047\000\012\000\
\\063\000\009\000\064\000\008\000\065\000\007\000\071\000\006\000\000\000\
\\031\000\014\000\052\000\010\000\111\000\115\000\112\000\004\000\
\\113\000\114\000\114\000\113\000\000\000\
\\029\000\120\000\030\000\119\000\031\000\118\000\032\000\117\000\
\\052\000\010\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\124\000\045\000\123\000\047\000\012\000\063\000\009\000\
\\064\000\008\000\065\000\007\000\071\000\006\000\000\000\
\\039\000\129\000\040\000\128\000\051\000\127\000\059\000\126\000\
\\061\000\061\000\065\000\060\000\000\000\
\\138\000\132\000\139\000\094\000\143\000\076\000\145\000\093\000\
\\146\000\092\000\000\000\
\\020\000\137\000\026\000\136\000\027\000\135\000\028\000\134\000\
\\143\000\076\000\145\000\133\000\146\000\092\000\000\000\
\\034\000\138\000\000\000\
\\034\000\140\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\141\000\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\051\000\142\000\059\000\126\000\061\000\061\000\065\000\060\000\000\000\
\\050\000\145\000\053\000\144\000\059\000\143\000\061\000\061\000\
\\065\000\060\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\151\000\010\000\150\000\
\\011\000\149\000\012\000\148\000\015\000\081\000\016\000\015\000\
\\058\000\147\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\143\000\076\000\146\000\146\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\073\000\155\000\077\000\154\000\081\000\077\000\085\000\153\000\
\\086\000\152\000\000\000\
\\014\000\161\000\035\000\160\000\038\000\159\000\059\000\158\000\
\\061\000\061\000\065\000\060\000\075\000\157\000\000\000\
\\000\000\
\\020\000\167\000\022\000\166\000\024\000\165\000\026\000\136\000\
\\027\000\135\000\028\000\134\000\084\000\164\000\143\000\076\000\
\\145\000\163\000\146\000\092\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\168\000\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\020\000\169\000\026\000\136\000\027\000\135\000\028\000\134\000\
\\143\000\076\000\145\000\133\000\146\000\092\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\059\000\063\000\060\000\062\000\061\000\061\000\065\000\060\000\
\\153\000\059\000\155\000\170\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\031\000\014\000\043\000\013\000\047\000\012\000\048\000\171\000\
\\052\000\010\000\063\000\009\000\064\000\008\000\065\000\007\000\
\\071\000\006\000\111\000\005\000\112\000\004\000\126\000\003\000\
\\127\000\002\000\128\000\001\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\172\000\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\073\000\173\000\077\000\154\000\081\000\077\000\085\000\153\000\
\\086\000\152\000\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\178\000\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\184\000\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\078\000\081\000\077\000\147\000\074\000\149\000\186\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\190\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\192\000\081\000\077\000\087\000\191\000\000\000\
\\063\000\009\000\064\000\008\000\065\000\007\000\071\000\194\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\198\000\081\000\077\000\082\000\197\000\143\000\196\000\
\\144\000\195\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\198\000\081\000\077\000\082\000\199\000\000\000\
\\051\000\204\000\059\000\203\000\061\000\061\000\065\000\060\000\
\\079\000\202\000\080\000\201\000\154\000\200\000\000\000\
\\000\000\
\\000\000\
\\061\000\208\000\065\000\060\000\136\000\207\000\000\000\
\\000\000\
\\000\000\
\\143\000\196\000\144\000\195\000\000\000\
\\096\000\209\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\063\000\107\000\065\000\007\000\066\000\106\000\068\000\213\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\031\000\014\000\052\000\010\000\111\000\115\000\112\000\004\000\
\\113\000\220\000\114\000\113\000\000\000\
\\031\000\014\000\052\000\010\000\111\000\115\000\112\000\004\000\
\\113\000\221\000\114\000\113\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\029\000\120\000\030\000\119\000\031\000\118\000\032\000\223\000\
\\052\000\010\000\000\000\
\\029\000\120\000\030\000\119\000\031\000\118\000\032\000\224\000\
\\052\000\010\000\000\000\
\\029\000\120\000\030\000\119\000\031\000\118\000\032\000\225\000\
\\052\000\010\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\061\000\208\000\065\000\060\000\136\000\231\000\000\000\
\\000\000\
\\159\000\232\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\151\000\010\000\150\000\
\\011\000\149\000\012\000\148\000\015\000\081\000\016\000\015\000\
\\058\000\237\000\063\000\080\000\065\000\007\000\072\000\079\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\018\000\240\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\198\000\081\000\077\000\082\000\197\000\000\000\
\\036\000\245\000\037\000\244\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\014\000\249\000\059\000\158\000\061\000\061\000\065\000\060\000\000\000\
\\061\000\208\000\065\000\060\000\136\000\250\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\253\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\001\001\
\\131\000\177\000\132\000\176\000\133\000\000\001\137\000\175\000\
\\143\000\174\000\000\000\
\\051\000\004\001\059\000\126\000\061\000\061\000\065\000\060\000\
\\124\000\003\001\125\000\002\001\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\006\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\007\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\008\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\009\001\081\000\077\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\192\000\081\000\077\000\087\000\011\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\013\000\015\001\000\000\
\\000\000\
\\018\000\018\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\097\000\027\001\
\\098\000\026\001\099\000\025\001\101\000\024\001\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\097\000\029\001\
\\098\000\026\001\099\000\025\001\101\000\024\001\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\098\000\030\001\
\\099\000\025\001\101\000\024\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\032\001\046\000\031\001\047\000\012\000\063\000\009\000\
\\064\000\008\000\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\034\001\044\000\033\001\047\000\012\000\063\000\009\000\
\\064\000\008\000\065\000\007\000\071\000\006\000\000\000\
\\031\000\014\000\052\000\010\000\111\000\115\000\112\000\004\000\
\\113\000\035\001\114\000\113\000\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\037\001\046\000\036\001\047\000\012\000\063\000\009\000\
\\064\000\008\000\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\124\000\045\000\039\001\047\000\012\000\063\000\009\000\
\\064\000\008\000\065\000\007\000\071\000\006\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\040\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\039\000\129\000\040\000\041\001\051\000\127\000\059\000\126\000\
\\061\000\061\000\065\000\060\000\000\000\
\\000\000\
\\000\000\
\\138\000\043\001\139\000\094\000\143\000\076\000\145\000\093\000\
\\146\000\092\000\000\000\
\\026\000\136\000\028\000\044\001\143\000\076\000\145\000\133\000\
\\146\000\092\000\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\045\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\049\000\051\001\059\000\099\000\061\000\061\000\065\000\060\000\
\\092\000\050\001\103\000\049\001\104\000\048\001\105\000\047\001\
\\123\000\046\001\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\151\000\010\000\150\000\
\\011\000\149\000\012\000\148\000\015\000\081\000\016\000\015\000\
\\058\000\064\001\063\000\080\000\065\000\007\000\072\000\079\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\151\000\010\000\150\000\
\\011\000\065\001\015\000\081\000\016\000\015\000\063\000\080\000\
\\065\000\007\000\072\000\079\000\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\067\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\154\000\081\000\077\000\085\000\153\000\086\000\068\001\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\069\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\070\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\062\000\072\001\063\000\071\001\065\000\007\000\000\000\
\\014\000\161\000\035\000\160\000\038\000\074\001\059\000\158\000\
\\061\000\061\000\065\000\060\000\075\000\157\000\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\073\000\076\001\077\000\154\000\081\000\077\000\085\000\153\000\
\\086\000\152\000\000\000\
\\029\000\120\000\030\000\119\000\031\000\118\000\032\000\077\001\
\\052\000\010\000\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\080\001\131\000\079\001\
\\132\000\078\001\143\000\174\000\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\081\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\148\000\088\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\143\000\196\000\144\000\091\001\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\092\001\081\000\077\000\000\000\
\\000\000\
\\074\000\093\001\000\000\
\\000\000\
\\051\000\204\000\059\000\203\000\061\000\061\000\065\000\060\000\
\\079\000\202\000\080\000\095\001\154\000\200\000\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\096\001\081\000\077\000\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\097\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\063\000\104\001\065\000\007\000\107\000\103\001\118\000\102\001\
\\119\000\101\001\120\000\100\001\121\000\099\001\122\000\098\001\000\000\
\\000\000\
\\000\000\
\\157\000\108\001\158\000\107\001\000\000\
\\000\000\
\\092\000\050\001\103\000\049\001\104\000\048\001\105\000\110\001\000\000\
\\000\000\
\\094\000\111\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\029\000\120\000\030\000\119\000\031\000\118\000\032\000\117\001\
\\052\000\010\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\014\000\161\000\017\000\120\001\019\000\119\001\059\000\158\000\
\\061\000\061\000\065\000\060\000\075\000\118\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\092\000\050\001\103\000\049\001\104\000\048\001\105\000\123\001\000\000\
\\000\000\
\\000\000\
\\059\000\063\000\060\000\128\001\061\000\061\000\065\000\060\000\
\\150\000\127\001\151\000\126\001\152\000\125\001\000\000\
\\138\000\132\001\139\000\094\000\141\000\131\001\142\000\130\001\
\\143\000\076\000\145\000\129\001\146\000\092\000\000\000\
\\059\000\099\000\061\000\061\000\065\000\060\000\115\000\134\001\
\\123\000\133\001\000\000\
\\063\000\107\000\065\000\007\000\066\000\136\001\067\000\135\001\000\000\
\\092\000\050\001\103\000\049\001\104\000\048\001\105\000\138\001\000\000\
\\138\000\140\001\139\000\094\000\141\000\131\001\142\000\139\001\
\\143\000\076\000\145\000\129\001\146\000\092\000\000\000\
\\141\000\131\001\142\000\142\001\143\000\076\000\145\000\141\001\
\\146\000\092\000\000\000\
\\021\000\144\001\026\000\136\000\027\000\143\001\028\000\134\000\
\\143\000\076\000\145\000\133\000\146\000\092\000\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\097\000\146\001\
\\098\000\026\001\099\000\025\001\101\000\145\001\000\000\
\\014\000\149\001\041\000\148\001\042\000\147\001\059\000\158\000\
\\061\000\061\000\065\000\060\000\000\000\
\\141\000\131\001\142\000\150\001\143\000\076\000\145\000\141\001\
\\146\000\092\000\000\000\
\\021\000\154\001\023\000\153\001\025\000\152\001\026\000\136\000\
\\027\000\143\001\028\000\134\000\084\000\151\001\143\000\076\000\
\\145\000\163\000\146\000\092\000\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\155\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\062\000\156\001\063\000\071\001\065\000\007\000\000\000\
\\000\000\
\\014\000\161\000\017\000\120\001\019\000\119\001\059\000\158\000\
\\061\000\061\000\065\000\060\000\075\000\118\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\253\000\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\159\001\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\161\001\
\\131\000\177\000\132\000\176\000\133\000\160\001\137\000\175\000\
\\143\000\174\000\000\000\
\\000\000\
\\051\000\004\001\059\000\126\000\061\000\061\000\065\000\060\000\
\\124\000\003\001\125\000\162\001\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\163\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\078\000\081\000\077\000\147\000\164\001\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\073\000\165\001\077\000\154\000\081\000\077\000\085\000\153\000\
\\086\000\152\000\000\000\
\\000\000\
\\013\000\166\001\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\167\001\081\000\077\000\000\000\
\\000\000\
\\000\000\
\\140\000\168\001\000\000\
\\000\000\
\\000\000\
\\110\000\170\001\000\000\
\\108\000\174\001\110\000\173\001\157\000\172\001\158\000\107\001\000\000\
\\000\000\
\\000\000\
\\009\000\178\001\000\000\
\\031\000\014\000\052\000\010\000\111\000\115\000\112\000\004\000\
\\113\000\180\001\114\000\113\000\000\000\
\\031\000\014\000\052\000\010\000\111\000\115\000\112\000\004\000\
\\113\000\181\001\114\000\113\000\000\000\
\\000\000\
\\000\000\
\\156\000\182\001\000\000\
\\000\000\
\\000\000\
\\156\000\185\001\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\093\000\186\001\
\\101\000\100\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\001\000\018\000\007\000\017\000\015\000\016\000\016\000\015\000\
\\043\000\190\001\047\000\012\000\063\000\009\000\064\000\008\000\
\\065\000\007\000\071\000\006\000\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\097\000\191\001\
\\098\000\026\001\099\000\025\001\101\000\024\001\000\000\
\\000\000\
\\096\000\192\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\061\000\208\000\065\000\060\000\136\000\195\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\200\001\070\000\199\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\061\000\208\000\065\000\060\000\136\000\201\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\101\000\203\001\
\\102\000\202\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\135\000\205\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\207\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\088\000\208\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\139\000\210\001\143\000\076\000\145\000\093\000\146\000\092\000\000\000\
\\000\000\
\\059\000\099\000\061\000\061\000\065\000\060\000\106\000\211\001\
\\123\000\097\000\000\000\
\\000\000\
\\000\000\
\\000\000\
\\156\000\212\001\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\098\000\213\001\
\\099\000\025\001\101\000\024\001\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\098\000\214\001\
\\099\000\025\001\101\000\024\001\000\000\
\\000\000\
\\031\000\014\000\052\000\010\000\063\000\104\001\065\000\007\000\
\\111\000\115\000\112\000\004\000\113\000\218\001\114\000\113\000\
\\118\000\217\001\119\000\216\001\121\000\215\001\122\000\098\001\000\000\
\\000\000\
\\000\000\
\\002\000\222\001\158\000\221\001\000\000\
\\143\000\076\000\145\000\224\001\146\000\092\000\000\000\
\\000\000\
\\094\000\226\001\095\000\225\001\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\228\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\014\000\161\000\017\000\120\001\019\000\229\001\059\000\158\000\
\\061\000\061\000\065\000\060\000\075\000\118\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\231\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\059\000\063\000\060\000\128\001\061\000\061\000\065\000\060\000\
\\150\000\127\001\151\000\232\001\152\000\125\001\000\000\
\\000\000\
\\141\000\131\001\142\000\233\001\143\000\076\000\145\000\141\001\
\\146\000\092\000\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\098\000\234\001\
\\099\000\025\001\101\000\024\001\000\000\
\\063\000\107\000\065\000\007\000\066\000\236\001\067\000\235\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\101\000\203\001\
\\102\000\238\001\000\000\
\\014\000\149\001\041\000\148\001\042\000\239\001\059\000\158\000\
\\061\000\061\000\065\000\060\000\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\240\001\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\000\000\
\\000\000\
\\003\000\084\000\005\000\083\000\006\000\082\000\015\000\081\000\
\\016\000\015\000\063\000\080\000\065\000\007\000\072\000\079\000\
\\077\000\192\000\081\000\077\000\087\000\241\001\000\000\
\\000\000\
\\000\000\
\\002\000\222\001\108\000\243\001\109\000\242\001\110\000\173\001\
\\158\000\221\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\157\000\172\001\158\000\107\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\063\000\104\001\065\000\007\000\118\000\247\001\119\000\216\001\
\\121\000\215\001\122\000\098\001\000\000\
\\000\000\
\\000\000\
\\156\000\248\001\000\000\
\\065\000\181\000\069\000\249\001\000\000\
\\000\000\
\\000\000\
\\059\000\102\000\061\000\061\000\065\000\060\000\093\000\186\001\
\\101\000\100\000\156\000\250\001\000\000\
\\000\000\
\\000\000\
\\054\000\253\001\063\000\104\001\065\000\007\000\118\000\102\001\
\\119\000\252\001\120\000\251\001\121\000\099\001\122\000\098\001\000\000\
\\000\000\
\\000\000\
\\000\000\
\\116\000\254\001\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\002\002\070\000\001\002\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\059\000\099\000\061\000\061\000\065\000\060\000\106\000\211\001\
\\123\000\097\000\156\000\003\002\000\000\
\\000\000\
\\000\000\
\\000\000\
\\002\000\006\002\158\000\005\002\000\000\
\\000\000\
\\094\000\226\001\095\000\008\002\000\000\
\\057\000\009\002\000\000\
\\055\000\012\002\057\000\011\002\157\000\172\001\158\000\107\001\000\000\
\\000\000\
\\000\000\
\\156\000\014\002\000\000\
\\059\000\099\000\061\000\061\000\065\000\060\000\115\000\015\002\
\\123\000\133\001\000\000\
\\000\000\
\\000\000\
\\002\000\006\002\108\000\243\001\109\000\016\002\110\000\173\001\
\\158\000\005\002\000\000\
\\000\000\
\\000\000\
\\000\000\
\\065\000\181\000\069\000\180\000\129\000\179\000\130\000\017\002\
\\131\000\177\000\132\000\176\000\137\000\175\000\143\000\174\000\000\000\
\\000\000\
\\000\000\
\\050\000\145\000\053\000\018\002\059\000\143\000\061\000\061\000\
\\065\000\060\000\000\000\
\\000\000\
\\000\000\
\\156\000\019\002\000\000\
\\116\000\021\002\117\000\020\002\000\000\
\\000\000\
\\000\000\
\\000\000\
\\000\000\
\\002\000\222\001\055\000\024\002\056\000\023\002\057\000\011\002\
\\158\000\221\001\000\000\
\\000\000\
\\000\000\
\\059\000\099\000\061\000\061\000\065\000\060\000\115\000\015\002\
\\123\000\133\001\156\000\026\002\000\000\
\\000\000\
\\000\000\
\\050\000\145\000\053\000\018\002\059\000\143\000\061\000\061\000\
\\065\000\060\000\156\000\027\002\000\000\
\\116\000\021\002\117\000\028\002\000\000\
\\002\000\006\002\055\000\024\002\056\000\029\002\057\000\011\002\
\\158\000\005\002\000\000\
\\000\000\
\\000\000\
\\000\000\
\"
val numstates = 543
val numrules = 318
val s = ref "" and index = ref 0
val string_to_int = fn () => 
let val i = !index
in index := i+2; Char.ord(String.sub(!s,i)) + Char.ord(String.sub(!s,i+1)) * 256
end
val string_to_list = fn s' =>
    let val len = String.size s'
        fun f () =
           if !index < len then string_to_int() :: f()
           else nil
   in index := 0; s := s'; f ()
   end
val string_to_pairlist = fn (conv_key,conv_entry) =>
     let fun f () =
         case string_to_int()
         of 0 => EMPTY
          | n => PAIR(conv_key (n-1),conv_entry (string_to_int()),f())
     in f
     end
val string_to_pairlist_default = fn (conv_key,conv_entry) =>
    let val conv_row = string_to_pairlist(conv_key,conv_entry)
    in fn () =>
       let val default = conv_entry(string_to_int())
           val row = conv_row()
       in (row,default)
       end
   end
val string_to_table = fn (convert_row,s') =>
    let val len = String.size s'
        fun f ()=
           if !index < len then convert_row() :: f()
           else nil
     in (s := s'; index := 0; f ())
     end
local
  val memo = Array.array(numstates+numrules,ERROR)
  val _ =let fun g i=(Array.update(memo,i,REDUCE(i-numstates)); g(i+1))
       fun f i =
            if i=numstates then g i
            else (Array.update(memo,i,SHIFT (STATE i)); f (i+1))
          in f 0 handle Subscript => ()
          end
in
val entry_to_action = fn 0 => ACCEPT | 1 => ERROR | j => Array.sub(memo,(j-2))
end
val gotoT=Array.fromList(string_to_table(string_to_pairlist(NT,STATE),gotoT))
val actionRows=string_to_table(string_to_pairlist_default(T,entry_to_action),actionRows)
val actionRowNumbers = string_to_list actionRowNumbers
val actionT = let val actionRowLookUp=
let val a=Array.fromList(actionRows) in fn i=>Array.sub(a,i) end
in Array.fromList(map actionRowLookUp actionRowNumbers)
end
in LrTable.mkLrTable {actions=actionT,gotos=gotoT,numRules=numrules,
numStates=numstates,initialState=STATE 0}
end
end
local open Header in
type pos = SourcePos.t
type arg = unit
structure MlyValue = 
struct
datatype svalue = VOID | ntVOID of unit ->  unit | WORD of unit ->  (string) | TYVAR of unit ->  (string) | STRING of unit ->  (string) | REAL of unit ->  (string) | LONGID of unit ->  (string) | INT of unit ->  (string) | CHAR of unit ->  (string) | withtypes of unit ->  (TypBind.t) | wherespecs' of unit ->  (wherespec list) | wherespecs of unit ->  (wherespec vector) | wherespec of unit ->  (wherespec) | vids of unit ->  (Vid.t list) | vidNoEqual of unit ->  (Vid.t) | vid of unit ->  (Vid.t) | var of unit ->  (Var.t) | valdescs of unit ->  (valdesc list) | valdesc of unit ->  (valdesc) | valbindTop of unit ->  (vb vector*rvb vector) | valbindRest of unit ->  (vb list*rvb list) | valbind of unit ->  (vb list*rvb list) | tyvarseq of unit ->  (Tyvar.t vector) | tyvars of unit ->  (Tyvar.t vector) | tyvar_pc of unit ->  (Tyvar.t list) | tyvar of unit ->  (Tyvar.t) | typdescs of unit ->  (typdesc list) | typdesc of unit ->  (typdesc) | typBind'' of unit ->  ({ def:Type.t,tycon:Tycon.t,tyvars:Tyvar.t vector }  list) | typBind' of unit ->  ({ def:Type.t,tycon:Tycon.t,tyvars:Tyvar.t vector }  list) | typBind of unit ->  (TypBind.t) | tynode of unit ->  (Type.node) | tycon of unit ->  (Tycon.t) | tyOpt of unit ->  (Type.t option) | ty1 of unit ->  (Type.t) | ty0_pc of unit ->  (Type.t list) | ty'node of unit ->  (Type.node) | ty' of unit ->  (Type.t) | ty of unit ->  (Type.t) | tuple_ty of unit ->  (Type.t list) | topdecs of unit ->  (Topdec.t list list) | topdecnode of unit ->  (Topdec.node) | topdec of unit ->  (Topdec.t) | tlabels of unit ->  ( ( Field.t * Type.t )  list) | tlabel of unit ->  ( ( Field.t * Type.t ) ) | strid of unit ->  (Strid.t) | strexpnode of unit ->  (Strexp.node) | strexp2node of unit ->  (Strexp.node) | strexp2 of unit ->  (Strexp.t) | strexp1 of unit ->  (Strexp.t* ( Sigexp.t -> SigConst.t ) *Sigexp.t) | strexp of unit ->  (Strexp.t) | strdescs'' of unit ->  (strdesc whereAnd) | strdescs' of unit ->  (strdesc whereAnd) | strdescs of unit ->  (strdesc list) | strdecsnode of unit ->  (Strdec.node) | strdecs of unit ->  (Strdec.t) | strdecnode of unit ->  (Strdec.node) | strdec of unit ->  (Strdec.t) | strbinds'2 of unit ->  (strbind list) | strbinds'1' of unit ->  (strbind whereAnd) | strbinds'1 of unit ->  (strbind whereAnd) | strbinds' of unit ->  (Strexp.t*strbind list) | strbinds of unit ->  (strbind list) | specs of unit ->  (Spec.t) | specnode of unit ->  (Spec.node) | spec of unit ->  (Spec.t) | sigids of unit ->  (Sigid.t list) | sigid of unit ->  (Sigid.t) | sigexpnode of unit ->  (Sigexp.node) | sigexp'node of unit ->  (Sigexp.node) | sigexp' of unit ->  (Sigexp.t) | sigexp of unit ->  (Sigexp.t) | sigconst of unit ->  (SigConst.t) | sigbinds'' of unit ->  (sigbind whereAnd) | sigbinds' of unit ->  (sigbind whereAnd) | sigbinds of unit ->  (sigbind list) | sharespec of unit ->  (Equation.node) | sdecsPlus of unit ->  (Dec.t) | sdecs of unit ->  (Dec.t) | sdec of unit ->  (Dec.t) | rvalbindRest of unit ->  (rvb list) | rvalbind of unit ->  (rvb list) | rules of unit ->  (rule list) | rule of unit ->  (rule) | repl of unit ->  (DatatypeRhs.node) | program of unit ->  (Program.t) | pats of unit ->  (Pat.t list) | patnode of unit ->  (Pat.node) | patitems of unit ->  ( ( (Field.t * Pat.Item.t) list * bool ) ) | patitem of unit ->  ( ( Field.t * Pat.Item.t ) ) | pat_2c of unit ->  (Pat.t list) | pat of unit ->  (Pat.t) | ot_list of unit ->  (Exp.t list) | opcon of unit ->  (Con.t) | opaspat of unit ->  (Pat.t option) | match of unit ->  (Match.t) | longvidNoEqual of unit ->  (Longvid.t) | longvid of unit ->  (Longvid.t) | longtyconeqns of unit ->  (Longtycon.t list) | longtycon of unit ->  (Longtycon.t) | longstrids of unit ->  (Longstrid.t list) | longstrideqns of unit ->  (Longstrid.t list) | longstrid of unit ->  (Longstrid.t) | longidNoAsterisk of unit ->  (Symbol.t list*Region.t) | longidEqual of unit ->  (Symbol.t list*Region.t) | longid of unit ->  (Symbol.t list*Region.t) | longcon of unit ->  (Longcon.t) | idNoAsterisk of unit ->  (Symbol.t*Region.t) | idEqual of unit ->  (Symbol.t*Region.t) | id of unit ->  (Symbol.t*Region.t) | funs of unit ->  (clauses list) | funbinds'2 of unit ->  (funbind list) | funbinds'1' of unit ->  (funbind whereAnd) | funbinds'1 of unit ->  (funbind whereAnd) | funbinds' of unit ->  (Strexp.t*funbind list) | funbinds of unit ->  (funbind list) | fixity of unit ->  (Fixity.t) | field of unit ->  (Field.t) | fctid of unit ->  (Fctid.t) | fctarg of unit ->  (FctArg.node) | expsAndTopdecs of unit ->  (Topdec.t list list) | expnode of unit ->  (Exp.node) | exp_ps of unit ->  (Exp.t list) | exp_list of unit ->  (Exp.t list) | exp_2c of unit ->  (Exp.t list) | exp of unit ->  (Exp.t) | exndescs of unit ->  (exndesc list) | exndesc of unit ->  (exndesc) | elabels of unit ->  ( ( Field.t * Exp.t )  list) | elabel of unit ->  ( ( Field.t * Exp.t ) ) | ebs of unit ->  (eb list) | ebrhsnode of unit ->  (EbRhs.node) | ebrhs of unit ->  (EbRhs.t) | eb of unit ->  (eb) | digit of unit ->  (int) | decsnode of unit ->  (Dec.node) | decs of unit ->  (Dec.t) | decnolocal of unit ->  (Dec.node) | decnode of unit ->  (Dec.node) | dec of unit ->  (Dec.t) | dbs' of unit ->  (db list) | dbs of unit ->  (db vector) | db of unit ->  (db) | datatypeRhsnodeNoWithtype of unit ->  (DatatypeRhs.node) | datatypeRhsnode of unit ->  (DatatypeRhs.node) | datatypeRhsNoWithtype of unit ->  (DatatypeRhs.t) | datatypeRhs of unit ->  (DatatypeRhs.t) | datBindNoWithtype of unit ->  (DatBind.t) | datBind of unit ->  (DatBind.t) | constrs of unit ->  ( ( Con.t * Type.t option )  list) | constraint of unit ->  (Type.t option) | constr of unit ->  (Con.t*Type.t option) | const' of unit ->  (Const.node) | const of unit ->  (Const.t) | con of unit ->  (Con.t) | commapats of unit ->  (Pat.t list) | clausesTop of unit ->  (clauses) | clauses of unit ->  (clause list) | clause of unit ->  (clause) | arg_fct of unit ->  (Strexp.t) | app_exp1 of unit ->  (Exp.t list) | app_exp of unit ->  (Exp.t list) | apats of unit ->  (Pat.t list) | apatnode of unit ->  (Pat.node) | apat' of unit ->  (Pat.t) | apat of unit ->  (Pat.t) | andspecs of unit ->  (wherespec list) | aexp of unit ->  (Exp.node)
end
type svalue = MlyValue.svalue
type result = Program.t
end
structure EC=
struct
open LrTable
infix 5 $$
fun x $$ y = y::x
val is_keyword =
fn (T 7) => true | (T 8) => true | (T 11) => true | (T 14) => true | (T 18) => true | (T 19) => true | (T 20) => true | (T 21) => true | (T 24) => true | (T 25) => true | (T 26) => true | (T 27) => true | (T 28) => true | (T 29) => true | (T 30) => true | (T 31) => true | (T 33) => true | (T 34) => true | (T 35) => true | (T 36) => true | (T 37) => true | (T 38) => true | (T 39) => true | (T 40) => true | (T 43) => true | (T 44) => true | (T 46) => true | (T 48) => true | (T 49) => true | (T 50) => true | (T 51) => true | (T 54) => true | (T 57) => true | (T 58) => true | (T 59) => true | (T 60) => true | (T 61) => true | (T 62) => true | (T 63) => true | (T 64) => true | (T 66) => true | (T 65) => true | (T 68) => true | (T 69) => true | (T 47) => true | (T 9) => true | _ => false
val preferred_change : (term list * term list) list = 
(nil
,nil
 $$ (T 64))::
(nil
,nil
 $$ (T 62))::
(nil
,nil
 $$ (T 20))::
(nil
,nil
 $$ (T 45))::
(nil
,nil
 $$ (T 56))::
(nil
 $$ (T 27),nil
 $$ (T 23))::
(nil
 $$ (T 23),nil
 $$ (T 27))::
(nil
 $$ (T 8),nil
 $$ (T 9))::
(nil
 $$ (T 15),nil
 $$ (T 48))::
(nil
 $$ (T 56),nil
 $$ (T 17))::
(nil
 $$ (T 17),nil
 $$ (T 56))::
(nil
,nil
 $$ (T 21) $$ (T 2) $$ (T 34))::
(nil
,nil
 $$ (T 2) $$ (T 20))::
nil
val noShift = 
fn (T 22) => true | _ => false
val showTerminal =
fn (T 0) => "CHAR"
  | (T 1) => "INT"
  | (T 2) => "LONGID"
  | (T 3) => "REAL"
  | (T 4) => "STRING"
  | (T 5) => "TYVAR"
  | (T 6) => "WORD"
  | (T 7) => "ABSTYPE"
  | (T 8) => "AND"
  | (T 9) => "ANDALSO"
  | (T 10) => "ARROW"
  | (T 11) => "AS"
  | (T 12) => "ASTERISK"
  | (T 13) => "BAR"
  | (T 14) => "CASE"
  | (T 15) => "COLON"
  | (T 16) => "COLONGT"
  | (T 17) => "COMMA"
  | (T 18) => "DATATYPE"
  | (T 19) => "DOTDOTDOT"
  | (T 20) => "ELSE"
  | (T 21) => "END"
  | (T 22) => "EOF"
  | (T 23) => "EQUALOP"
  | (T 24) => "EQTYPE"
  | (T 25) => "EXCEPTION"
  | (T 26) => "DO"
  | (T 27) => "DARROW"
  | (T 28) => "FN"
  | (T 29) => "FUN"
  | (T 30) => "FUNCTOR"
  | (T 31) => "HANDLE"
  | (T 32) => "HASH"
  | (T 33) => "IF"
  | (T 34) => "IN"
  | (T 35) => "INCLUDE"
  | (T 36) => "INFIX"
  | (T 37) => "INFIXR"
  | (T 38) => "IODATATYPE"
  | (T 39) => "IOEQTYPE"
  | (T 40) => "IOTYPE"
  | (T 41) => "LBRACE"
  | (T 42) => "LBRACKET"
  | (T 43) => "LET"
  | (T 44) => "LOCAL"
  | (T 45) => "LPAREN"
  | (T 46) => "NONFIX"
  | (T 47) => "ORELSE"
  | (T 48) => "OF"
  | (T 49) => "OP"
  | (T 50) => "OPEN"
  | (T 51) => "RAISE"
  | (T 52) => "RBRACE"
  | (T 53) => "RBRACKET"
  | (T 54) => "REC"
  | (T 55) => "RPAREN"
  | (T 56) => "SEMICOLON"
  | (T 57) => "SHARING"
  | (T 58) => "SIG"
  | (T 59) => "SIGNATURE"
  | (T 60) => "STRUCT"
  | (T 61) => "STRUCTURE"
  | (T 62) => "THEN"
  | (T 63) => "TYPE"
  | (T 64) => "VAL"
  | (T 65) => "WHERE"
  | (T 66) => "WHILE"
  | (T 67) => "WILD"
  | (T 68) => "WITH"
  | (T 69) => "WITHTYPE"
  | _ => "bogus-term"
local open Header in
val errtermvalue=
fn (T 0) => MlyValue.CHAR(fn () => ("a")) | 
(T 1) => MlyValue.INT(fn () => ("0")) | 
(T 2) => MlyValue.LONGID(fn () => ("bogus")) | 
(T 3) => MlyValue.REAL(fn () => ("13.0")) | 
(T 4) => MlyValue.STRING(fn () => ("")) | 
(T 5) => MlyValue.TYVAR(fn () => ("'a")) | 
(T 6) => MlyValue.WORD(fn () => ("0")) | 
_ => MlyValue.VOID
end
val terms : term list = nil
 $$ (T 69) $$ (T 68) $$ (T 67) $$ (T 66) $$ (T 65) $$ (T 64) $$ (T 63) $$ (T 62) $$ (T 61) $$ (T 60) $$ (T 59) $$ (T 58) $$ (T 57) $$ (T 56) $$ (T 55) $$ (T 54) $$ (T 53) $$ (T 52) $$ (T 51) $$ (T 50) $$ (T 49) $$ (T 48) $$ (T 47) $$ (T 46) $$ (T 45) $$ (T 44) $$ (T 43) $$ (T 42) $$ (T 41) $$ (T 40) $$ (T 39) $$ (T 38) $$ (T 37) $$ (T 36) $$ (T 35) $$ (T 34) $$ (T 33) $$ (T 32) $$ (T 31) $$ (T 30) $$ (T 29) $$ (T 28) $$ (T 27) $$ (T 26) $$ (T 25) $$ (T 24) $$ (T 23) $$ (T 22) $$ (T 21) $$ (T 20) $$ (T 19) $$ (T 18) $$ (T 17) $$ (T 16) $$ (T 15) $$ (T 14) $$ (T 13) $$ (T 12) $$ (T 11) $$ (T 10) $$ (T 9) $$ (T 8) $$ (T 7)end
structure Actions =
struct 
exception mlyAction of int
local open Header in
val actions = 
fn (i392,defaultPos,stack,
    (()):arg) =>
case (i392,stack)
of  ( 0, ( ( _, ( MlyValue.expsAndTopdecs expsAndTopdecs1, expsAndTopdecs1left, expsAndTopdecs1right)) :: rest671)) => let val  result = MlyValue.program (fn _ => let val  (expsAndTopdecs as expsAndTopdecs1) = expsAndTopdecs1 ()
 in ((*#line 434.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Program.T expsAndTopdecs(*#line 1858.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 82, ( result, expsAndTopdecs1left, expsAndTopdecs1right), rest671)
end
|  ( 1, ( ( _, ( MlyValue.expsAndTopdecs expsAndTopdecs1, _, expsAndTopdecs1right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.expsAndTopdecs (fn _ => let val  (exp as exp1) = exp1 ()
 val  (expsAndTopdecs as expsAndTopdecs1) = expsAndTopdecs1 ()
 in ((*#line 437.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[Topdec.fromExp exp] :: expsAndTopdecs(*#line 1864.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 47, ( result, exp1left, expsAndTopdecs1right), rest671)
end
|  ( 2, ( ( _, ( MlyValue.topdecs topdecs1, topdecs1left, topdecs1right)) :: rest671)) => let val  result = MlyValue.expsAndTopdecs (fn _ => let val  (topdecs as topdecs1) = topdecs1 ()
 in ((*#line 438.14 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)topdecs(*#line 1871.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 47, ( result, topdecs1left, topdecs1right), rest671)
end
|  ( 3, ( rest671)) => let val  result = MlyValue.topdecs (fn _ => ((*#line 441.8 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 1877.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 127, ( result, defaultPos, defaultPos), rest671)
end
|  ( 4, ( ( _, ( MlyValue.topdecs topdecs1, _, topdecs1right)) :: ( _, ( MlyValue.topdec topdec1, topdec1left, _)) :: rest671)) => let val  result = MlyValue.topdecs (fn _ => let val  (topdec as topdec1) = topdec1 ()
 val  (topdecs as topdecs1) = topdecs1 ()
 in ((*#line 442.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)consTopdec (topdec, topdecs)(*#line 1881.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 127, ( result, topdec1left, topdecs1right), rest671)
end
|  ( 5, ( ( _, ( MlyValue.expsAndTopdecs expsAndTopdecs1, _, expsAndTopdecs1right)) :: ( _, ( _, SEMICOLON1left, _)) :: rest671)) => let val  result = MlyValue.topdecs (fn _ => let val  (expsAndTopdecs as expsAndTopdecs1) = expsAndTopdecs1 ()
 in ((*#line 443.31 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[] :: expsAndTopdecs(*#line 1888.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 127, ( result, SEMICOLON1left, expsAndTopdecs1right), rest671)
end
|  ( 6, ( ( _, ( MlyValue.topdecnode topdecnode1, (topdecnodeleft as topdecnode1left), (topdecnoderight as topdecnode1right))) :: rest671)) => let val  result = MlyValue.topdec (fn _ => let val  (topdecnode as topdecnode1) = topdecnode1 ()
 in ((*#line 445.22 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Topdec.makeRegion' (topdecnode,
                                         topdecnodeleft,
                                         topdecnoderight)(*#line 1894.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 125, ( result, topdecnode1left, topdecnode1right), rest671)
end
|  ( 7, ( ( _, ( MlyValue.strdec strdec1, strdec1left, strdec1right)) :: rest671)) => let val  result = MlyValue.topdecnode (fn _ => let val  (strdec as strdec1) = strdec1 ()
 in ((*#line 451.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Topdec.Strdec strdec(*#line 1902.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 126, ( result, strdec1left, strdec1right), rest671)
end
|  ( 8, ( ( _, ( MlyValue.sigbinds sigbinds1, _, sigbinds1right)) :: ( _, ( _, SIGNATURE1left, _)) :: rest671)) => let val  result = MlyValue.topdecnode (fn _ => let val  (sigbinds as sigbinds1) = sigbinds1 ()
 in ((*#line 453.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
         val sigbinds = Vector.fromList sigbinds
         val d = Topdec.Signature sigbinds
      in
         d
      end(*#line 1908.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 126, ( result, SIGNATURE1left, sigbinds1right), rest671)
end
|  ( 9, ( ( _, ( MlyValue.funbinds funbinds1, _, funbinds1right)) :: ( _, ( _, FUNCTOR1left, _)) :: rest671)) => let val  result = MlyValue.topdecnode (fn _ => let val  (funbinds as funbinds1) = funbinds1 ()
 in ((*#line 460.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Topdec.Functor (Vector.fromList funbinds)(*#line 1919.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 126, ( result, FUNCTOR1left, funbinds1right), rest671)
end
|  ( 10, ( ( _, ( MlyValue.strdecsnode strdecsnode1, (strdecsnodeleft as strdecsnode1left), (strdecsnoderight as strdecsnode1right))) :: rest671)) => let val  result = MlyValue.strdecs (fn _ => let val  (strdecsnode as strdecsnode1) = strdecsnode1 ()
 in ((*#line 466.24 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.makeRegion'
                       (strdecsnode, strdecsnodeleft, strdecsnoderight)(*#line 1925.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 112, ( result, strdecsnode1left, strdecsnode1right), rest671)
end
|  ( 11, ( rest671)) => let val  result = MlyValue.strdecsnode (fn _ => ((*#line 469.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.Seq [](*#line 1932.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 113, ( result, defaultPos, defaultPos), rest671)
end
|  ( 12, ( ( _, ( MlyValue.strdecs strdecs1, _, strdecs1right)) :: ( _, ( _, SEMICOLON1left, _)) :: rest671)) => let val  result = MlyValue.strdecsnode (fn _ => let val  (strdecs as strdecs1) = strdecs1 ()
 in ((*#line 470.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.Seq [strdecs](*#line 1936.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 113, ( result, SEMICOLON1left, strdecs1right), rest671)
end
|  ( 13, ( ( _, ( MlyValue.strdecs strdecs1, _, strdecs1right)) :: ( _, ( MlyValue.strdec strdec1, strdec1left, _)) :: rest671)) => let val  result = MlyValue.strdecsnode (fn _ => let val  (strdec as strdec1) = strdec1 ()
 val  (strdecs as strdecs1) = strdecs1 ()
 in ((*#line 471.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.Seq [strdec, strdecs](*#line 1942.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 113, ( result, strdec1left, strdecs1right), rest671)
end
|  ( 14, ( ( _, ( MlyValue.strdecnode strdecnode1, (strdecnodeleft as strdecnode1left), (strdecnoderight as strdecnode1right))) :: rest671)) => let val  result = MlyValue.strdec (fn _ => let val  (strdecnode as strdecnode1) = strdecnode1 ()
 in ((*#line 473.22 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.makeRegion' (strdecnode,
                                         strdecnodeleft, strdecnoderight)(*#line 1949.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 110, ( result, strdecnode1left, strdecnode1right), rest671)
end
|  ( 15, ( ( _, ( MlyValue.strbinds strbinds1, _, strbinds1right)) :: ( _, ( _, STRUCTURE1left, _)) :: rest671)) => let val  result = MlyValue.strdecnode (fn _ => let val  (strbinds as strbinds1) = strbinds1 ()
 in ((*#line 478.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
         val strbinds = Vector.fromList strbinds
         val d = Strdec.Structure strbinds



      in
         d
      end(*#line 1956.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 111, ( result, STRUCTURE1left, strbinds1right), rest671)
end
|  ( 16, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.strdecs strdecs2, _, _)) :: _ :: ( _, ( MlyValue.strdecs strdecs1, _, _)) :: ( _, ( _, LOCAL1left, _)) :: rest671)) => let val  result = MlyValue.strdecnode (fn _ => let val  strdecs1 = strdecs1 ()
 val  strdecs2 = strdecs2 ()
 in ((*#line 487.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.Local (strdecs1, strdecs2)(*#line 1970.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 111, ( result, LOCAL1left, END1right), rest671)
end
|  ( 17, ( ( _, ( MlyValue.decnolocal decnolocal1, (decnolocalleft as decnolocal1left), (decnolocalright as decnolocal1right))) :: rest671)) => let val  result = MlyValue.strdecnode (fn _ => let val  (decnolocal as decnolocal1) = decnolocal1 ()
 in ((*#line 489.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strdec.Core (Dec.makeRegion' (decnolocal,
                                    decnolocalleft, decnolocalright))(*#line 1977.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 111, ( result, decnolocal1left, decnolocal1right), rest671)
end
|  ( 18, ( ( _, ( MlyValue.strbinds' strbinds'1, _, strbinds'1right)) :: _ :: ( _, ( MlyValue.sigconst sigconst1, _, _)) :: ( _, ( MlyValue.strid strid1, strid1left, _)) :: rest671)) => let val  result = MlyValue.strbinds (fn _ => let val  (strid as strid1) = strid1 ()
 val  (sigconst as sigconst1) = sigconst1 ()
 val  (strbinds' as strbinds'1) = strbinds'1 ()
 in ((*#line 493.13 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let val (def,strbinds) = strbinds'
            in {name = strid, def = def, constraint = sigconst}
               :: strbinds
            end(*#line 1984.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 105, ( result, strid1left, strbinds'1right), rest671)
end
|  ( 19, ( ( _, ( MlyValue.strbinds'1 strbinds'11, _, strbinds'11right)) :: ( _, ( MlyValue.strexp1 strexp11, strexp11left, _)) :: rest671)) => let val  result = MlyValue.strbinds' (fn _ => let val  (strexp1 as strexp11) = strexp11 ()
 val  (strbinds'1 as strbinds'11) = strbinds'11 ()
 in ((*#line 498.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)augment1 (strexp1, strbinds'1)(*#line 1995.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 106, ( result, strexp11left, strbinds'11right), rest671)
end
|  ( 20, ( ( _, ( MlyValue.strbinds'2 strbinds'21, _, strbinds'21right)) :: ( _, ( MlyValue.strexp2 strexp21, strexp21left, _)) :: rest671)) => let val  result = MlyValue.strbinds' (fn _ => let val  (strexp2 as strexp21) = strexp21 ()
 val  (strbinds'2 as strbinds'21) = strbinds'21 ()
 in ((*#line 499.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(strexp2,strbinds'2)(*#line 2002.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 106, ( result, strexp21left, strbinds'21right), rest671)
end
|  ( 21, ( ( _, ( MlyValue.strbinds'2 strbinds'21, (strbinds'2left as strbinds'21left), strbinds'21right)) :: rest671)) => let val  result = MlyValue.strbinds'1 (fn _ => let val  (strbinds'2 as strbinds'21) = strbinds'21 ()
 in ((*#line 501.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], strbinds'2left, strbinds'2)(*#line 2009.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 107, ( result, strbinds'21left, strbinds'21right), rest671)
end
|  ( 22, ( ( _, ( MlyValue.strbinds'1' strbinds'1'1, _, strbinds'1'1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.strbinds'1 (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (strbinds'1' as strbinds'1'1) = strbinds'1'1 ()
 in ((*#line 502.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec,strbinds'1')(*#line 2015.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 107, ( result, WHERE1left, strbinds'1'1right), rest671)
end
|  ( 23, ( ( _, ( MlyValue.strbinds'1 strbinds'11, strbinds'11left, strbinds'11right)) :: rest671)) => let val  result = MlyValue.strbinds'1' (fn _ => let val  (strbinds'1 as strbinds'11) = strbinds'11 ()
 in ((*#line 504.43 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)strbinds'1(*#line 2022.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 108, ( result, strbinds'11left, strbinds'11right), rest671)
end
|  ( 24, ( ( _, ( MlyValue.strbinds'1' strbinds'1'1, _, strbinds'1'1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.strbinds'1' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (strbinds'1' as strbinds'1'1) = strbinds'1'1 ()
 in ((*#line 505.43 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec,strbinds'1')(*#line 2028.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 108, ( result, AND1left, strbinds'1'1right), rest671)
end
|  ( 25, ( rest671)) => let val  result = MlyValue.strbinds'2 (fn _ => ((*#line 507.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 2035.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 109, ( result, defaultPos, defaultPos), rest671)
end
|  ( 26, ( ( _, ( MlyValue.strbinds strbinds1, _, strbinds1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.strbinds'2 (fn _ => let val  (strbinds as strbinds1) = strbinds1 ()
 in ((*#line 508.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)strbinds(*#line 2039.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 109, ( result, AND1left, strbinds1right), rest671)
end
|  ( 27, ( ( _, ( MlyValue.strexpnode strexpnode1, (strexpnodeleft as strexpnode1left), (strexpnoderight as strexpnode1right))) :: rest671)) => let val  result = MlyValue.strexp (fn _ => let val  (strexpnode as strexpnode1) = strexpnode1 ()
 in ((*#line 510.22 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.makeRegion' (strexpnode,
                                        strexpnodeleft, strexpnoderight)(*#line 2045.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 117, ( result, strexpnode1left, strexpnode1right), rest671)
end
|  ( 28, ( ( _, ( MlyValue.strexp1 strexp11, strexp11left, strexp11right)) :: rest671)) => let val  result = MlyValue.strexpnode (fn _ => let val  (strexp1 as strexp11) = strexp11 ()
 in ((*#line 515.6 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
        val (strexp, sigconst, sigexp) = strexp1
     in
        Strexp.Constrained (strexp, sigconst sigexp)
     end(*#line 2052.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 121, ( result, strexp11left, strexp11right), rest671)
end
|  ( 29, ( ( _, ( MlyValue.wherespecs wherespecs1, _, (wherespecsright as wherespecs1right))) :: ( _, ( MlyValue.strexp1 strexp11, strexp11left, _)) :: rest671)) => let val  result = MlyValue.strexpnode (fn _ => let val  (strexp1 as strexp11) = strexp11 ()
 val  (wherespecs as wherespecs1) = wherespecs1 ()
 in ((*#line 521.6 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
        val (strexp,sigconst,sigexp) = strexp1
     in
        Strexp.Constrained
        (strexp,
         sigconst (Sigexp.wheree
                   (sigexp, wherespecs,
                    Region.extendRight (Sigexp.region sigexp,
                                        wherespecsright))))
     end(*#line 2062.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 121, ( result, strexp11left, wherespecs1right), rest671)
end
|  ( 30, ( ( _, ( MlyValue.strexp2node strexp2node1, strexp2node1left, strexp2node1right)) :: rest671)) => let val  result = MlyValue.strexpnode (fn _ => let val  (strexp2node as strexp2node1) = strexp2node1 ()
 in ((*#line 532.6 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)strexp2node(*#line 2078.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 121, ( result, strexp2node1left, strexp2node1right), rest671)
end
|  ( 31, ( ( _, ( MlyValue.sigexp' sigexp'1, _, sigexp'1right)) :: _ :: ( _, ( MlyValue.strexp strexp1, strexp1left, _)) :: rest671)) => let val  result = MlyValue.strexp1 (fn _ => let val  (strexp as strexp1) = strexp1 ()
 val  (sigexp' as sigexp'1) = sigexp'1 ()
 in ((*#line 534.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(strexp,SigConst.Transparent,sigexp')(*#line 2084.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 118, ( result, strexp1left, sigexp'1right), rest671)
end
|  ( 32, ( ( _, ( MlyValue.sigexp' sigexp'1, _, sigexp'1right)) :: _ :: ( _, ( MlyValue.strexp strexp1, strexp1left, _)) :: rest671)) => let val  result = MlyValue.strexp1 (fn _ => let val  (strexp as strexp1) = strexp1 ()
 val  (sigexp' as sigexp'1) = sigexp'1 ()
 in ((*#line 535.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(strexp,SigConst.Opaque,sigexp')(*#line 2091.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 118, ( result, strexp1left, sigexp'1right), rest671)
end
|  ( 33, ( ( _, ( MlyValue.strexp2node strexp2node1, (strexp2nodeleft as strexp2node1left), (strexp2noderight as strexp2node1right))) :: rest671)) => let val  result = MlyValue.strexp2 (fn _ => let val  (strexp2node as strexp2node1) = strexp2node1 ()
 in ((*#line 537.24 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.makeRegion'
                       (strexp2node, strexp2nodeleft, strexp2noderight)(*#line 2098.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 119, ( result, strexp2node1left, strexp2node1right), rest671)
end
|  ( 34, ( ( _, ( MlyValue.longid longid1, longid1left, longid1right)) :: rest671)) => let val  result = MlyValue.strexp2node (fn _ => let val  (longid as longid1) = longid1 ()
 in ((*#line 541.39 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.Var (Longstrid.fromSymbols longid)(*#line 2105.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 120, ( result, longid1left, longid1right), rest671)
end
|  ( 35, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.strdecs strdecs1, _, _)) :: ( _, ( _, STRUCT1left, _)) :: rest671)) => let val  result = MlyValue.strexp2node (fn _ => let val  (strdecs as strdecs1) = strdecs1 ()
 in ((*#line 542.39 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.Struct strdecs(*#line 2111.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 120, ( result, STRUCT1left, END1right), rest671)
end
|  ( 36, ( ( _, ( MlyValue.arg_fct arg_fct1, _, arg_fct1right)) :: ( _, ( MlyValue.longid longid1, longid1left, _)) :: rest671)) => let val  result = MlyValue.strexp2node (fn _ => let val  (longid as longid1) = longid1 ()
 val  (arg_fct as arg_fct1) = arg_fct1 ()
 in ((*#line 544.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.App (Fctid.fromSymbol (ensureNonqualified longid), arg_fct)(*#line 2117.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 120, ( result, longid1left, arg_fct1right), rest671)
end
|  ( 37, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.strexp strexp1, _, _)) :: _ :: ( _, ( MlyValue.strdecs strdecs1, _, _)) :: ( _, ( _, LET1left, _)) :: rest671)) => let val  result = MlyValue.strexp2node (fn _ => let val  (strdecs as strdecs1) = strdecs1 ()
 val  (strexp as strexp1) = strexp1 ()
 in ((*#line 545.39 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.Let (strdecs,strexp)(*#line 2124.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 120, ( result, LET1left, END1right), rest671)
end
|  ( 38, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.strexp strexp1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.arg_fct (fn _ => let val  (strexp as strexp1) = strexp1 ()
 in ((*#line 547.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)strexp(*#line 2131.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 8, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 39, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.strdecs strdecs1, strdecsleft, strdecsright)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.arg_fct (fn _ => let val  (strdecs as strdecs1) = strdecs1 ()
 in ((*#line 548.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strexp.makeRegion'
                                  (Strexp.Struct strdecs,
                                   strdecsleft, strdecsright)(*#line 2137.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 8, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 40, ( ( _, ( MlyValue.sigexp' sigexp'1, sigexp'1left, sigexp'1right)) :: rest671)) => let val  result = MlyValue.sigexp (fn _ => let val  (sigexp' as sigexp'1) = sigexp'1 ()
 in ((*#line 558.6 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)sigexp'(*#line 2145.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 96, ( result, sigexp'1left, sigexp'1right), rest671)
end
|  ( 41, ( ( _, ( MlyValue.wherespecs wherespecs1, _, (wherespecsright as wherespecs1right))) :: ( _, ( MlyValue.sigexp' sigexp'1, (sigexp'left as sigexp'1left), _)) :: rest671)) => let val  result = MlyValue.sigexp (fn _ => let val  (sigexp' as sigexp'1) = sigexp'1 ()
 val  (wherespecs as wherespecs1) = wherespecs1 ()
 in ((*#line 560.6 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Sigexp.wheree (sigexp', wherespecs, reg (sigexp'left, wherespecsright))(*#line 2151.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 96, ( result, sigexp'1left, wherespecs1right), rest671)
end
|  ( 42, ( ( _, ( MlyValue.wherespecs' wherespecs'1, wherespecs'1left, wherespecs'1right)) :: rest671)) => let val  result = MlyValue.wherespecs (fn _ => let val  (wherespecs' as wherespecs'1) = wherespecs'1 ()
 in ((*#line 562.27 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vector.fromList wherespecs'(*#line 2158.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 156, ( result, wherespecs'1left, wherespecs'1right), rest671)
end
|  ( 43, ( ( _, ( MlyValue.wherespec wherespec1, _, wherespec1right)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.wherespecs' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 in ((*#line 565.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[wherespec](*#line 2164.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 157, ( result, WHERE1left, wherespec1right), rest671)
end
|  ( 44, ( ( _, ( MlyValue.wherespecs' wherespecs'1, _, wherespecs'1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.wherespecs' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (wherespecs' as wherespecs'1) = wherespecs'1 ()
 in ((*#line 566.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)wherespec :: wherespecs'(*#line 2170.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 157, ( result, WHERE1left, wherespecs'1right), rest671)
end
|  ( 45, ( ( _, ( MlyValue.andspecs andspecs1, _, andspecs1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.wherespecs' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (andspecs as andspecs1) = andspecs1 ()
 in ((*#line 567.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)wherespec :: andspecs(*#line 2177.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 157, ( result, WHERE1left, andspecs1right), rest671)
end
|  ( 46, ( ( _, ( MlyValue.wherespec wherespec1, _, wherespec1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.andspecs (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 in ((*#line 570.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[wherespec](*#line 2184.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 1, ( result, AND1left, wherespec1right), rest671)
end
|  ( 47, ( ( _, ( MlyValue.andspecs andspecs1, _, andspecs1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.andspecs (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (andspecs as andspecs1) = andspecs1 ()
 in ((*#line 571.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)wherespec :: andspecs(*#line 2190.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 1, ( result, AND1left, andspecs1right), rest671)
end
|  ( 48, ( ( _, ( MlyValue.wherespecs' wherespecs'1, _, wherespecs'1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.andspecs (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (wherespecs' as wherespecs'1) = wherespecs'1 ()
 in ((*#line 572.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)wherespec :: wherespecs'(*#line 2197.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 1, ( result, AND1left, wherespecs'1right), rest671)
end
|  ( 49, ( ( _, ( MlyValue.sigbinds' sigbinds'1, _, sigbinds'1right)) :: ( _, ( MlyValue.sigexp' sigexp'1, _, _)) :: _ :: ( _, ( MlyValue.sigid sigid1, sigid1left, _)) :: rest671)) => let val  result = MlyValue.sigbinds (fn _ => let val  (sigid as sigid1) = sigid1 ()
 val  (sigexp' as sigexp'1) = sigexp'1 ()
 val  (sigbinds' as sigbinds'1) = sigbinds'1 ()
 in ((*#line 574.45 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)augment (sigid, sigexp', sigbinds')(*#line 2204.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 92, ( result, sigid1left, sigbinds'1right), rest671)
end
|  ( 50, ( ( _, ( MlyValue.sigexp'node sigexp'node1, (sigexp'nodeleft as sigexp'node1left), (sigexp'noderight as sigexp'node1right))) :: rest671)) => let val  result = MlyValue.sigexp' (fn _ => let val  (sigexp'node as sigexp'node1) = sigexp'node1 ()
 in ((*#line 576.24 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Sigexp.makeRegion' (sigexp'node,
                                          sigexp'nodeleft,
                                          sigexp'noderight)(*#line 2212.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 97, ( result, sigexp'node1left, sigexp'node1right), rest671)
end
|  ( 51, ( ( _, ( MlyValue.sigid sigid1, sigid1left, sigid1right)) :: rest671)) => let val  result = MlyValue.sigexp'node (fn _ => let val  (sigid as sigid1) = sigid1 ()
 in ((*#line 580.43 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Sigexp.Var sigid(*#line 2220.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 98, ( result, sigid1left, sigid1right), rest671)
end
|  ( 52, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.specs specs1, _, _)) :: ( _, ( _, SIG1left, _)) :: rest671)) => let val  result = MlyValue.sigexp'node (fn _ => let val  (specs as specs1) = specs1 ()
 in ((*#line 581.43 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Sigexp.Spec specs(*#line 2226.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 98, ( result, SIG1left, END1right), rest671)
end
|  ( 53, ( rest671)) => let val  result = MlyValue.sigbinds' (fn _ => ((*#line 583.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], defaultPos, [])(*#line 2232.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 93, ( result, defaultPos, defaultPos), rest671)
end
|  ( 54, ( ( _, ( MlyValue.sigbinds sigbinds1, _, sigbinds1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.sigbinds' (fn _ => let val  (sigbinds as sigbinds1) = sigbinds1 ()
 in ((*#line 584.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], defaultPos, sigbinds)(*#line 2236.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 93, ( result, AND1left, sigbinds1right), rest671)
end
|  ( 55, ( ( _, ( MlyValue.sigbinds'' sigbinds''1, _, sigbinds''1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.sigbinds' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (sigbinds'' as sigbinds''1) = sigbinds''1 ()
 in ((*#line 585.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec,sigbinds'')(*#line 2242.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 93, ( result, WHERE1left, sigbinds''1right), rest671)
end
|  ( 56, ( ( _, ( MlyValue.sigbinds' sigbinds'1, sigbinds'1left, sigbinds'1right)) :: rest671)) => let val  result = MlyValue.sigbinds'' (fn _ => let val  (sigbinds' as sigbinds'1) = sigbinds'1 ()
 in ((*#line 587.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)sigbinds'(*#line 2249.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 94, ( result, sigbinds'1left, sigbinds'1right), rest671)
end
|  ( 57, ( ( _, ( MlyValue.sigbinds'' sigbinds''1, _, sigbinds''1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.sigbinds'' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (sigbinds'' as sigbinds''1) = sigbinds''1 ()
 in ((*#line 588.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec,sigbinds'')(*#line 2255.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 94, ( result, AND1left, sigbinds''1right), rest671)
end
|  ( 58, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: _ :: ( _, ( MlyValue.longtycon longtycon1, _, _)) :: ( _, ( MlyValue.tyvars tyvars1, _, _)) :: ( _, ( _, TYPE1left, _)) :: rest671)) => let val  result = MlyValue.wherespec (fn _ => let val  (tyvars as tyvars1) = tyvars1 ()
 val  (longtycon as longtycon1) = longtycon1 ()
 val  (ty as ty1) = ty1 ()
 in ((*#line 590.49 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*){tyvars = tyvars,
                                                 longtycon = longtycon,
                                                 ty = ty}(*#line 2262.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 155, ( result, TYPE1left, ty1right), rest671)
end
|  ( 59, ( rest671)) => let val  result = MlyValue.sigconst (fn _ => ((*#line 594.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)SigConst.None(*#line 2272.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 95, ( result, defaultPos, defaultPos), rest671)
end
|  ( 60, ( ( _, ( MlyValue.sigexp sigexp1, _, sigexp1right)) :: ( _, ( _, COLON1left, _)) :: rest671)) => let val  result = MlyValue.sigconst (fn _ => let val  (sigexp as sigexp1) = sigexp1 ()
 in ((*#line 595.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)SigConst.Transparent sigexp(*#line 2276.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 95, ( result, COLON1left, sigexp1right), rest671)
end
|  ( 61, ( ( _, ( MlyValue.sigexp sigexp1, _, sigexp1right)) :: ( _, ( _, COLONGT1left, _)) :: rest671)) => let val  result = MlyValue.sigconst (fn _ => let val  (sigexp as sigexp1) = sigexp1 ()
 in ((*#line 596.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)SigConst.Opaque sigexp(*#line 2282.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 95, ( result, COLONGT1left, sigexp1right), rest671)
end
|  ( 62, ( rest671)) => let val  result = MlyValue.specs (fn _ => ((*#line 598.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.makeRegion (Spec.Empty, Region.bogus)(*#line 2288.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 104, ( result, defaultPos, defaultPos), rest671)
end
|  ( 63, ( ( _, ( MlyValue.specs specs1, _, specs1right)) :: ( _, ( _, SEMICOLON1left, _)) :: rest671)) => let val  result = MlyValue.specs (fn _ => let val  (specs as specs1) = specs1 ()
 in ((*#line 599.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)specs(*#line 2292.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 104, ( result, SEMICOLON1left, specs1right), rest671)
end
|  ( 64, ( ( _, ( MlyValue.specs specs1, _, specs1right)) :: ( _, ( MlyValue.spec spec1, spec1left, _)) :: rest671)) => let val  result = MlyValue.specs (fn _ => let val  (spec as spec1) = spec1 ()
 val  (specs as specs1) = specs1 ()
 in ((*#line 600.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.seq (spec, specs)(*#line 2298.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 104, ( result, spec1left, specs1right), rest671)
end
|  ( 65, ( ( _, ( MlyValue.specnode specnode1, (specnodeleft as specnode1left), (specnoderight as specnode1right))) :: rest671)) => let val  result = MlyValue.spec (fn _ => let val  (specnode as specnode1) = specnode1 ()
 in ((*#line 602.18 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.makeRegion' (specnode, specnodeleft, specnoderight)(*#line 2305.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 102, ( result, specnode1left, specnode1right), rest671)
end
|  ( 66, ( ( _, ( MlyValue.valdescs valdescs1, _, valdescs1right)) :: ( _, ( _, VAL1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (valdescs as valdescs1) = valdescs1 ()
 in ((*#line 604.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Val (Vector.fromList valdescs)(*#line 2311.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, VAL1left, valdescs1right), rest671)
end
|  ( 67, ( ( _, ( MlyValue.typdescs typdescs1, _, typdescs1right)) :: ( _, ( _, TYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (typdescs as typdescs1) = typdescs1 ()
 in ((*#line 605.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Type (Vector.fromList typdescs)(*#line 2317.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, TYPE1left, typdescs1right), rest671)
end
|  ( 68, ( ( _, ( MlyValue.typBind typBind1, _, typBind1right)) :: ( _, ( _, TYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (typBind as typBind1) = typBind1 ()
 in ((*#line 606.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.TypeDefs typBind(*#line 2323.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, TYPE1left, typBind1right), rest671)
end
|  ( 69, ( ( _, ( MlyValue.typdescs typdescs1, _, typdescs1right)) :: ( _, ( _, IOTYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (typdescs as typdescs1) = typdescs1 ()
 in ((*#line 607.22 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.IoType (Vector.fromList typdescs)(*#line 2329.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, IOTYPE1left, typdescs1right), rest671)
end
|  ( 70, ( ( _, ( MlyValue.typBind typBind1, _, typBind1right)) :: ( _, ( _, IOTYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (typBind as typBind1) = typBind1 ()
 in ((*#line 608.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.IoTypeDefs typBind(*#line 2335.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, IOTYPE1left, typBind1right), rest671)
end
|  ( 71, ( ( _, ( MlyValue.typdescs typdescs1, _, typdescs1right)) :: ( _, ( _, EQTYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (typdescs as typdescs1) = typdescs1 ()
 in ((*#line 609.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Eqtype (Vector.fromList typdescs)(*#line 2341.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, EQTYPE1left, typdescs1right), rest671)
end
|  ( 72, ( ( _, ( MlyValue.typdescs typdescs1, _, typdescs1right)) :: ( _, ( _, IOEQTYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (typdescs as typdescs1) = typdescs1 ()
 in ((*#line 610.24 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.IoEqtype (Vector.fromList typdescs)(*#line 2347.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, IOEQTYPE1left, typdescs1right), rest671)
end
|  ( 73, ( ( _, ( MlyValue.datatypeRhsNoWithtype datatypeRhsNoWithtype1, _, datatypeRhsNoWithtype1right)) :: ( _, ( _, DATATYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (datatypeRhsNoWithtype as datatypeRhsNoWithtype1) = datatypeRhsNoWithtype1 ()
 in ((*#line 611.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Datatype datatypeRhsNoWithtype(*#line 2353.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, DATATYPE1left, datatypeRhsNoWithtype1right), rest671)
end
|  ( 74, ( ( _, ( MlyValue.datBindNoWithtype datBindNoWithtype1, _, datBindNoWithtype1right)) :: ( _, ( _, IODATATYPE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (datBindNoWithtype as datBindNoWithtype1) = datBindNoWithtype1 ()
 in ((*#line 612.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.IoDatatype datBindNoWithtype(*#line 2359.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, IODATATYPE1left, datBindNoWithtype1right), rest671)
end
|  ( 75, ( ( _, ( MlyValue.exndescs exndescs1, _, exndescs1right)) :: ( _, ( _, EXCEPTION1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (exndescs as exndescs1) = exndescs1 ()
 in ((*#line 613.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Exception (Vector.fromList exndescs)(*#line 2365.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, EXCEPTION1left, exndescs1right), rest671)
end
|  ( 76, ( ( _, ( MlyValue.strdescs strdescs1, _, strdescs1right)) :: ( _, ( _, STRUCTURE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (strdescs as strdescs1) = strdescs1 ()
 in ((*#line 614.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Structure (Vector.fromList strdescs)(*#line 2371.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, STRUCTURE1left, strdescs1right), rest671)
end
|  ( 77, ( ( _, ( MlyValue.sigexp sigexp1, _, sigexp1right)) :: ( _, ( _, INCLUDE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (sigexp as sigexp1) = sigexp1 ()
 in ((*#line 615.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.IncludeSigexp sigexp(*#line 2377.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, INCLUDE1left, sigexp1right), rest671)
end
|  ( 78, ( ( _, ( MlyValue.sigids sigids1, _, sigids1right)) :: ( _, ( MlyValue.sigid sigid1, _, _)) :: ( _, ( _, INCLUDE1left, _)) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (sigid as sigid1) = sigid1 ()
 val  (sigids as sigids1) = sigids1 ()
 in ((*#line 617.13 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.IncludeSigids (Vector.fromList (sigid :: sigids)) (*#line 2383.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, INCLUDE1left, sigids1right), rest671)
end
|  ( 79, ( ( _, ( MlyValue.sharespec sharespec1, (sharespecleft as sharespec1left), (sharespecright as sharespec1right))) :: rest671)) => let val  result = MlyValue.specnode (fn _ => let val  (sharespec as sharespec1) = sharespec1 ()
 in ((*#line 619.13 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Spec.Sharing {spec = Spec.makeRegion' (Spec.Empty,
                                                   sharespecleft,
                                                   sharespecright),
                          equations = (Vector.fromList
                                       [Equation.makeRegion' (sharespec,
                                                              sharespecleft,
                                                              sharespecright)])}(*#line 2390.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 103, ( result, sharespec1left, sharespec1right), rest671)
end
|  ( 80, ( ( _, ( MlyValue.longtyconeqns longtyconeqns1, _, longtyconeqns1right)) :: _ :: ( _, ( _, SHARING1left, _)) :: rest671)) => let val  result = MlyValue.sharespec (fn _ => let val  (longtyconeqns as longtyconeqns1) = longtyconeqns1 ()
 in ((*#line 627.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Equation.Type longtyconeqns(*#line 2402.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 91, ( result, SHARING1left, longtyconeqns1right), rest671)
end
|  ( 81, ( ( _, ( MlyValue.longstrideqns longstrideqns1, _, longstrideqns1right)) :: ( _, ( _, SHARING1left, _)) :: rest671)) => let val  result = MlyValue.sharespec (fn _ => let val  (longstrideqns as longstrideqns1) = longstrideqns1 ()
 in ((*#line 628.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Equation.Structure longstrideqns(*#line 2408.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 91, ( result, SHARING1left, longstrideqns1right), rest671)
end
|  ( 82, ( ( _, ( MlyValue.longstrid longstrid2, _, longstrid2right)) :: _ :: ( _, ( MlyValue.longstrid longstrid1, longstrid1left, _)) :: rest671)) => let val  result = MlyValue.longstrideqns (fn _ => let val  longstrid1 = longstrid1 ()
 val  longstrid2 = longstrid2 ()
 in ((*#line 630.46 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[longstrid1,longstrid2](*#line 2414.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 66, ( result, longstrid1left, longstrid2right), rest671)
end
|  ( 83, ( ( _, ( MlyValue.longstrideqns longstrideqns1, _, longstrideqns1right)) :: _ :: ( _, ( MlyValue.longstrid longstrid1, longstrid1left, _)) :: rest671)) => let val  result = MlyValue.longstrideqns (fn _ => let val  (longstrid as longstrid1) = longstrid1 ()
 val  (longstrideqns as longstrideqns1) = longstrideqns1 ()
 in ((*#line 631.50 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)longstrid :: longstrideqns(*#line 2421.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 66, ( result, longstrid1left, longstrideqns1right), rest671)
end
|  ( 84, ( ( _, ( MlyValue.longtycon longtycon2, _, longtycon2right)) :: _ :: ( _, ( MlyValue.longtycon longtycon1, longtycon1left, _)) :: rest671)) => let val  result = MlyValue.longtyconeqns (fn _ => let val  longtycon1 = longtycon1 ()
 val  longtycon2 = longtycon2 ()
 in ((*#line 633.46 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[longtycon1,longtycon2](*#line 2428.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 69, ( result, longtycon1left, longtycon2right), rest671)
end
|  ( 85, ( ( _, ( MlyValue.longtyconeqns longtyconeqns1, _, longtyconeqns1right)) :: _ :: ( _, ( MlyValue.longtycon longtycon1, longtycon1left, _)) :: rest671)) => let val  result = MlyValue.longtyconeqns (fn _ => let val  (longtycon as longtycon1) = longtycon1 ()
 val  (longtyconeqns as longtyconeqns1) = longtyconeqns1 ()
 in ((*#line 634.50 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)longtycon :: longtyconeqns(*#line 2435.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 69, ( result, longtycon1left, longtyconeqns1right), rest671)
end
|  ( 86, ( ( _, ( MlyValue.strdescs' strdescs'1, _, strdescs'1right)) :: ( _, ( MlyValue.sigexp' sigexp'1, _, _)) :: _ :: ( _, ( MlyValue.strid strid1, strid1left, _)) :: rest671)) => let val  result = MlyValue.strdescs (fn _ => let val  (strid as strid1) = strid1 ()
 val  (sigexp' as sigexp'1) = sigexp'1 ()
 val  (strdescs' as strdescs'1) = strdescs'1 ()
 in ((*#line 636.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)augment (strid, sigexp', strdescs')(*#line 2442.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 114, ( result, strid1left, strdescs'1right), rest671)
end
|  ( 87, ( rest671)) => let val  result = MlyValue.strdescs' (fn _ => ((*#line 638.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], defaultPos, [])(*#line 2450.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 115, ( result, defaultPos, defaultPos), rest671)
end
|  ( 88, ( ( _, ( MlyValue.strdescs strdescs1, _, strdescs1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.strdescs' (fn _ => let val  (strdescs as strdescs1) = strdescs1 ()
 in ((*#line 639.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], defaultPos, strdescs)(*#line 2454.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 115, ( result, AND1left, strdescs1right), rest671)
end
|  ( 89, ( ( _, ( MlyValue.strdescs'' strdescs''1, _, strdescs''1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.strdescs' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (strdescs'' as strdescs''1) = strdescs''1 ()
 in ((*#line 640.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec, strdescs'')(*#line 2460.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 115, ( result, WHERE1left, strdescs''1right), rest671)
end
|  ( 90, ( ( _, ( MlyValue.strdescs' strdescs'1, strdescs'1left, strdescs'1right)) :: rest671)) => let val  result = MlyValue.strdescs'' (fn _ => let val  (strdescs' as strdescs'1) = strdescs'1 ()
 in ((*#line 642.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)strdescs'(*#line 2467.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 116, ( result, strdescs'1left, strdescs'1right), rest671)
end
|  ( 91, ( ( _, ( MlyValue.strdescs'' strdescs''1, _, strdescs''1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.strdescs'' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (strdescs'' as strdescs''1) = strdescs''1 ()
 in ((*#line 643.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec, strdescs'')(*#line 2473.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 116, ( result, AND1left, strdescs''1right), rest671)
end
|  ( 92, ( ( _, ( MlyValue.typdesc typdesc1, typdesc1left, typdesc1right)) :: rest671)) => let val  result = MlyValue.typdescs (fn _ => let val  (typdesc as typdesc1) = typdesc1 ()
 in ((*#line 645.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[typdesc](*#line 2480.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 141, ( result, typdesc1left, typdesc1right), rest671)
end
|  ( 93, ( ( _, ( MlyValue.typdescs typdescs1, _, typdescs1right)) :: _ :: ( _, ( MlyValue.typdesc typdesc1, typdesc1left, _)) :: rest671)) => let val  result = MlyValue.typdescs (fn _ => let val  (typdesc as typdesc1) = typdesc1 ()
 val  (typdescs as typdescs1) = typdescs1 ()
 in ((*#line 646.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)typdesc :: typdescs(*#line 2486.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 141, ( result, typdesc1left, typdescs1right), rest671)
end
|  ( 94, ( ( _, ( MlyValue.tycon tycon1, _, tycon1right)) :: ( _, ( MlyValue.tyvars tyvars1, tyvars1left, _)) :: rest671)) => let val  result = MlyValue.typdesc (fn _ => let val  (tyvars as tyvars1) = tyvars1 ()
 val  (tycon as tycon1) = tycon1 ()
 in ((*#line 648.25 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*){tyvars = tyvars,
                         tycon = tycon}(*#line 2493.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 140, ( result, tyvars1left, tycon1right), rest671)
end
|  ( 95, ( ( _, ( MlyValue.valdesc valdesc1, valdesc1left, valdesc1right)) :: rest671)) => let val  result = MlyValue.valdescs (fn _ => let val  (valdesc as valdesc1) = valdesc1 ()
 in ((*#line 651.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[valdesc](*#line 2501.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 150, ( result, valdesc1left, valdesc1right), rest671)
end
|  ( 96, ( ( _, ( MlyValue.valdescs valdescs1, _, valdescs1right)) :: _ :: ( _, ( MlyValue.valdesc valdesc1, valdesc1left, _)) :: rest671)) => let val  result = MlyValue.valdescs (fn _ => let val  (valdesc as valdesc1) = valdesc1 ()
 val  (valdescs as valdescs1) = valdescs1 ()
 in ((*#line 652.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)valdesc :: valdescs(*#line 2507.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 150, ( result, valdesc1left, valdescs1right), rest671)
end
|  ( 97, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: _ :: ( _, ( MlyValue.var var1, var1left, _)) :: rest671)) => let val  result = MlyValue.valdesc (fn _ => let val  (var as var1) = var1 ()
 val  (ty as ty1) = ty1 ()
 in ((*#line 654.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(var, ty)(*#line 2514.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 149, ( result, var1left, ty1right), rest671)
end
|  ( 98, ( ( _, ( MlyValue.exndesc exndesc1, exndesc1left, exndesc1right)) :: rest671)) => let val  result = MlyValue.exndescs (fn _ => let val  (exndesc as exndesc1) = exndesc1 ()
 in ((*#line 656.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[exndesc](*#line 2521.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 41, ( result, exndesc1left, exndesc1right), rest671)
end
|  ( 99, ( ( _, ( MlyValue.exndescs exndescs1, _, exndescs1right)) :: _ :: ( _, ( MlyValue.exndesc exndesc1, exndesc1left, _)) :: rest671)) => let val  result = MlyValue.exndescs (fn _ => let val  (exndesc as exndesc1) = exndesc1 ()
 val  (exndescs as exndescs1) = exndescs1 ()
 in ((*#line 657.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)exndesc :: exndescs(*#line 2527.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 41, ( result, exndesc1left, exndescs1right), rest671)
end
|  ( 100, ( ( _, ( MlyValue.tyOpt tyOpt1, _, tyOpt1right)) :: ( _, ( MlyValue.con con1, con1left, _)) :: rest671)) => let val  result = MlyValue.exndesc (fn _ => let val  (con as con1) = con1 ()
 val  (tyOpt as tyOpt1) = tyOpt1 ()
 in ((*#line 659.23 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(con, tyOpt)(*#line 2534.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 40, ( result, con1left, tyOpt1right), rest671)
end
|  ( 101, ( rest671)) => let val  result = MlyValue.tyOpt (fn _ => ((*#line 661.18 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)NONE(*#line 2541.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 134, ( result, defaultPos, defaultPos), rest671)
end
|  ( 102, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: ( _, ( _, OF1left, _)) :: rest671)) => let val  result = MlyValue.tyOpt (fn _ => let val  (ty as ty1) = ty1 ()
 in ((*#line 662.18 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)SOME ty(*#line 2545.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 134, ( result, OF1left, ty1right), rest671)
end
|  ( 103, ( ( _, ( MlyValue.funbinds' funbinds'1, _, funbinds'1right)) :: _ :: ( _, ( MlyValue.sigconst sigconst1, _, _)) :: _ :: ( _, ( MlyValue.fctarg fctarg1, fctargleft, fctargright)) :: _ :: ( _, ( MlyValue.fctid fctid1, fctid1left, _)) :: rest671)) => let val  result = MlyValue.funbinds (fn _ => let val  (fctid as fctid1) = fctid1 ()
 val  (fctarg as fctarg1) = fctarg1 ()
 val  (sigconst as sigconst1) = sigconst1 ()
 val  (funbinds' as funbinds'1) = funbinds'1 ()
 in ((*#line 669.13 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let val (strexp,funbinds) = funbinds'
            in {name = fctid,
                arg = FctArg.makeRegion' (fctarg, fctargleft, fctargright),
                result = sigconst,
                body = strexp}
               :: funbinds
            end(*#line 2551.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 52, ( result, fctid1left, funbinds'1right), rest671)
end
|  ( 104, ( ( _, ( MlyValue.funbinds'1 funbinds'11, _, funbinds'11right)) :: ( _, ( MlyValue.strexp1 strexp11, strexp11left, _)) :: rest671)) => let val  result = MlyValue.funbinds' (fn _ => let val  (strexp1 as strexp11) = strexp11 ()
 val  (funbinds'1 as funbinds'11) = funbinds'11 ()
 in ((*#line 677.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)augment1 (strexp1, funbinds'1)(*#line 2566.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 53, ( result, strexp11left, funbinds'11right), rest671)
end
|  ( 105, ( ( _, ( MlyValue.funbinds'2 funbinds'21, _, funbinds'21right)) :: ( _, ( MlyValue.strexp2 strexp21, strexp21left, _)) :: rest671)) => let val  result = MlyValue.funbinds' (fn _ => let val  (strexp2 as strexp21) = strexp21 ()
 val  (funbinds'2 as funbinds'21) = funbinds'21 ()
 in ((*#line 678.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(strexp2, funbinds'2)(*#line 2573.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 53, ( result, strexp21left, funbinds'21right), rest671)
end
|  ( 106, ( ( _, ( MlyValue.funbinds'2 funbinds'21, (funbinds'2left as funbinds'21left), funbinds'21right)) :: rest671)) => let val  result = MlyValue.funbinds'1 (fn _ => let val  (funbinds'2 as funbinds'21) = funbinds'21 ()
 in ((*#line 680.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[], funbinds'2left, funbinds'2(*#line 2580.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 54, ( result, funbinds'21left, funbinds'21right), rest671)
end
|  ( 107, ( ( _, ( MlyValue.funbinds'1' funbinds'1'1, _, funbinds'1'1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, WHERE1left, _)) :: rest671)) => let val  result = MlyValue.funbinds'1 (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (funbinds'1' as funbinds'1'1) = funbinds'1'1 ()
 in ((*#line 681.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec,funbinds'1')(*#line 2586.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 54, ( result, WHERE1left, funbinds'1'1right), rest671)
end
|  ( 108, ( rest671)) => let val  result = MlyValue.funbinds'2 (fn _ => ((*#line 683.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 2593.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 56, ( result, defaultPos, defaultPos), rest671)
end
|  ( 109, ( ( _, ( MlyValue.funbinds funbinds1, _, funbinds1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.funbinds'2 (fn _ => let val  (funbinds as funbinds1) = funbinds1 ()
 in ((*#line 684.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)funbinds(*#line 2597.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 56, ( result, AND1left, funbinds1right), rest671)
end
|  ( 110, ( ( _, ( MlyValue.funbinds'1 funbinds'11, funbinds'11left, funbinds'11right)) :: rest671)) => let val  result = MlyValue.funbinds'1' (fn _ => let val  (funbinds'1 as funbinds'11) = funbinds'11 ()
 in ((*#line 686.43 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)funbinds'1(*#line 2603.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 55, ( result, funbinds'11left, funbinds'11right), rest671)
end
|  ( 111, ( ( _, ( MlyValue.funbinds'1' funbinds'1'1, _, funbinds'1'1right)) :: ( _, ( MlyValue.wherespec wherespec1, _, _)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.funbinds'1' (fn _ => let val  (wherespec as wherespec1) = wherespec1 ()
 val  (funbinds'1' as funbinds'1'1) = funbinds'1'1 ()
 in ((*#line 687.43 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)cons1 (wherespec,funbinds'1')(*#line 2609.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 55, ( result, AND1left, funbinds'1'1right), rest671)
end
|  ( 112, ( ( _, ( MlyValue.sigexp sigexp1, _, sigexp1right)) :: _ :: ( _, ( MlyValue.strid strid1, strid1left, _)) :: rest671)) => let val  result = MlyValue.fctarg (fn _ => let val  (strid as strid1) = strid1 ()
 val  (sigexp as sigexp1) = sigexp1 ()
 in ((*#line 689.31 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)FctArg.Structure (strid, sigexp)(*#line 2616.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 48, ( result, strid1left, sigexp1right), rest671)
end
|  ( 113, ( ( _, ( MlyValue.specs specs1, specs1left, specs1right)) :: rest671)) => let val  result = MlyValue.fctarg (fn _ => let val  (specs as specs1) = specs1 ()
 in ((*#line 690.31 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)FctArg.Spec specs(*#line 2623.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 48, ( result, specs1left, specs1right), rest671)
end
|  ( 114, ( rest671)) => let val  result = MlyValue.decs (fn _ => ((*#line 696.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.makeRegion' (Dec.SeqDec (Vector.fromList nil),
                                          defaultPos, defaultPos)(*#line 2629.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 31, ( result, defaultPos, defaultPos), rest671)
end
|  ( 115, ( ( _, ( MlyValue.decs decs1, _, decs1right)) :: ( _, ( MlyValue.dec dec1, dec1left, _)) :: rest671)) => let val  result = MlyValue.decs (fn _ => let val  (dec as dec1) = dec1 ()
 val  (decs as decs1) = decs1 ()
 in ((*#line 698.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.sequence (dec,decs)(*#line 2634.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 31, ( result, dec1left, decs1right), rest671)
end
|  ( 116, ( ( _, ( MlyValue.decs decs1, _, decs1right)) :: ( _, ( _, SEMICOLON1left, _)) :: rest671)) => let val  result = MlyValue.decs (fn _ => let val  (decs as decs1) = decs1 ()
 in ((*#line 699.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)decs(*#line 2641.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 31, ( result, SEMICOLON1left, decs1right), rest671)
end
|  ( 117, ( ( _, ( MlyValue.decnode decnode1, (decnodeleft as decnode1left), (decnoderight as decnode1right))) :: rest671)) => let val  result = MlyValue.dec (fn _ => let val  (decnode as decnode1) = decnode1 ()
 in ((*#line 701.16 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.makeRegion' (decnode, decnodeleft, decnoderight)(*#line 2647.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 28, ( result, decnode1left, decnode1right), rest671)
end
|  ( 118, ( ( _, ( MlyValue.decnolocal decnolocal1, decnolocal1left, decnolocal1right)) :: rest671)) => let val  result = MlyValue.decnode (fn _ => let val  (decnolocal as decnolocal1) = decnolocal1 ()
 in ((*#line 703.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)decnolocal(*#line 2653.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 29, ( result, decnolocal1left, decnolocal1right), rest671)
end
|  ( 119, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.decs decs2, _, _)) :: _ :: ( _, ( MlyValue.decs decs1, _, _)) :: ( _, ( _, LOCAL1left, _)) :: rest671)) => let val  result = MlyValue.decnode (fn _ => let val  decs1 = decs1 ()
 val  decs2 = decs2 ()
 in ((*#line 704.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Local (decs1,decs2)(*#line 2659.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 29, ( result, LOCAL1left, END1right), rest671)
end
|  ( 120, ( ( _, ( MlyValue.valbindTop valbindTop1, _, valbindTop1right)) :: ( _, ( _, VAL1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (valbindTop as valbindTop1) = valbindTop1 ()
 in ((*#line 707.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Val {tyvars = Vector.fromList nil,
                                            vbs = #1 valbindTop,
                                            rvbs = #2 valbindTop}(*#line 2666.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, VAL1left, valbindTop1right), rest671)
end
|  ( 121, ( ( _, ( MlyValue.valbindTop valbindTop1, _, valbindTop1right)) :: ( _, ( MlyValue.tyvarseq tyvarseq1, _, _)) :: ( _, ( _, VAL1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (tyvarseq as tyvarseq1) = tyvarseq1 ()
 val  (valbindTop as valbindTop1) = valbindTop1 ()
 in ((*#line 710.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Val {tyvars = tyvarseq,
                                             vbs = #1 valbindTop,
                                             rvbs = #2 valbindTop}(*#line 2674.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, VAL1left, valbindTop1right), rest671)
end
|  ( 122, ( ( _, ( MlyValue.funs funs1, _, funs1right)) :: ( _, ( _, FUN1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (funs as funs1) = funs1 ()
 in ((*#line 713.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Fun (Vector.fromList nil, Vector.fromList funs)(*#line 2683.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, FUN1left, funs1right), rest671)
end
|  ( 123, ( ( _, ( MlyValue.funs funs1, _, funs1right)) :: ( _, ( MlyValue.tyvarseq tyvarseq1, _, _)) :: ( _, ( _, FUN1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (tyvarseq as tyvarseq1) = tyvarseq1 ()
 val  (funs as funs1) = funs1 ()
 in ((*#line 714.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Fun (tyvarseq, Vector.fromList funs)(*#line 2689.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, FUN1left, funs1right), rest671)
end
|  ( 124, ( ( _, ( MlyValue.typBind typBind1, _, typBind1right)) :: ( _, ( _, TYPE1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (typBind as typBind1) = typBind1 ()
 in ((*#line 715.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Type typBind(*#line 2696.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, TYPE1left, typBind1right), rest671)
end
|  ( 125, ( ( _, ( MlyValue.typBind typBind1, _, typBind1right)) :: ( _, ( _, IOTYPE1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (typBind as typBind1) = typBind1 ()
 in ((*#line 716.20 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.IoType typBind(*#line 2702.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, IOTYPE1left, typBind1right), rest671)
end
|  ( 126, ( ( _, ( MlyValue.datatypeRhs datatypeRhs1, _, datatypeRhs1right)) :: ( _, ( _, DATATYPE1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (datatypeRhs as datatypeRhs1) = datatypeRhs1 ()
 in ((*#line 717.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Datatype datatypeRhs(*#line 2708.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, DATATYPE1left, datatypeRhs1right), rest671)
end
|  ( 127, ( ( _, ( MlyValue.datBind datBind1, _, datBind1right)) :: ( _, ( _, IODATATYPE1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (datBind as datBind1) = datBind1 ()
 in ((*#line 718.24 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.IoDatatype datBind(*#line 2714.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, IODATATYPE1left, datBind1right), rest671)
end
|  ( 128, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.decs decs1, _, _)) :: _ :: ( _, ( MlyValue.datBind datBind1, _, _)) :: ( _, ( _, ABSTYPE1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (datBind as datBind1) = datBind1 ()
 val  (decs as decs1) = decs1 ()
 in ((*#line 719.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Abstype {datBind = datBind,
                                                        body = decs}(*#line 2720.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, ABSTYPE1left, END1right), rest671)
end
|  ( 129, ( ( _, ( MlyValue.ebs ebs1, _, ebs1right)) :: ( _, ( _, EXCEPTION1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (ebs as ebs1) = ebs1 ()
 in ((*#line 722.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Exception (Vector.fromList ebs)(*#line 2728.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, EXCEPTION1left, ebs1right), rest671)
end
|  ( 130, ( ( _, ( MlyValue.longstrids longstrids1, _, longstrids1right)) :: ( _, ( _, OPEN1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (longstrids as longstrids1) = longstrids1 ()
 in ((*#line 723.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Open (Vector.fromList longstrids)(*#line 2734.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, OPEN1left, longstrids1right), rest671)
end
|  ( 131, ( ( _, ( MlyValue.vids vids1, _, vids1right)) :: ( _, ( MlyValue.fixity fixity1, fixity1left, _)) :: rest671)) => let val  result = MlyValue.decnolocal (fn _ => let val  (fixity as fixity1) = fixity1 ()
 val  (vids as vids1) = vids1 ()
 in ((*#line 724.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Dec.Fix {fixity = fixity,
                                          ops = Vector.fromList vids}(*#line 2740.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 30, ( result, fixity1left, vids1right), rest671)
end
|  ( 132, ( ( _, ( MlyValue.valbind valbind1, valbind1left, valbind1right)) :: rest671)) => let val  result = MlyValue.valbindTop (fn _ => let val  (valbind as valbind1) = valbind1 ()
 in ((*#line 727.23 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
                         val (vbs, rvbs) = valbind
                      in
                         (Vector.fromList vbs,
                          Vector.fromList rvbs)
                      end(*#line 2748.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 148, ( result, valbind1left, valbind1right), rest671)
end
|  ( 133, ( ( _, ( MlyValue.valbindRest valbindRest1, _, valbindRest1right)) :: ( _, ( MlyValue.exp exp1, _, _)) :: _ :: ( _, ( MlyValue.pat pat1, pat1left, _)) :: rest671)) => let val  result = MlyValue.valbind (fn _ => let val  (pat as pat1) = pat1 ()
 val  (exp as exp1) = exp1 ()
 val  (valbindRest as valbindRest1) = valbindRest1 ()
 in ((*#line 735.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
              val (vbs, rvbs) = valbindRest
           in
              ({pat = pat, exp = exp} :: vbs,
               rvbs)
           end(*#line 2759.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 146, ( result, pat1left, valbindRest1right), rest671)
end
|  ( 134, ( ( _, ( MlyValue.rvalbind rvalbind1, _, rvalbind1right)) :: ( _, ( _, REC1left, _)) :: rest671)) => let val  result = MlyValue.valbind (fn _ => let val  (rvalbind as rvalbind1) = rvalbind1 ()
 in ((*#line 741.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], rvalbind)(*#line 2772.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 146, ( result, REC1left, rvalbind1right), rest671)
end
|  ( 135, ( rest671)) => let val  result = MlyValue.valbindRest (fn _ => ((*#line 744.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([], [])(*#line 2778.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 147, ( result, defaultPos, defaultPos), rest671)
end
|  ( 136, ( ( _, ( MlyValue.valbind valbind1, _, valbind1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.valbindRest (fn _ => let val  (valbind as valbind1) = valbind1 ()
 in ((*#line 745.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)valbind(*#line 2782.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 147, ( result, AND1left, valbind1right), rest671)
end
|  ( 137, ( ( _, ( MlyValue.rvalbind rvalbind1, _, rvalbind1right)) :: ( _, ( _, REC1left, _)) :: rest671)) => let val  result = MlyValue.rvalbind (fn _ => let val  (rvalbind as rvalbind1) = rvalbind1 ()
 in ((*#line 747.41 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)rvalbind(*#line 2788.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 86, ( result, REC1left, rvalbind1right), rest671)
end
|  ( 138, ( ( _, ( MlyValue.rvalbindRest rvalbindRest1, _, rvalbindRest1right)) :: ( _, ( MlyValue.match match1, _, _)) :: _ :: _ :: ( _, ( MlyValue.pat pat1, pat1left, _)) :: rest671)) => let val  result = MlyValue.rvalbind (fn _ => let val  (pat as pat1) = pat1 ()
 val  (match as match1) = match1 ()
 val  (rvalbindRest as rvalbindRest1) = rvalbindRest1 ()
 in ((*#line 749.14 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*){pat = pat, match = match} :: rvalbindRest(*#line 2794.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 86, ( result, pat1left, rvalbindRest1right), rest671)
end
|  ( 139, ( rest671)) => let val  result = MlyValue.rvalbindRest (fn _ => ((*#line 751.31 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 2802.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 87, ( result, defaultPos, defaultPos), rest671)
end
|  ( 140, ( ( _, ( MlyValue.rvalbind rvalbind1, _, rvalbind1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.rvalbindRest (fn _ => let val  (rvalbind as rvalbind1) = rvalbind1 ()
 in ((*#line 752.31 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)rvalbind(*#line 2806.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 87, ( result, AND1left, rvalbind1right), rest671)
end
|  ( 141, ( rest671)) => let val  result = MlyValue.constraint (fn _ => ((*#line 754.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)NONE(*#line 2812.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 17, ( result, defaultPos, defaultPos), rest671)
end
|  ( 142, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: ( _, ( _, COLON1left, _)) :: rest671)) => let val  result = MlyValue.constraint (fn _ => let val  (ty as ty1) = ty1 ()
 in ((*#line 755.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)SOME ty(*#line 2816.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 17, ( result, COLON1left, ty1right), rest671)
end
|  ( 143, ( ( _, ( MlyValue.clausesTop clausesTop1, clausesTop1left, clausesTop1right)) :: rest671)) => let val  result = MlyValue.funs (fn _ => let val  (clausesTop as clausesTop1) = clausesTop1 ()
 in ((*#line 757.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[clausesTop](*#line 2822.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 57, ( result, clausesTop1left, clausesTop1right), rest671)
end
|  ( 144, ( ( _, ( MlyValue.funs funs1, _, funs1right)) :: _ :: ( _, ( MlyValue.clausesTop clausesTop1, clausesTop1left, _)) :: rest671)) => let val  result = MlyValue.funs (fn _ => let val  (clausesTop as clausesTop1) = clausesTop1 ()
 val  (funs as funs1) = funs1 ()
 in ((*#line 758.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)clausesTop :: funs(*#line 2828.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 57, ( result, clausesTop1left, funs1right), rest671)
end
|  ( 145, ( ( _, ( MlyValue.clauses clauses1, clauses1left, clauses1right)) :: rest671)) => let val  result = MlyValue.clausesTop (fn _ => let val  (clauses as clauses1) = clauses1 ()
 in ((*#line 760.22 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vector.fromList clauses(*#line 2835.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 11, ( result, clauses1left, clauses1right), rest671)
end
|  ( 146, ( ( _, ( MlyValue.clause clause1, clause1left, clause1right)) :: rest671)) => let val  result = MlyValue.clauses (fn _ => let val  (clause as clause1) = clause1 ()
 in ((*#line 762.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[clause](*#line 2841.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 10, ( result, clause1left, clause1right), rest671)
end
|  ( 147, ( ( _, ( MlyValue.clauses clauses1, _, clauses1right)) :: _ :: ( _, ( MlyValue.clause clause1, clause1left, _)) :: rest671)) => let val  result = MlyValue.clauses (fn _ => let val  (clause as clause1) = clause1 ()
 val  (clauses as clauses1) = clauses1 ()
 in ((*#line 763.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)clause :: clauses(*#line 2847.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 10, ( result, clause1left, clauses1right), rest671)
end
|  ( 148, ( ( _, ( MlyValue.exp exp1, _, exp1right)) :: _ :: ( _, ( MlyValue.constraint constraint1, _, _)) :: ( _, ( MlyValue.apats apats1, apats1left, _)) :: rest671)) => let val  result = MlyValue.clause (fn _ => let val  (apats as apats1) = apats1 ()
 val  (constraint as constraint1) = constraint1 ()
 val  (exp as exp1) = exp1 ()
 in ((*#line 765.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*){pats = Vector.fromList apats,
                                          resultType = constraint,
                                          body = exp}(*#line 2854.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 9, ( result, apats1left, exp1right), rest671)
end
|  ( 149, ( ( _, ( MlyValue.typBind' typBind'1, (typBind'left as typBind'1left), (typBind'right as typBind'1right))) :: rest671)) => let val  result = MlyValue.typBind (fn _ => let val  (typBind' as typBind'1) = typBind'1 ()
 in ((*#line 770.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
              val typBind = Vector.fromList typBind'
              val b =
                 TypBind.makeRegion'
                 (TypBind.T typBind, typBind'left, typBind'right)
           in
              b
           end(*#line 2864.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 137, ( result, typBind'1left, typBind'1right), rest671)
end
|  ( 150, ( ( _, ( MlyValue.typBind'' typBind''1, _, typBind''1right)) :: ( _, ( MlyValue.ty ty1, _, _)) :: _ :: ( _, ( MlyValue.tycon tycon1, _, _)) :: ( _, ( MlyValue.tyvars tyvars1, tyvars1left, _)) :: rest671)) => let val  result = MlyValue.typBind' (fn _ => let val  (tyvars as tyvars1) = tyvars1 ()
 val  (tycon as tycon1) = tycon1 ()
 val  (ty as ty1) = ty1 ()
 val  (typBind'' as typBind''1) = typBind''1 ()
 in ((*#line 780.13 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*){def = ty, tycon = tycon, tyvars = tyvars} :: typBind''(*#line 2877.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 138, ( result, tyvars1left, typBind''1right), rest671)
end
|  ( 151, ( rest671)) => let val  result = MlyValue.typBind'' (fn _ => ((*#line 782.28 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 2886.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 139, ( result, defaultPos, defaultPos), rest671)
end
|  ( 152, ( ( _, ( MlyValue.typBind' typBind'1, _, typBind'1right)) :: ( _, ( _, AND1left, _)) :: rest671)) => let val  result = MlyValue.typBind'' (fn _ => let val  (typBind' as typBind'1) = typBind'1 ()
 in ((*#line 783.28 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)typBind'(*#line 2890.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 139, ( result, AND1left, typBind'1right), rest671)
end
|  ( 153, ( ( _, ( MlyValue.tyvarseq tyvarseq1, tyvarseq1left, tyvarseq1right)) :: rest671)) => let val  result = MlyValue.tyvars (fn _ => let val  (tyvarseq as tyvarseq1) = tyvarseq1 ()
 in ((*#line 786.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)tyvarseq(*#line 2896.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 144, ( result, tyvarseq1left, tyvarseq1right), rest671)
end
|  ( 154, ( rest671)) => let val  result = MlyValue.tyvars (fn _ => ((*#line 787.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vector.fromList nil(*#line 2902.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 144, ( result, defaultPos, defaultPos), rest671)
end
|  ( 155, ( ( _, ( MlyValue.tyvar tyvar1, tyvar1left, tyvar1right)) :: rest671)) => let val  result = MlyValue.tyvarseq (fn _ => let val  (tyvar as tyvar1) = tyvar1 ()
 in ((*#line 789.36 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vector.fromList [tyvar](*#line 2906.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 145, ( result, tyvar1left, tyvar1right), rest671)
end
|  ( 156, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.tyvar_pc tyvar_pc1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.tyvarseq (fn _ => let val  (tyvar_pc as tyvar_pc1) = tyvar_pc1 ()
 in ((*#line 791.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vector.fromList tyvar_pc(*#line 2912.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 145, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 157, ( ( _, ( MlyValue.tyvar tyvar1, tyvar1left, tyvar1right)) :: rest671)) => let val  result = MlyValue.tyvar_pc (fn _ => let val  (tyvar as tyvar1) = tyvar1 ()
 in ((*#line 793.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[tyvar](*#line 2918.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 143, ( result, tyvar1left, tyvar1right), rest671)
end
|  ( 158, ( ( _, ( MlyValue.tyvar_pc tyvar_pc1, _, tyvar_pc1right)) :: _ :: ( _, ( MlyValue.tyvar tyvar1, tyvar1left, _)) :: rest671)) => let val  result = MlyValue.tyvar_pc (fn _ => let val  (tyvar as tyvar1) = tyvar1 ()
 val  (tyvar_pc as tyvar_pc1) = tyvar_pc1 ()
 in ((*#line 794.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)tyvar :: tyvar_pc(*#line 2924.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 143, ( result, tyvar1left, tyvar_pc1right), rest671)
end
|  ( 159, ( ( _, ( MlyValue.constr constr1, constr1left, constr1right)) :: rest671)) => let val  result = MlyValue.constrs (fn _ => let val  (constr as constr1) = constr1 ()
 in ((*#line 796.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[constr](*#line 2931.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 18, ( result, constr1left, constr1right), rest671)
end
|  ( 160, ( ( _, ( MlyValue.constrs constrs1, _, constrs1right)) :: _ :: ( _, ( MlyValue.constr constr1, constr1left, _)) :: rest671)) => let val  result = MlyValue.constrs (fn _ => let val  (constr as constr1) = constr1 ()
 val  (constrs as constrs1) = constrs1 ()
 in ((*#line 797.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)constr :: constrs(*#line 2937.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 18, ( result, constr1left, constrs1right), rest671)
end
|  ( 161, ( ( _, ( MlyValue.opcon opcon1, opcon1left, opcon1right)) :: rest671)) => let val  result = MlyValue.constr (fn _ => let val  (opcon as opcon1) = opcon1 ()
 in ((*#line 799.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)opcon, NONE(*#line 2944.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, opcon1left, opcon1right), rest671)
end
|  ( 162, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: _ :: ( _, ( MlyValue.opcon opcon1, opcon1left, _)) :: rest671)) => let val  result = MlyValue.constr (fn _ => let val  (opcon as opcon1) = opcon1 ()
 val  (ty as ty1) = ty1 ()
 in ((*#line 800.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)opcon, SOME ty(*#line 2950.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 16, ( result, opcon1left, ty1right), rest671)
end
|  ( 163, ( ( _, ( MlyValue.con con1, con1left, con1right)) :: rest671)) => let val  result = MlyValue.opcon (fn _ => let val  (con as con1) = con1 ()
 in ((*#line 802.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)con(*#line 2957.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 74, ( result, con1left, con1right), rest671)
end
|  ( 164, ( ( _, ( MlyValue.con con1, _, con1right)) :: ( _, ( _, OP1left, _)) :: rest671)) => let val  result = MlyValue.opcon (fn _ => let val  (con as con1) = con1 ()
 in ((*#line 803.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)con(*#line 2963.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 74, ( result, OP1left, con1right), rest671)
end
|  ( 165, ( ( _, ( MlyValue.eb eb1, eb1left, eb1right)) :: rest671)) => let val  result = MlyValue.ebs (fn _ => let val  (eb as eb1) = eb1 ()
 in ((*#line 805.28 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[eb](*#line 2969.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 37, ( result, eb1left, eb1right), rest671)
end
|  ( 166, ( ( _, ( MlyValue.ebs ebs1, _, ebs1right)) :: _ :: ( _, ( MlyValue.eb eb1, eb1left, _)) :: rest671)) => let val  result = MlyValue.ebs (fn _ => let val  (eb as eb1) = eb1 ()
 val  (ebs as ebs1) = ebs1 ()
 in ((*#line 806.28 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)eb::ebs(*#line 2975.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 37, ( result, eb1left, ebs1right), rest671)
end
|  ( 167, ( ( _, ( MlyValue.ebrhs ebrhs1, _, ebrhs1right)) :: ( _, ( MlyValue.opcon opcon1, opcon1left, _)) :: rest671)) => let val  result = MlyValue.eb (fn _ => let val  (opcon as opcon1) = opcon1 ()
 val  (ebrhs as ebrhs1) = ebrhs1 ()
 in ((*#line 808.28 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(opcon, ebrhs)(*#line 2982.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 34, ( result, opcon1left, ebrhs1right), rest671)
end
|  ( 168, ( ( _, ( MlyValue.ebrhsnode ebrhsnode1, (ebrhsnodeleft as ebrhsnode1left), (ebrhsnoderight as ebrhsnode1right))) :: rest671)) => let val  result = MlyValue.ebrhs (fn _ => let val  (ebrhsnode as ebrhsnode1) = ebrhsnode1 ()
 in ((*#line 810.20 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)EbRhs.makeRegion' (ebrhsnode,
                                     ebrhsnodeleft, ebrhsnoderight)(*#line 2989.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 35, ( result, ebrhsnode1left, ebrhsnode1right), rest671)
end
|  ( 169, ( rest671)) => let val  result = MlyValue.ebrhsnode (fn _ => ((*#line 813.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)EbRhs.Gen NONE(*#line 2996.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 36, ( result, defaultPos, defaultPos), rest671)
end
|  ( 170, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: ( _, ( _, OF1left, _)) :: rest671)) => let val  result = MlyValue.ebrhsnode (fn _ => let val  (ty as ty1) = ty1 ()
 in ((*#line 814.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)EbRhs.Gen (SOME ty)(*#line 3000.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 36, ( result, OF1left, ty1right), rest671)
end
|  ( 171, ( ( _, ( MlyValue.longcon longcon1, _, longcon1right)) :: ( _, ( _, EQUALOP1left, _)) :: rest671)) => let val  result = MlyValue.ebrhsnode (fn _ => let val  (longcon as longcon1) = longcon1 ()
 in ((*#line 815.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)EbRhs.Def longcon(*#line 3006.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 36, ( result, EQUALOP1left, longcon1right), rest671)
end
|  ( 172, ( ( _, ( MlyValue.longcon longcon1, _, longcon1right)) :: _ :: ( _, ( _, EQUALOP1left, _)) :: rest671)) => let val  result = MlyValue.ebrhsnode (fn _ => let val  (longcon as longcon1) = longcon1 ()
 in ((*#line 816.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)EbRhs.Def longcon(*#line 3012.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 36, ( result, EQUALOP1left, longcon1right), rest671)
end
|  ( 173, ( ( _, ( _, INFIX1left, INFIX1right)) :: rest671)) => let val  result = MlyValue.fixity (fn _ => ((*#line 818.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Fixity.Infix NONE(*#line 3018.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 51, ( result, INFIX1left, INFIX1right), rest671)
end
|  ( 174, ( ( _, ( MlyValue.digit digit1, _, digit1right)) :: ( _, ( _, INFIX1left, _)) :: rest671)) => let val  result = MlyValue.fixity (fn _ => let val  (digit as digit1) = digit1 ()
 in ((*#line 819.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Fixity.Infix (SOME digit)(*#line 3022.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 51, ( result, INFIX1left, digit1right), rest671)
end
|  ( 175, ( ( _, ( _, INFIXR1left, INFIXR1right)) :: rest671)) => let val  result = MlyValue.fixity (fn _ => ((*#line 820.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Fixity.Infixr NONE(*#line 3028.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 51, ( result, INFIXR1left, INFIXR1right), rest671)
end
|  ( 176, ( ( _, ( MlyValue.digit digit1, _, digit1right)) :: ( _, ( _, INFIXR1left, _)) :: rest671)) => let val  result = MlyValue.fixity (fn _ => let val  (digit as digit1) = digit1 ()
 in ((*#line 821.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Fixity.Infixr (SOME digit)(*#line 3032.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 51, ( result, INFIXR1left, digit1right), rest671)
end
|  ( 177, ( ( _, ( _, NONFIX1left, NONFIX1right)) :: rest671)) => let val  result = MlyValue.fixity (fn _ => ((*#line 822.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Fixity.Nonfix(*#line 3038.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 51, ( result, NONFIX1left, NONFIX1right), rest671)
end
|  ( 178, ( ( _, ( MlyValue.INT INT1, (INTleft as INT1left), (INTright as INT1right))) :: rest671)) => let val  result = MlyValue.digit (fn _ => let val  (INT as INT1) = INT1 ()
 in ((*#line 825.5 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)
       if 1 = size INT
          then valOf (Int.fromString INT)
       else let
               open Layout
               val _ = 
                  Control.error (reg (INTleft, INTright),
                                 str "invalid digit in infix declaration",
                                 empty)
            in
               0
            end
    (*#line 3042.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 33, ( result, INT1left, INT1right), rest671)
end
|  ( 179, ( ( _, ( MlyValue.datatypeRhsnode datatypeRhsnode1, (datatypeRhsnodeleft as datatypeRhsnode1left), (datatypeRhsnoderight as datatypeRhsnode1right))) :: rest671)) => let val  result = MlyValue.datatypeRhs (fn _ => let val  (datatypeRhsnode as datatypeRhsnode1) = datatypeRhsnode1 ()
 in ((*#line 841.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)DatatypeRhs.makeRegion' (datatypeRhsnode,
                               datatypeRhsnodeleft, datatypeRhsnoderight)(*#line 3060.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 21, ( result, datatypeRhsnode1left, datatypeRhsnode1right), rest671)
end
|  ( 180, ( ( _, ( MlyValue.datatypeRhsnodeNoWithtype datatypeRhsnodeNoWithtype1, (datatypeRhsnodeNoWithtypeleft as datatypeRhsnodeNoWithtype1left), (datatypeRhsnodeNoWithtyperight as datatypeRhsnodeNoWithtype1right))) :: rest671)) => let val  result = MlyValue.datatypeRhsNoWithtype (fn _ => let val  (datatypeRhsnodeNoWithtype as datatypeRhsnodeNoWithtype1) = datatypeRhsnodeNoWithtype1 ()
 in ((*#line 846.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)DatatypeRhs.makeRegion' (datatypeRhsnodeNoWithtype,
                               datatypeRhsnodeNoWithtypeleft,
                               datatypeRhsnodeNoWithtyperight)(*#line 3067.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 22, ( result, datatypeRhsnodeNoWithtype1left, datatypeRhsnodeNoWithtype1right), rest671)
end
|  ( 181, ( ( _, ( MlyValue.repl repl1, repl1left, repl1right)) :: rest671)) => let val  result = MlyValue.datatypeRhsnode (fn _ => let val  (repl as repl1) = repl1 ()
 in ((*#line 851.25 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)repl(*#line 3075.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 23, ( result, repl1left, repl1right), rest671)
end
|  ( 182, ( ( _, ( MlyValue.datBind datBind1, datBind1left, datBind1right)) :: rest671)) => let val  result = MlyValue.datatypeRhsnode (fn _ => let val  (datBind as datBind1) = datBind1 ()
 in ((*#line 852.25 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)DatatypeRhs.DatBind datBind(*#line 3081.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 23, ( result, datBind1left, datBind1right), rest671)
end
|  ( 183, ( ( _, ( MlyValue.repl repl1, repl1left, repl1right)) :: rest671)) => let val  result = MlyValue.datatypeRhsnodeNoWithtype (fn _ => let val  (repl as repl1) = repl1 ()
 in ((*#line 855.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)repl(*#line 3087.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 24, ( result, repl1left, repl1right), rest671)
end
|  ( 184, ( ( _, ( MlyValue.datBindNoWithtype datBindNoWithtype1, datBindNoWithtype1left, datBindNoWithtype1right)) :: rest671)) => let val  result = MlyValue.datatypeRhsnodeNoWithtype (fn _ => let val  (datBindNoWithtype as datBindNoWithtype1) = datBindNoWithtype1 ()
 in ((*#line 856.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)DatatypeRhs.DatBind datBindNoWithtype(*#line 3093.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 24, ( result, datBindNoWithtype1left, datBindNoWithtype1right), rest671)
end
|  ( 185, ( ( _, ( MlyValue.longtycon longtycon1, _, longtycon1right)) :: _ :: _ :: ( _, ( MlyValue.tycon tycon1, _, _)) :: ( _, ( MlyValue.tyvars tyvars1, (tyvarsleft as tyvars1left), tyvarsright)) :: rest671)) => let val  result = MlyValue.repl (fn _ => let val  (tyvars as tyvars1) = tyvars1 ()
 val  (tycon as tycon1) = tycon1 ()
 val  (longtycon as longtycon1) = longtycon1 ()
 in ((*#line 859.9 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)if Vector.length tyvars = 0
           then ()
        else error (reg (tyvarsleft, tyvarsright),
                    "nonempty tyvars in datatype repl")
        ; DatatypeRhs.Repl {lhs = tycon, rhs = longtycon}(*#line 3099.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 83, ( result, tyvars1left, longtycon1right), rest671)
end
|  ( 186, ( ( _, ( MlyValue.withtypes withtypes1, _, (withtypesright as withtypes1right))) :: ( _, ( MlyValue.dbs dbs1, (dbsleft as dbs1left), _)) :: rest671)) => let val  result = MlyValue.datBind (fn _ => let val  (dbs as dbs1) = dbs1 ()
 val  (withtypes as withtypes1) = withtypes1 ()
 in ((*#line 867.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)DatBind.make (dbs, withtypes, dbsleft, withtypesright)(*#line 3111.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 19, ( result, dbs1left, withtypes1right), rest671)
end
|  ( 187, ( ( _, ( MlyValue.dbs dbs1, (dbsleft as dbs1left), (dbsright as dbs1right))) :: rest671)) => let val  result = MlyValue.datBindNoWithtype (fn _ => let val  (dbs as dbs1) = dbs1 ()
 in ((*#line 871.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)DatBind.make (dbs, TypBind.empty, dbsleft, dbsright)(*#line 3118.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 20, ( result, dbs1left, dbs1right), rest671)
end
|  ( 188, ( ( _, ( MlyValue.dbs' dbs'1, dbs'1left, dbs'1right)) :: rest671)) => let val  result = MlyValue.dbs (fn _ => let val  (dbs' as dbs'1) = dbs'1 ()
 in ((*#line 873.13 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vector.fromList dbs'(*#line 3124.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 26, ( result, dbs'1left, dbs'1right), rest671)
end
|  ( 189, ( ( _, ( MlyValue.db db1, db1left, db1right)) :: rest671)) => let val  result = MlyValue.dbs' (fn _ => let val  (db as db1) = db1 ()
 in ((*#line 877.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[db](*#line 3130.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 27, ( result, db1left, db1right), rest671)
end
|  ( 190, ( ( _, ( MlyValue.dbs' dbs'1, _, dbs'1right)) :: _ :: ( _, ( MlyValue.db db1, db1left, _)) :: rest671)) => let val  result = MlyValue.dbs' (fn _ => let val  (db as db1) = db1 ()
 val  (dbs' as dbs'1) = dbs'1 ()
 in ((*#line 879.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)db :: dbs'(*#line 3136.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 27, ( result, db1left, dbs'1right), rest671)
end
|  ( 191, ( ( _, ( MlyValue.constrs constrs1, _, constrs1right)) :: _ :: ( _, ( MlyValue.tycon tycon1, _, _)) :: ( _, ( MlyValue.tyvars tyvars1, tyvars1left, _)) :: rest671)) => let val  result = MlyValue.db (fn _ => let val  (tyvars as tyvars1) = tyvars1 ()
 val  (tycon as tycon1) = tycon1 ()
 val  (constrs as constrs1) = constrs1 ()
 in ((*#line 882.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*){cons = Vector.fromList constrs,
       tycon = tycon,
       tyvars = tyvars}(*#line 3143.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 25, ( result, tyvars1left, constrs1right), rest671)
end
|  ( 192, ( rest671)) => let val  result = MlyValue.withtypes (fn _ => ((*#line 888.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)TypBind.empty(*#line 3153.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 158, ( result, defaultPos, defaultPos), rest671)
end
|  ( 193, ( ( _, ( MlyValue.typBind typBind1, _, typBind1right)) :: ( _, ( _, WITHTYPE1left, _)) :: rest671)) => let val  result = MlyValue.withtypes (fn _ => let val  (typBind as typBind1) = typBind1 ()
 in ((*#line 890.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)typBind(*#line 3157.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 158, ( result, WITHTYPE1left, typBind1right), rest671)
end
|  ( 194, ( ( _, ( MlyValue.rules rules1, (rulesleft as rules1left), (rulesright as rules1right))) :: rest671)) => let val  result = MlyValue.match (fn _ => let val  (rules as rules1) = rules1 ()
 in ((*#line 892.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Match.makeRegion' (Match.T (Vector.fromList rules),
                                            rulesleft, rulesright)(*#line 3163.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 72, ( result, rules1left, rules1right), rest671)
end
|  ( 195, ( ( _, ( MlyValue.rule rule1, rule1left, rule1right)) :: rest671)) => let val  result = MlyValue.rules (fn _ => let val  (rule as rule1) = rule1 ()
 in ((*#line 896.8 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[rule](*#line 3170.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 85, ( result, rule1left, rule1right), rest671)
end
|  ( 196, ( ( _, ( MlyValue.rules rules1, _, rules1right)) :: _ :: ( _, ( MlyValue.rule rule1, rule1left, _)) :: rest671)) => let val  result = MlyValue.rules (fn _ => let val  (rule as rule1) = rule1 ()
 val  (rules as rules1) = rules1 ()
 in ((*#line 897.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)rule :: rules(*#line 3176.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 85, ( result, rule1left, rules1right), rest671)
end
|  ( 197, ( ( _, ( MlyValue.exp exp1, _, exp1right)) :: _ :: ( _, ( MlyValue.pat pat1, pat1left, _)) :: rest671)) => let val  result = MlyValue.rule (fn _ => let val  (pat as pat1) = pat1 ()
 val  (exp as exp1) = exp1 ()
 in ((*#line 899.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(pat,exp)(*#line 3183.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 84, ( result, pat1left, exp1right), rest671)
end
|  ( 198, ( ( _, ( MlyValue.exp exp1, _, exp1right)) :: _ :: ( _, ( MlyValue.field field1, field1left, _)) :: rest671)) => let val  result = MlyValue.elabel (fn _ => let val  (field as field1) = field1 ()
 val  (exp as exp1) = exp1 ()
 in ((*#line 901.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)field,exp(*#line 3190.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 38, ( result, field1left, exp1right), rest671)
end
|  ( 199, ( ( _, ( MlyValue.elabels elabels1, _, elabels1right)) :: _ :: ( _, ( MlyValue.elabel elabel1, elabel1left, _)) :: rest671)) => let val  result = MlyValue.elabels (fn _ => let val  (elabel as elabel1) = elabel1 ()
 val  (elabels as elabels1) = elabels1 ()
 in ((*#line 903.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)elabel :: elabels(*#line 3197.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 39, ( result, elabel1left, elabels1right), rest671)
end
|  ( 200, ( ( _, ( MlyValue.elabel elabel1, elabel1left, elabel1right)) :: rest671)) => let val  result = MlyValue.elabels (fn _ => let val  (elabel as elabel1) = elabel1 ()
 in ((*#line 904.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[elabel](*#line 3204.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 39, ( result, elabel1left, elabel1right), rest671)
end
|  ( 201, ( ( _, ( MlyValue.exp exp2, _, exp2right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.exp_ps (fn _ => let val  exp1 = exp1 ()
 val  exp2 = exp2 ()
 in ((*#line 906.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[exp1, exp2](*#line 3210.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 45, ( result, exp1left, exp2right), rest671)
end
|  ( 202, ( ( _, ( MlyValue.exp_ps exp_ps1, _, exp_ps1right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.exp_ps (fn _ => let val  (exp as exp1) = exp1 ()
 val  (exp_ps as exp_ps1) = exp_ps1 ()
 in ((*#line 907.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)exp :: exp_ps(*#line 3217.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 45, ( result, exp1left, exp_ps1right), rest671)
end
|  ( 203, ( ( _, ( MlyValue.expnode expnode1, (expnodeleft as expnode1left), (expnoderight as expnode1right))) :: rest671)) => let val  result = MlyValue.exp (fn _ => let val  (expnode as expnode1) = expnode1 ()
 in ((*#line 909.16 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.makeRegion' (expnode, expnodeleft, expnoderight)(*#line 3224.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 42, ( result, expnode1left, expnode1right), rest671)
end
|  ( 204, ( ( _, ( MlyValue.match match1, _, match1right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  (exp as exp1) = exp1 ()
 val  (match as match1) = match1 ()
 in ((*#line 911.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Handle (exp, match)(*#line 3230.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, exp1left, match1right), rest671)
end
|  ( 205, ( ( _, ( MlyValue.exp exp2, _, exp2right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  exp1 = exp1 ()
 val  exp2 = exp2 ()
 in ((*#line 912.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Orelse (exp1, exp2)(*#line 3237.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, exp1left, exp2right), rest671)
end
|  ( 206, ( ( _, ( MlyValue.exp exp2, _, exp2right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  exp1 = exp1 ()
 val  exp2 = exp2 ()
 in ((*#line 913.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Andalso (exp1, exp2)(*#line 3244.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, exp1left, exp2right), rest671)
end
|  ( 207, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  (exp as exp1) = exp1 ()
 val  (ty as ty1) = ty1 ()
 in ((*#line 914.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Constraint (exp, ty)(*#line 3251.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, exp1left, ty1right), rest671)
end
|  ( 208, ( ( _, ( MlyValue.app_exp app_exp1, app_exp1left, app_exp1right)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  (app_exp as app_exp1) = app_exp1 ()
 in ((*#line 915.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.FlatApp (Vector.fromList app_exp)(*#line 3258.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, app_exp1left, app_exp1right), rest671)
end
|  ( 209, ( ( _, ( MlyValue.match match1, _, match1right)) :: ( _, ( _, FN1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  (match as match1) = match1 ()
 in ((*#line 916.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Fn match(*#line 3264.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, FN1left, match1right), rest671)
end
|  ( 210, ( ( _, ( MlyValue.match match1, _, match1right)) :: _ :: ( _, ( MlyValue.exp exp1, _, _)) :: ( _, ( _, CASE1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  (exp as exp1) = exp1 ()
 val  (match as match1) = match1 ()
 in ((*#line 917.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Case (exp, match)(*#line 3270.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, CASE1left, match1right), rest671)
end
|  ( 211, ( ( _, ( MlyValue.exp exp2, _, exp2right)) :: _ :: ( _, ( MlyValue.exp exp1, _, _)) :: ( _, ( _, WHILE1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  exp1 = exp1 ()
 val  exp2 = exp2 ()
 in ((*#line 918.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.While {test = exp1, expr = exp2}(*#line 3277.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, WHILE1left, exp2right), rest671)
end
|  ( 212, ( ( _, ( MlyValue.exp exp3, _, exp3right)) :: _ :: ( _, ( MlyValue.exp exp2, _, _)) :: _ :: ( _, ( MlyValue.exp exp1, _, _)) :: ( _, ( _, IF1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  exp1 = exp1 ()
 val  exp2 = exp2 ()
 val  exp3 = exp3 ()
 in ((*#line 919.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.If (exp1, exp2, exp3)(*#line 3284.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, IF1left, exp3right), rest671)
end
|  ( 213, ( ( _, ( MlyValue.exp exp1, _, exp1right)) :: ( _, ( _, RAISE1left, _)) :: rest671)) => let val  result = MlyValue.expnode (fn _ => let val  (exp as exp1) = exp1 ()
 in ((*#line 920.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Raise exp(*#line 3292.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 46, ( result, RAISE1left, exp1right), rest671)
end
|  ( 214, ( ( _, ( MlyValue.app_exp1 app_exp11, _, app_exp11right)) :: ( _, ( MlyValue.aexp aexp1, (aexpleft as aexp1left), aexpright)) :: rest671)) => let val  result = MlyValue.app_exp (fn _ => let val  (aexp as aexp1) = aexp1 ()
 val  (app_exp1 as app_exp11) = app_exp11 ()
 in ((*#line 922.30 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.makeRegion' (aexp, aexpleft, aexpright)
                             :: app_exp1(*#line 3298.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 6, ( result, aexp1left, app_exp11right), rest671)
end
|  ( 215, ( ( _, ( MlyValue.app_exp1 app_exp11, _, app_exp11right)) :: ( _, ( MlyValue.longvid longvid1, (longvidleft as longvid1left), longvidright)) :: rest671)) => let val  result = MlyValue.app_exp (fn _ => let val  (longvid as longvid1) = longvid1 ()
 val  (app_exp1 as app_exp11) = app_exp11 ()
 in ((*#line 924.30 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.makeRegion' (Exp.Var {name = longvid,
                                                       fixop = Fixop.None},
                                             longvidleft, longvidright)
                             :: app_exp1(*#line 3306.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 6, ( result, longvid1left, app_exp11right), rest671)
end
|  ( 216, ( rest671)) => let val  result = MlyValue.app_exp1 (fn _ => ((*#line 929.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 3316.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 7, ( result, defaultPos, defaultPos), rest671)
end
|  ( 217, ( ( _, ( MlyValue.app_exp app_exp1, app_exp1left, app_exp1right)) :: rest671)) => let val  result = MlyValue.app_exp1 (fn _ => let val  (app_exp as app_exp1) = app_exp1 ()
 in ((*#line 930.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)app_exp(*#line 3320.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 7, ( result, app_exp1left, app_exp1right), rest671)
end
|  ( 218, ( ( _, ( MlyValue.longvid longvid1, _, longvid1right)) :: ( _, ( _, OP1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (longvid as longvid1) = longvid1 ()
 in ((*#line 932.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Var {name = longvid,
                                          fixop = Fixop.Op}(*#line 3326.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, OP1left, longvid1right), rest671)
end
|  ( 219, ( ( _, ( MlyValue.const const1, const1left, const1right)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (const as const1) = const1 ()
 in ((*#line 934.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Const const(*#line 3333.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, const1left, const1right), rest671)
end
|  ( 220, ( ( _, ( MlyValue.field field1, _, field1right)) :: ( _, ( _, HASH1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (field as field1) = field1 ()
 in ((*#line 935.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Selector field(*#line 3339.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, HASH1left, field1right), rest671)
end
|  ( 221, ( ( _, ( _, _, RBRACE1right)) :: ( _, ( MlyValue.elabels elabels1, _, _)) :: ( _, ( _, LBRACE1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (elabels as elabels1) = elabels1 ()
 in ((*#line 937.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Record (Record.fromVector (Vector.fromList elabels))(*#line 3345.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LBRACE1left, RBRACE1right), rest671)
end
|  ( 222, ( ( _, ( _, _, RBRACE1right)) :: ( _, ( _, LBRACE1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => ((*#line 938.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.unit(*#line 3351.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 0, ( result, LBRACE1left, RBRACE1right), rest671)
end
|  ( 223, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => ((*#line 939.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.unit(*#line 3355.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 0, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 224, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.exp exp1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (exp as exp1) = exp1 ()
 in ((*#line 940.30 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.tuple (Vector.fromList [exp])(*#line 3359.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 225, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.exp_ps exp_ps1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (exp_ps as exp_ps1) = exp_ps1 ()
 in ((*#line 941.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Seq (Vector.fromList exp_ps)(*#line 3365.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 226, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.exp_2c exp_2c1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (exp_2c as exp_2c1) = exp_2c1 ()
 in ((*#line 942.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.tuple (Vector.fromList exp_2c)(*#line 3371.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 227, ( ( _, ( _, _, RBRACKET1right)) :: ( _, ( MlyValue.exp_list exp_list1, _, _)) :: ( _, ( _, LBRACKET1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (exp_list as exp_list1) = exp_list1 ()
 in ((*#line 943.40 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.List (Vector.fromList exp_list)(*#line 3377.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LBRACKET1left, RBRACKET1right), rest671)
end
|  ( 228, ( ( _, ( _, _, RBRACKET1right)) :: ( _, ( _, LBRACKET1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => ((*#line 944.40 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.List (Vector.fromList nil)(*#line 3383.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 0, ( result, LBRACKET1left, RBRACKET1right), rest671)
end
|  ( 229, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.exp exp1, _, _)) :: _ :: ( _, ( MlyValue.decs decs1, _, _)) :: ( _, ( _, LET1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (decs as decs1) = decs1 ()
 val  (exp as exp1) = exp1 ()
 in ((*#line 945.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Let (decs, exp)(*#line 3387.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LET1left, END1right), rest671)
end
|  ( 230, ( ( _, ( _, _, END1right)) :: ( _, ( MlyValue.exp_ps exp_ps1, exp_psleft, exp_psright)) :: _ :: ( _, ( MlyValue.decs decs1, _, _)) :: ( _, ( _, LET1left, _)) :: rest671)) => let val  result = MlyValue.aexp (fn _ => let val  (decs as decs1) = decs1 ()
 val  (exp_ps as exp_ps1) = exp_ps1 ()
 in ((*#line 947.14 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Exp.Let (decs, Exp.makeRegion' (Exp.Seq (Vector.fromList exp_ps),
                                             exp_psleft,
                                             exp_psright))(*#line 3394.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 0, ( result, LET1left, END1right), rest671)
end
|  ( 231, ( ( _, ( MlyValue.exp_2c exp_2c1, _, exp_2c1right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.exp_2c (fn _ => let val  (exp as exp1) = exp1 ()
 val  (exp_2c as exp_2c1) = exp_2c1 ()
 in ((*#line 950.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)exp :: exp_2c(*#line 3403.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 43, ( result, exp1left, exp_2c1right), rest671)
end
|  ( 232, ( ( _, ( MlyValue.exp exp2, _, exp2right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.exp_2c (fn _ => let val  exp1 = exp1 ()
 val  exp2 = exp2 ()
 in ((*#line 951.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[exp1, exp2](*#line 3410.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 43, ( result, exp1left, exp2right), rest671)
end
|  ( 233, ( ( _, ( MlyValue.exp exp1, exp1left, exp1right)) :: rest671)) => let val  result = MlyValue.exp_list (fn _ => let val  (exp as exp1) = exp1 ()
 in ((*#line 953.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[exp](*#line 3417.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 44, ( result, exp1left, exp1right), rest671)
end
|  ( 234, ( ( _, ( MlyValue.exp_list exp_list1, _, exp_list1right)) :: _ :: ( _, ( MlyValue.exp exp1, exp1left, _)) :: rest671)) => let val  result = MlyValue.exp_list (fn _ => let val  (exp as exp1) = exp1 ()
 val  (exp_list as exp_list1) = exp_list1 ()
 in ((*#line 954.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)exp :: exp_list(*#line 3423.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 44, ( result, exp1left, exp_list1right), rest671)
end
|  ( 235, ( ( _, ( MlyValue.patnode patnode1, (patnodeleft as patnode1left), (patnoderight as patnode1right))) :: rest671)) => let val  result = MlyValue.pat (fn _ => let val  (patnode as patnode1) = patnode1 ()
 in ((*#line 960.16 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.makeRegion' (patnode, patnodeleft, patnoderight)(*#line 3430.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 76, ( result, patnode1left, patnode1right), rest671)
end
|  ( 236, ( ( _, ( MlyValue.pat pat2, _, pat2right)) :: _ :: ( _, ( MlyValue.pat pat1, pat1left, _)) :: rest671)) => let val  result = MlyValue.patnode (fn _ => let val  pat1 = pat1 ()
 val  pat2 = pat2 ()
 in ((*#line 962.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.makeAs (pat1, pat2)(*#line 3436.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 80, ( result, pat1left, pat2right), rest671)
end
|  ( 237, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: _ :: ( _, ( MlyValue.pat pat1, pat1left, _)) :: rest671)) => let val  result = MlyValue.patnode (fn _ => let val  (pat as pat1) = pat1 ()
 val  (ty as ty1) = ty1 ()
 in ((*#line 963.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.Constraint (pat, ty)(*#line 3443.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 80, ( result, pat1left, ty1right), rest671)
end
|  ( 238, ( ( _, ( MlyValue.apats apats1, apats1left, apats1right)) :: rest671)) => let val  result = MlyValue.patnode (fn _ => let val  (apats as apats1) = apats1 ()
 in ((*#line 964.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.FlatApp (Vector.fromList apats)(*#line 3450.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 80, ( result, apats1left, apats1right), rest671)
end
|  ( 239, ( ( _, ( MlyValue.apat apat1, apat1left, apat1right)) :: rest671)) => let val  result = MlyValue.apats (fn _ => let val  (apat as apat1) = apat1 ()
 in ((*#line 966.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[apat](*#line 3456.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 5, ( result, apat1left, apat1right), rest671)
end
|  ( 240, ( ( _, ( MlyValue.apats apats1, _, apats1right)) :: ( _, ( MlyValue.apat apat1, apat1left, _)) :: rest671)) => let val  result = MlyValue.apats (fn _ => let val  (apat as apat1) = apat1 ()
 val  (apats as apats1) = apats1 ()
 in ((*#line 967.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)apat :: apats(*#line 3462.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 5, ( result, apat1left, apats1right), rest671)
end
|  ( 241, ( ( _, ( MlyValue.apatnode apatnode1, (apatnodeleft as apatnode1left), (apatnoderight as apatnode1right))) :: rest671)) => let val  result = MlyValue.apat (fn _ => let val  (apatnode as apatnode1) = apatnode1 ()
 in ((*#line 969.18 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.makeRegion' (apatnode, apatnodeleft, apatnoderight)(*#line 3469.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 2, ( result, apatnode1left, apatnode1right), rest671)
end
|  ( 242, ( ( _, ( MlyValue.longvidNoEqual longvidNoEqual1, longvidNoEqual1left, longvidNoEqual1right)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => let val  (longvidNoEqual as longvidNoEqual1) = longvidNoEqual1 ()
 in ((*#line 971.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.Var {name = longvidNoEqual,
                                           fixop = Fixop.None}(*#line 3475.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, longvidNoEqual1left, longvidNoEqual1right), rest671)
end
|  ( 243, ( ( _, ( MlyValue.longvid longvid1, _, longvid1right)) :: ( _, ( _, OP1left, _)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => let val  (longvid as longvid1) = longvid1 ()
 in ((*#line 973.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.Var {name = longvid,
                                           fixop = Fixop.Op}(*#line 3482.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, OP1left, longvid1right), rest671)
end
|  ( 244, ( ( _, ( MlyValue.const const1, const1left, const1right)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => let val  (const as const1) = const1 ()
 in ((*#line 976.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
              val _ =
                 case Const.node const of
                    Const.Real r =>
                       let
                          open Layout
                       in
                          Control.error
                          (Const.region const,
                           seq [str "real constants are not allowed in patterns: ",
                                Const.layout const],
                           empty)
                       end
                    | _ => ()
           in
              Pat.Const const
           end(*#line 3489.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, const1left, const1right), rest671)
end
|  ( 245, ( ( _, ( _, WILD1left, WILD1right)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => ((*#line 993.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.Wild(*#line 3511.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 4, ( result, WILD1left, WILD1right), rest671)
end
|  ( 246, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.pats pats1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => let val  (pats as pats1) = pats1 ()
 in ((*#line 994.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.tuple (Vector.fromList pats)(*#line 3515.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 247, ( ( _, ( _, _, RBRACKET1right)) :: ( _, ( MlyValue.pats pats1, _, _)) :: ( _, ( _, LBRACKET1left, _)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => let val  (pats as pats1) = pats1 ()
 in ((*#line 995.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.List (Vector.fromList pats)(*#line 3521.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, LBRACKET1left, RBRACKET1right), rest671)
end
|  ( 248, ( ( _, ( _, _, RBRACE1right)) :: ( _, ( _, LBRACE1left, _)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => ((*#line 996.35 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Pat.unit(*#line 3527.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 4, ( result, LBRACE1left, RBRACE1right), rest671)
end
|  ( 249, ( ( _, ( _, _, RBRACE1right)) :: ( _, ( MlyValue.patitems patitems1, _, _)) :: ( _, ( _, LBRACE1left, _)) :: rest671)) => let val  result = MlyValue.apatnode (fn _ => let val  (patitems as patitems1) = patitems1 ()
 in ((*#line 998.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
              val (items, flexible) = patitems
           in
              Pat.Record {flexible = flexible,
                          items = Vector.fromList items}
           end(*#line 3531.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 4, ( result, LBRACE1left, RBRACE1right), rest671)
end
|  ( 250, ( rest671)) => let val  result = MlyValue.pats (fn _ => ((*#line 1005.8 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 3542.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 81, ( result, defaultPos, defaultPos), rest671)
end
|  ( 251, ( ( _, ( MlyValue.commapats commapats1, _, commapats1right)) :: ( _, ( MlyValue.pat pat1, pat1left, _)) :: rest671)) => let val  result = MlyValue.pats (fn _ => let val  (pat as pat1) = pat1 ()
 val  (commapats as commapats1) = commapats1 ()
 in ((*#line 1006.22 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)pat :: commapats(*#line 3546.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 81, ( result, pat1left, commapats1right), rest671)
end
|  ( 252, ( rest671)) => let val  result = MlyValue.commapats (fn _ => ((*#line 1008.14 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[](*#line 3553.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 12, ( result, defaultPos, defaultPos), rest671)
end
|  ( 253, ( ( _, ( MlyValue.commapats commapats1, _, commapats1right)) :: ( _, ( MlyValue.pat pat1, _, _)) :: ( _, ( _, COMMA1left, _)) :: rest671)) => let val  result = MlyValue.commapats (fn _ => let val  (pat as pat1) = pat1 ()
 val  (commapats as commapats1) = commapats1 ()
 in ((*#line 1009.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)pat :: commapats(*#line 3557.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 12, ( result, COMMA1left, commapats1right), rest671)
end
|  ( 254, ( ( _, ( MlyValue.patitems patitems1, _, patitems1right)) :: _ :: ( _, ( MlyValue.patitem patitem1, patitem1left, _)) :: rest671)) => let val  result = MlyValue.patitems (fn _ => let val  (patitem as patitem1) = patitem1 ()
 val  (patitems as patitems1) = patitems1 ()
 in ((*#line 1011.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let val (items, f) = patitems
                                    in (patitem :: items, f)
                                    end(*#line 3564.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 79, ( result, patitem1left, patitems1right), rest671)
end
|  ( 255, ( ( _, ( MlyValue.patitem patitem1, patitem1left, patitem1right)) :: rest671)) => let val  result = MlyValue.patitems (fn _ => let val  (patitem as patitem1) = patitem1 ()
 in ((*#line 1014.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[patitem], false(*#line 3573.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 79, ( result, patitem1left, patitem1right), rest671)
end
|  ( 256, ( ( _, ( _, DOTDOTDOT1left, DOTDOTDOT1right)) :: rest671)) => let val  result = MlyValue.patitems (fn _ => ((*#line 1015.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[], true(*#line 3579.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 79, ( result, DOTDOTDOT1left, DOTDOTDOT1right), rest671)
end
|  ( 257, ( ( _, ( MlyValue.pat pat1, _, pat1right)) :: _ :: ( _, ( MlyValue.field field1, field1left, _)) :: rest671)) => let val  result = MlyValue.patitem (fn _ => let val  (field as field1) = field1 ()
 val  (pat as pat1) = pat1 ()
 in ((*#line 1019.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(field, Pat.Item.Field pat)(*#line 3583.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 78, ( result, field1left, pat1right), rest671)
end
|  ( 258, ( ( _, ( MlyValue.opaspat opaspat1, _, opaspat1right)) :: ( _, ( MlyValue.constraint constraint1, _, _)) :: ( _, ( MlyValue.vidNoEqual vidNoEqual1, vidNoEqual1left, _)) :: rest671)) => let val  result = MlyValue.patitem (fn _ => let val  (vidNoEqual as vidNoEqual1) = vidNoEqual1 ()
 val  (constraint as constraint1) = constraint1 ()
 val  (opaspat as opaspat1) = opaspat1 ()
 in ((*#line 1021.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Field.Symbol (Vid.toSymbol vidNoEqual),
      Pat.Item.Vid (vidNoEqual, constraint, opaspat)(*#line 3590.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 78, ( result, vidNoEqual1left, opaspat1right), rest671)
end
|  ( 259, ( rest671)) => let val  result = MlyValue.opaspat (fn _ => ((*#line 1024.20 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)NONE(*#line 3599.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 73, ( result, defaultPos, defaultPos), rest671)
end
|  ( 260, ( ( _, ( MlyValue.pat pat1, _, pat1right)) :: ( _, ( _, AS1left, _)) :: rest671)) => let val  result = MlyValue.opaspat (fn _ => let val  (pat as pat1) = pat1 ()
 in ((*#line 1025.20 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)SOME pat(*#line 3603.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 73, ( result, AS1left, pat1right), rest671)
end
|  ( 261, ( ( _, ( MlyValue.tynode tynode1, (tynodeleft as tynode1left), (tynoderight as tynode1right))) :: rest671)) => let val  result = MlyValue.ty (fn _ => let val  (tynode as tynode1) = tynode1 ()
 in ((*#line 1031.14 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.makeRegion' (tynode, tynodeleft, tynoderight)(*#line 3609.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 129, ( result, tynode1left, tynode1right), rest671)
end
|  ( 262, ( ( _, ( MlyValue.tuple_ty tuple_ty1, tuple_ty1left, tuple_ty1right)) :: rest671)) => let val  result = MlyValue.tynode (fn _ => let val  (tuple_ty as tuple_ty1) = tuple_ty1 ()
 in ((*#line 1033.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.tuple (Vector.fromList tuple_ty)(*#line 3615.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 136, ( result, tuple_ty1left, tuple_ty1right), rest671)
end
|  ( 263, ( ( _, ( MlyValue.ty ty2, _, ty2right)) :: _ :: ( _, ( MlyValue.ty ty1, ty1left, _)) :: rest671)) => let val  result = MlyValue.tynode (fn _ => let val  ty1 = ty1 ()
 val  ty2 = ty2 ()
 in ((*#line 1034.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.arrow (ty1, ty2)(*#line 3621.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 136, ( result, ty1left, ty2right), rest671)
end
|  ( 264, ( ( _, ( MlyValue.ty'node ty'node1, ty'node1left, ty'node1right)) :: rest671)) => let val  result = MlyValue.tynode (fn _ => let val  (ty'node as ty'node1) = ty'node1 ()
 in ((*#line 1035.26 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)ty'node(*#line 3628.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 136, ( result, ty'node1left, ty'node1right), rest671)
end
|  ( 265, ( ( _, ( MlyValue.ty'node ty'node1, (ty'nodeleft as ty'node1left), (ty'noderight as ty'node1right))) :: rest671)) => let val  result = MlyValue.ty' (fn _ => let val  (ty'node as ty'node1) = ty'node1 ()
 in ((*#line 1037.16 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.makeRegion' (ty'node, ty'nodeleft, ty'noderight)(*#line 3634.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 130, ( result, ty'node1left, ty'node1right), rest671)
end
|  ( 266, ( ( _, ( MlyValue.tyvar tyvar1, tyvar1left, tyvar1right)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => let val  (tyvar as tyvar1) = tyvar1 ()
 in ((*#line 1039.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.Var tyvar(*#line 3640.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 131, ( result, tyvar1left, tyvar1right), rest671)
end
|  ( 267, ( ( _, ( _, _, RBRACE1right)) :: ( _, ( MlyValue.tlabels tlabels1, _, _)) :: ( _, ( _, LBRACE1left, _)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => let val  (tlabels as tlabels1) = tlabels1 ()
 in ((*#line 1041.12 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.Record (Srecord.fromVector (Vector.fromList tlabels))(*#line 3646.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 131, ( result, LBRACE1left, RBRACE1right), rest671)
end
|  ( 268, ( ( _, ( _, _, RBRACE1right)) :: ( _, ( _, LBRACE1left, _)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => ((*#line 1042.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.unit(*#line 3652.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 131, ( result, LBRACE1left, RBRACE1right), rest671)
end
|  ( 269, ( ( _, ( MlyValue.longtycon longtycon1, _, longtycon1right)) :: _ :: ( _, ( MlyValue.ty0_pc ty0_pc1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => let val  (ty0_pc as ty0_pc1) = ty0_pc1 ()
 val  (longtycon as longtycon1) = longtycon1 ()
 in ((*#line 1043.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.Con (longtycon,
                                                     Vector.fromList ty0_pc)(*#line 3656.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 131, ( result, LPAREN1left, longtycon1right), rest671)
end
|  ( 270, ( ( _, ( _, _, RPAREN1right)) :: ( _, ( MlyValue.ty ty1, _, _)) :: ( _, ( _, LPAREN1left, _)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => let val  (ty as ty1) = ty1 ()
 in ((*#line 1045.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.Group ty(*#line 3664.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 131, ( result, LPAREN1left, RPAREN1right), rest671)
end
|  ( 271, ( ( _, ( MlyValue.longtycon longtycon1, _, longtycon1right)) :: ( _, ( MlyValue.ty' ty'1, ty'1left, _)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => let val  (ty' as ty'1) = ty'1 ()
 val  (longtycon as longtycon1) = longtycon1 ()
 in ((*#line 1046.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.Con (longtycon,
                                                     Vector.fromList [ty'])(*#line 3670.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 131, ( result, ty'1left, longtycon1right), rest671)
end
|  ( 272, ( ( _, ( MlyValue.longtycon longtycon1, longtycon1left, longtycon1right)) :: rest671)) => let val  result = MlyValue.ty'node (fn _ => let val  (longtycon as longtycon1) = longtycon1 ()
 in ((*#line 1048.44 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Type.Con (longtycon,
                                                     Vector.fromList nil)(*#line 3678.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 131, ( result, longtycon1left, longtycon1right), rest671)
end
|  ( 273, ( ( _, ( MlyValue.ty ty1, _, ty1right)) :: _ :: ( _, ( MlyValue.field field1, field1left, _)) :: rest671)) => let val  result = MlyValue.tlabel (fn _ => let val  (field as field1) = field1 ()
 val  (ty as ty1) = ty1 ()
 in ((*#line 1051.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)field, ty(*#line 3685.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 123, ( result, field1left, ty1right), rest671)
end
|  ( 274, ( ( _, ( MlyValue.tlabels tlabels1, _, tlabels1right)) :: _ :: ( _, ( MlyValue.tlabel tlabel1, tlabel1left, _)) :: rest671)) => let val  result = MlyValue.tlabels (fn _ => let val  (tlabel as tlabel1) = tlabel1 ()
 val  (tlabels as tlabels1) = tlabels1 ()
 in ((*#line 1053.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)tlabel :: tlabels(*#line 3692.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 124, ( result, tlabel1left, tlabels1right), rest671)
end
|  ( 275, ( ( _, ( MlyValue.tlabel tlabel1, tlabel1left, tlabel1right)) :: rest671)) => let val  result = MlyValue.tlabels (fn _ => let val  (tlabel as tlabel1) = tlabel1 ()
 in ((*#line 1054.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[tlabel](*#line 3699.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 124, ( result, tlabel1left, tlabel1right), rest671)
end
|  ( 276, ( ( _, ( MlyValue.tuple_ty tuple_ty1, _, tuple_ty1right)) :: _ :: ( _, ( MlyValue.ty' ty'1, ty'1left, _)) :: rest671)) => let val  result = MlyValue.tuple_ty (fn _ => let val  (ty' as ty'1) = ty'1 ()
 val  (tuple_ty as tuple_ty1) = tuple_ty1 ()
 in ((*#line 1056.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)ty' :: tuple_ty(*#line 3705.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 128, ( result, ty'1left, tuple_ty1right), rest671)
end
|  ( 277, ( ( _, ( MlyValue.ty' ty'2, _, ty'2right)) :: _ :: ( _, ( MlyValue.ty' ty'1, ty'1left, _)) :: rest671)) => let val  result = MlyValue.tuple_ty (fn _ => let val  ty'1 = ty'1 ()
 val  ty'2 = ty'2 ()
 in ((*#line 1057.42 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[ty'1, ty'2](*#line 3712.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 128, ( result, ty'1left, ty'2right), rest671)
end
|  ( 278, ( ( _, ( MlyValue.ty ty2, _, ty2right)) :: _ :: ( _, ( MlyValue.ty ty1, ty1left, _)) :: rest671)) => let val  result = MlyValue.ty0_pc (fn _ => let val  ty1 = ty1 ()
 val  ty2 = ty2 ()
 in ((*#line 1059.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[ty1, ty2](*#line 3719.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 132, ( result, ty1left, ty2right), rest671)
end
|  ( 279, ( ( _, ( MlyValue.ty0_pc ty0_pc1, _, ty0_pc1right)) :: _ :: ( _, ( MlyValue.ty ty1, ty1left, _)) :: rest671)) => let val  result = MlyValue.ty0_pc (fn _ => let val  (ty as ty1) = ty1 ()
 val  (ty0_pc as ty0_pc1) = ty0_pc1 ()
 in ((*#line 1060.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)ty :: ty0_pc(*#line 3726.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 132, ( result, ty1left, ty0_pc1right), rest671)
end
|  ( 280, ( ( _, ( MlyValue.const' const'1, (const'left as const'1left), (const'right as const'1right))) :: rest671)) => let val  result = MlyValue.const (fn _ => let val  (const' as const'1) = const'1 ()
 in ((*#line 1066.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Const.makeRegion
                                 (const', reg (const'left, const'right))(*#line 3733.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 14, ( result, const'1left, const'1right), rest671)
end
|  ( 281, ( ( _, ( MlyValue.INT INT1, INT1left, INT1right)) :: rest671)) => let val  result = MlyValue.const' (fn _ => let val  (INT as INT1) = INT1 ()
 in ((*#line 1069.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Const.Int INT(*#line 3740.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 15, ( result, INT1left, INT1right), rest671)
end
|  ( 282, ( ( _, ( MlyValue.WORD WORD1, WORD1left, WORD1right)) :: rest671)) => let val  result = MlyValue.const' (fn _ => let val  (WORD as WORD1) = WORD1 ()
 in ((*#line 1070.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Const.Word WORD(*#line 3746.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 15, ( result, WORD1left, WORD1right), rest671)
end
|  ( 283, ( ( _, ( MlyValue.REAL REAL1, REAL1left, REAL1right)) :: rest671)) => let val  result = MlyValue.const' (fn _ => let val  (REAL as REAL1) = REAL1 ()
 in ((*#line 1071.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Const.Real REAL(*#line 3752.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 15, ( result, REAL1left, REAL1right), rest671)
end
|  ( 284, ( ( _, ( MlyValue.STRING STRING1, STRING1left, STRING1right)) :: rest671)) => let val  result = MlyValue.const' (fn _ => let val  (STRING as STRING1) = STRING1 ()
 in ((*#line 1072.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Const.String STRING(*#line 3758.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 15, ( result, STRING1left, STRING1right), rest671)
end
|  ( 285, ( ( _, ( MlyValue.CHAR CHAR1, CHAR1left, CHAR1right)) :: rest671)) => let val  result = MlyValue.const' (fn _ => let val  (CHAR as CHAR1) = CHAR1 ()
 in ((*#line 1073.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Const.Char CHAR(*#line 3764.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 15, ( result, CHAR1left, CHAR1right), rest671)
end
|  ( 286, ( ( _, ( MlyValue.longidNoAsterisk longidNoAsterisk1, longidNoAsterisk1left, longidNoAsterisk1right)) :: rest671)) => let val  result = MlyValue.idNoAsterisk (fn _ => let val  (longidNoAsterisk as longidNoAsterisk1) = longidNoAsterisk1 ()
 in ((*#line 1075.34 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)ensureNonqualified longidNoAsterisk(*#line 3770.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 60, ( result, longidNoAsterisk1left, longidNoAsterisk1right), rest671)
end
|  ( 287, ( ( _, ( MlyValue.idNoAsterisk idNoAsterisk1, idNoAsterisk1left, idNoAsterisk1right)) :: rest671)) => let val  result = MlyValue.id (fn _ => let val  (idNoAsterisk as idNoAsterisk1) = idNoAsterisk1 ()
 in ((*#line 1077.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)idNoAsterisk(*#line 3776.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 58, ( result, idNoAsterisk1left, idNoAsterisk1right), rest671)
end
|  ( 288, ( ( _, ( _, (ASTERISKleft as ASTERISK1left), (ASTERISKright as ASTERISK1right))) :: rest671)) => let val  result = MlyValue.id (fn _ => ((*#line 1078.21 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(Symbol.asterisk, reg (ASTERISKleft, ASTERISKright))(*#line 3782.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 58, ( result, ASTERISK1left, ASTERISK1right), rest671)
end
|  ( 289, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.idEqual (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1080.20 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)id(*#line 3786.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 59, ( result, id1left, id1right), rest671)
end
|  ( 290, ( ( _, ( _, (EQUALOPleft as EQUALOP1left), (EQUALOPright as EQUALOP1right))) :: rest671)) => let val  result = MlyValue.idEqual (fn _ => ((*#line 1081.20 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)(Symbol.equal, reg (EQUALOPleft, EQUALOPright))(*#line 3792.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 59, ( result, EQUALOP1left, EQUALOP1right), rest671)
end
|  ( 291, ( ( _, ( MlyValue.longidNoAsterisk longidNoAsterisk1, longidNoAsterisk1left, longidNoAsterisk1right)) :: rest671)) => let val  result = MlyValue.longid (fn _ => let val  (longidNoAsterisk as longidNoAsterisk1) = longidNoAsterisk1 ()
 in ((*#line 1084.24 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)longidNoAsterisk(*#line 3796.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 62, ( result, longidNoAsterisk1left, longidNoAsterisk1right), rest671)
end
|  ( 292, ( ( _, ( _, (ASTERISKleft as ASTERISK1left), (ASTERISKright as ASTERISK1right))) :: rest671)) => let val  result = MlyValue.longid (fn _ => ((*#line 1085.17 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([Symbol.asterisk], reg (ASTERISKleft, ASTERISKright))(*#line 3802.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 62, ( result, ASTERISK1left, ASTERISK1right), rest671)
end
|  ( 293, ( ( _, ( MlyValue.LONGID LONGID1, (LONGIDleft as LONGID1left), (LONGIDright as LONGID1right))) :: rest671)) => let val  result = MlyValue.longidNoAsterisk (fn _ => let val  (LONGID as LONGID1) = LONGID1 ()
 in ((*#line 1089.7 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)let
         val syms = List.map Symbol.fromString (String.fields (fn x => x = #".") LONGID)
      in
         (syms, reg (LONGIDleft, LONGIDright))
      end(*#line 3806.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 64, ( result, LONGID1left, LONGID1right), rest671)
end
|  ( 294, ( ( _, ( MlyValue.longid longid1, longid1left, longid1right)) :: rest671)) => let val  result = MlyValue.longidEqual (fn _ => let val  (longid as longid1) = longid1 ()
 in ((*#line 1095.25 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)longid(*#line 3816.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 63, ( result, longid1left, longid1right), rest671)
end
|  ( 295, ( ( _, ( _, (EQUALOPleft as EQUALOP1left), (EQUALOPright as EQUALOP1right))) :: rest671)) => let val  result = MlyValue.longidEqual (fn _ => ((*#line 1096.25 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)([Symbol.equal], reg (EQUALOPleft, EQUALOPright))(*#line 3822.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
))
 in ( LrTable.NT 63, ( result, EQUALOP1left, EQUALOP1right), rest671)
end
|  ( 296, ( ( _, ( MlyValue.idEqual idEqual1, idEqual1left, idEqual1right)) :: rest671)) => let val  result = MlyValue.vid (fn _ => let val  (idEqual as idEqual1) = idEqual1 ()
 in ((*#line 1098.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vid.fromSymbol idEqual(*#line 3826.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 152, ( result, idEqual1left, idEqual1right), rest671)
end
|  ( 297, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.vidNoEqual (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1099.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Vid.fromSymbol id(*#line 3832.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 153, ( result, id1left, id1right), rest671)
end
|  ( 298, ( ( _, ( MlyValue.vid vid1, vid1left, vid1right)) :: rest671)) => let val  result = MlyValue.vids (fn _ => let val  (vid as vid1) = vid1 ()
 in ((*#line 1100.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[vid](*#line 3838.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 154, ( result, vid1left, vid1right), rest671)
end
|  ( 299, ( ( _, ( MlyValue.vids vids1, _, vids1right)) :: ( _, ( MlyValue.vid vid1, vid1left, _)) :: rest671)) => let val  result = MlyValue.vids (fn _ => let val  (vid as vid1) = vid1 ()
 val  (vids as vids1) = vids1 ()
 in ((*#line 1101.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)vid::vids(*#line 3844.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 154, ( result, vid1left, vids1right), rest671)
end
|  ( 300, ( ( _, ( MlyValue.idEqual idEqual1, idEqual1left, idEqual1right)) :: rest671)) => let val  result = MlyValue.var (fn _ => let val  (idEqual as idEqual1) = idEqual1 ()
 in ((*#line 1102.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Var.fromSymbol idEqual(*#line 3851.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 151, ( result, idEqual1left, idEqual1right), rest671)
end
|  ( 301, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.con (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1103.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Con.fromSymbol id(*#line 3857.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 13, ( result, id1left, id1right), rest671)
end
|  ( 302, ( ( _, ( MlyValue.idNoAsterisk idNoAsterisk1, idNoAsterisk1left, idNoAsterisk1right)) :: rest671)) => let val  result = MlyValue.tycon (fn _ => let val  (idNoAsterisk as idNoAsterisk1) = idNoAsterisk1 ()
 in ((*#line 1104.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Tycon.fromSymbol idNoAsterisk(*#line 3863.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 135, ( result, idNoAsterisk1left, idNoAsterisk1right), rest671)
end
|  ( 303, ( ( _, ( MlyValue.TYVAR TYVAR1, (TYVARleft as TYVAR1left), (TYVARright as TYVAR1right))) :: rest671)) => let val  result = MlyValue.tyvar (fn _ => let val  (TYVAR as TYVAR1) = TYVAR1 ()
 in ((*#line 1105.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Tyvar.newString (TYVAR, {left = TYVARleft,
                                                         right = TYVARright})(*#line 3869.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 142, ( result, TYVAR1left, TYVAR1right), rest671)
end
|  ( 304, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.field (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1107.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Field.Symbol (#1 id)(*#line 3876.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 50, ( result, id1left, id1right), rest671)
end
|  ( 305, ( ( _, ( MlyValue.INT INT1, (INTleft as INT1left), (INTright as INT1right))) :: rest671)) => let val  result = MlyValue.field (fn _ => let val  (INT as INT1) = INT1 ()
 in ((*#line 1108.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Field.Int
					let
						val i = valOf (Int.fromString INT)
					in
                                   (if i <= 0
                                       then (error (reg (INTleft, INTright),
                                                    "nonpositive field")
                                             ; ~1)
                                    else
                                       i - 1)
					end
                                (*#line 3882.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 50, ( result, INT1left, INT1right), rest671)
end
|  ( 306, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.strid (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1121.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Strid.fromSymbol id(*#line 3899.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 122, ( result, id1left, id1right), rest671)
end
|  ( 307, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.sigid (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1122.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Sigid.fromSymbol id(*#line 3905.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 100, ( result, id1left, id1right), rest671)
end
|  ( 308, ( ( _, ( MlyValue.sigid sigid1, sigid1left, sigid1right)) :: rest671)) => let val  result = MlyValue.sigids (fn _ => let val  (sigid as sigid1) = sigid1 ()
 in ((*#line 1123.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[sigid](*#line 3911.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 101, ( result, sigid1left, sigid1right), rest671)
end
|  ( 309, ( ( _, ( MlyValue.sigids sigids1, _, sigids1right)) :: ( _, ( MlyValue.sigid sigid1, sigid1left, _)) :: rest671)) => let val  result = MlyValue.sigids (fn _ => let val  (sigid as sigid1) = sigid1 ()
 val  (sigids as sigids1) = sigids1 ()
 in ((*#line 1124.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)sigid :: sigids(*#line 3917.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 101, ( result, sigid1left, sigids1right), rest671)
end
|  ( 310, ( ( _, ( MlyValue.id id1, id1left, id1right)) :: rest671)) => let val  result = MlyValue.fctid (fn _ => let val  (id as id1) = id1 ()
 in ((*#line 1125.33 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Fctid.fromSymbol id(*#line 3924.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 49, ( result, id1left, id1right), rest671)
end
|  ( 311, ( ( _, ( MlyValue.longidNoAsterisk longidNoAsterisk1, longidNoAsterisk1left, longidNoAsterisk1right)) :: rest671)) => let val  result = MlyValue.longtycon (fn _ => let val  (longidNoAsterisk as longidNoAsterisk1) = longidNoAsterisk1 ()
 in ((*#line 1127.31 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Longtycon.fromSymbols longidNoAsterisk(*#line 3930.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 68, ( result, longidNoAsterisk1left, longidNoAsterisk1right), rest671)
end
|  ( 312, ( ( _, ( MlyValue.longidEqual longidEqual1, longidEqual1left, longidEqual1right)) :: rest671)) => let val  result = MlyValue.longvid (fn _ => let val  (longidEqual as longidEqual1) = longidEqual1 ()
 in ((*#line 1128.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Longvid.fromSymbols longidEqual(*#line 3936.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 70, ( result, longidEqual1left, longidEqual1right), rest671)
end
|  ( 313, ( ( _, ( MlyValue.longid longid1, longid1left, longid1right)) :: rest671)) => let val  result = MlyValue.longvidNoEqual (fn _ => let val  (longid as longid1) = longid1 ()
 in ((*#line 1129.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Longvid.fromSymbols longid(*#line 3942.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 71, ( result, longid1left, longid1right), rest671)
end
|  ( 314, ( ( _, ( MlyValue.longid longid1, longid1left, longid1right)) :: rest671)) => let val  result = MlyValue.longcon (fn _ => let val  (longid as longid1) = longid1 ()
 in ((*#line 1130.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Longcon.fromSymbols longid(*#line 3948.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 61, ( result, longid1left, longid1right), rest671)
end
|  ( 315, ( ( _, ( MlyValue.longid longid1, longid1left, longid1right)) :: rest671)) => let val  result = MlyValue.longstrid (fn _ => let val  (longid as longid1) = longid1 ()
 in ((*#line 1131.29 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)Longstrid.fromSymbols longid(*#line 3954.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 65, ( result, longid1left, longid1right), rest671)
end
|  ( 316, ( ( _, ( MlyValue.longstrid longstrid1, longstrid1left, longstrid1right)) :: rest671)) => let val  result = MlyValue.longstrids (fn _ => let val  (longstrid as longstrid1) = longstrid1 ()
 in ((*#line 1133.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)[longstrid](*#line 3960.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 67, ( result, longstrid1left, longstrid1right), rest671)
end
|  ( 317, ( ( _, ( MlyValue.longstrids longstrids1, _, longstrids1right)) :: ( _, ( MlyValue.longstrid longstrid1, longstrid1left, _)) :: rest671)) => let val  result = MlyValue.longstrids (fn _ => let val  (longstrid as longstrid1) = longstrid1 ()
 val  (longstrids as longstrids1) = longstrids1 ()
 in ((*#line 1134.37 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm"*)longstrid :: longstrids(*#line 3966.1 "/home/tsuyoshi/src/iotype/preprocessor/front-end/ml.grm.sml"*)
)
end)
 in ( LrTable.NT 67, ( result, longstrid1left, longstrids1right), rest671)
end
| _ => raise (mlyAction i392)
end
val void = MlyValue.VOID
val extract = fn a => (fn MlyValue.program x => x
| _ => let exception ParseInternal
	in raise ParseInternal end) a ()
end
end
structure Tokens : ML_TOKENS =
struct
type svalue = ParserData.svalue
type ('a,'b) token = ('a,'b) Token.token
fun CHAR (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 0,(ParserData.MlyValue.CHAR (fn () => i),p1,p2))
fun INT (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 1,(ParserData.MlyValue.INT (fn () => i),p1,p2))
fun LONGID (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 2,(ParserData.MlyValue.LONGID (fn () => i),p1,p2))
fun REAL (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 3,(ParserData.MlyValue.REAL (fn () => i),p1,p2))
fun STRING (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 4,(ParserData.MlyValue.STRING (fn () => i),p1,p2))
fun TYVAR (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 5,(ParserData.MlyValue.TYVAR (fn () => i),p1,p2))
fun WORD (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 6,(ParserData.MlyValue.WORD (fn () => i),p1,p2))
fun ABSTYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 7,(ParserData.MlyValue.VOID,p1,p2))
fun AND (p1,p2) = Token.TOKEN (ParserData.LrTable.T 8,(ParserData.MlyValue.VOID,p1,p2))
fun ANDALSO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 9,(ParserData.MlyValue.VOID,p1,p2))
fun ARROW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 10,(ParserData.MlyValue.VOID,p1,p2))
fun AS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 11,(ParserData.MlyValue.VOID,p1,p2))
fun ASTERISK (p1,p2) = Token.TOKEN (ParserData.LrTable.T 12,(ParserData.MlyValue.VOID,p1,p2))
fun BAR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 13,(ParserData.MlyValue.VOID,p1,p2))
fun CASE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 14,(ParserData.MlyValue.VOID,p1,p2))
fun COLON (p1,p2) = Token.TOKEN (ParserData.LrTable.T 15,(ParserData.MlyValue.VOID,p1,p2))
fun COLONGT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 16,(ParserData.MlyValue.VOID,p1,p2))
fun COMMA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 17,(ParserData.MlyValue.VOID,p1,p2))
fun DATATYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 18,(ParserData.MlyValue.VOID,p1,p2))
fun DOTDOTDOT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 19,(ParserData.MlyValue.VOID,p1,p2))
fun ELSE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 20,(ParserData.MlyValue.VOID,p1,p2))
fun END (p1,p2) = Token.TOKEN (ParserData.LrTable.T 21,(ParserData.MlyValue.VOID,p1,p2))
fun EOF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 22,(ParserData.MlyValue.VOID,p1,p2))
fun EQUALOP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 23,(ParserData.MlyValue.VOID,p1,p2))
fun EQTYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 24,(ParserData.MlyValue.VOID,p1,p2))
fun EXCEPTION (p1,p2) = Token.TOKEN (ParserData.LrTable.T 25,(ParserData.MlyValue.VOID,p1,p2))
fun DO (p1,p2) = Token.TOKEN (ParserData.LrTable.T 26,(ParserData.MlyValue.VOID,p1,p2))
fun DARROW (p1,p2) = Token.TOKEN (ParserData.LrTable.T 27,(ParserData.MlyValue.VOID,p1,p2))
fun FN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 28,(ParserData.MlyValue.VOID,p1,p2))
fun FUN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 29,(ParserData.MlyValue.VOID,p1,p2))
fun FUNCTOR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 30,(ParserData.MlyValue.VOID,p1,p2))
fun HANDLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 31,(ParserData.MlyValue.VOID,p1,p2))
fun HASH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 32,(ParserData.MlyValue.VOID,p1,p2))
fun IF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 33,(ParserData.MlyValue.VOID,p1,p2))
fun IN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 34,(ParserData.MlyValue.VOID,p1,p2))
fun INCLUDE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 35,(ParserData.MlyValue.VOID,p1,p2))
fun INFIX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 36,(ParserData.MlyValue.VOID,p1,p2))
fun INFIXR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 37,(ParserData.MlyValue.VOID,p1,p2))
fun IODATATYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 38,(ParserData.MlyValue.VOID,p1,p2))
fun IOEQTYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 39,(ParserData.MlyValue.VOID,p1,p2))
fun IOTYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 40,(ParserData.MlyValue.VOID,p1,p2))
fun LBRACE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 41,(ParserData.MlyValue.VOID,p1,p2))
fun LBRACKET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 42,(ParserData.MlyValue.VOID,p1,p2))
fun LET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 43,(ParserData.MlyValue.VOID,p1,p2))
fun LOCAL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 44,(ParserData.MlyValue.VOID,p1,p2))
fun LPAREN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 45,(ParserData.MlyValue.VOID,p1,p2))
fun NONFIX (p1,p2) = Token.TOKEN (ParserData.LrTable.T 46,(ParserData.MlyValue.VOID,p1,p2))
fun ORELSE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 47,(ParserData.MlyValue.VOID,p1,p2))
fun OF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 48,(ParserData.MlyValue.VOID,p1,p2))
fun OP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 49,(ParserData.MlyValue.VOID,p1,p2))
fun OPEN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 50,(ParserData.MlyValue.VOID,p1,p2))
fun RAISE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 51,(ParserData.MlyValue.VOID,p1,p2))
fun RBRACE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 52,(ParserData.MlyValue.VOID,p1,p2))
fun RBRACKET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 53,(ParserData.MlyValue.VOID,p1,p2))
fun REC (p1,p2) = Token.TOKEN (ParserData.LrTable.T 54,(ParserData.MlyValue.VOID,p1,p2))
fun RPAREN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 55,(ParserData.MlyValue.VOID,p1,p2))
fun SEMICOLON (p1,p2) = Token.TOKEN (ParserData.LrTable.T 56,(ParserData.MlyValue.VOID,p1,p2))
fun SHARING (p1,p2) = Token.TOKEN (ParserData.LrTable.T 57,(ParserData.MlyValue.VOID,p1,p2))
fun SIG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 58,(ParserData.MlyValue.VOID,p1,p2))
fun SIGNATURE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 59,(ParserData.MlyValue.VOID,p1,p2))
fun STRUCT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 60,(ParserData.MlyValue.VOID,p1,p2))
fun STRUCTURE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 61,(ParserData.MlyValue.VOID,p1,p2))
fun THEN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 62,(ParserData.MlyValue.VOID,p1,p2))
fun TYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 63,(ParserData.MlyValue.VOID,p1,p2))
fun VAL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 64,(ParserData.MlyValue.VOID,p1,p2))
fun WHERE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 65,(ParserData.MlyValue.VOID,p1,p2))
fun WHILE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 66,(ParserData.MlyValue.VOID,p1,p2))
fun WILD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 67,(ParserData.MlyValue.VOID,p1,p2))
fun WITH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 68,(ParserData.MlyValue.VOID,p1,p2))
fun WITHTYPE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 69,(ParserData.MlyValue.VOID,p1,p2))
end
end
